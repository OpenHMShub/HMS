{
  "custom": {},
  "params": {
    "activeFilter": 1,
    "activity_range": 36500,
    "searchText": "",
    "selectedAssignerId": null,
    "selectedProgram": null,
    "selectedShelter": null,
    "selectedStaffId": 244
  },
  "propConfig": {
    "params.activeFilter": {
      "binding": {
        "config": {
          "path": "/root/activeFilter.props.params.selection"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.activity_range": {
      "binding": {
        "config": {
          "path": "/root/ActivityRange.props.params.selection"
        },
        "transforms": [
          {
            "code": "\tif value \u003d\u003d 0 or value \u003d\u003d None:\n\t\treturn 36500\n\telse:\n\t\treturn value",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.searchText": {
      "binding": {
        "config": {
          "path": "/root/Search.props.params.searchText"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.selectedAssignerId": {
      "binding": {
        "config": {
          "path": "/root/assigner.props.params.selection"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.selectedProgram": {
      "binding": {
        "config": {
          "path": "/root/emvProgram.props.params.selection"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.selectedShelter": {
      "binding": {
        "config": {
          "path": "/root/emvShelter.props.params.selection"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.selectedStaffId": {
      "binding": {
        "config": {
          "path": "/root/staff.props.params.selection"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 30,
      "width": 1817
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "activeFilter"
        },
        "position": {
          "basis": "150px",
          "shrink": 0
        },
        "props": {
          "params": {
            "column_name": "timeretired",
            "filter": "AssignmentHistory",
            "key": "activeinactive",
            "options": [
              {
                "label": "Active",
                "value": 1
              },
              {
                "label": "Inactive",
                "value": 0
              },
              {
                "label": "All",
                "value": -1
              }
            ],
            "placeholder": "Active/Inactive",
            "searchType": "equals",
            "selection": 1
          },
          "path": "1_TEMPLATES/Filtering/Conditionals/Conditional_SingleDropDown_NoClear",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "emvProgram"
        },
        "position": {
          "basis": "150px",
          "shrink": 0
        },
        "props": {
          "params": {
            "actionPerformedPulse": false,
            "clear": false,
            "multiSelect": false,
            "options": [
              {
                "label": "ARP",
                "value": "ARP"
              },
              {
                "label": "Campus Store",
                "value": "Campus Store"
              },
              {
                "label": "Extended Recuperative Care",
                "value": "Extended Recuperative Care"
              },
              {
                "label": "First Steps - Welcome Dorms",
                "value": "First Steps - Welcome Dorms"
              },
              {
                "label": "First Steps/Engagement - Welcome Dorm",
                "value": "First Steps/Engagement - Welcome Dorm"
              },
              {
                "label": "Guest House",
                "value": "Guest House"
              },
              {
                "label": "Hope University",
                "value": "Hope University"
              },
              {
                "label": "Metro",
                "value": "Metro"
              },
              {
                "label": "Navigation",
                "value": "Navigation"
              },
              {
                "label": "Next Steps Residential",
                "value": "Next Steps Residential"
              },
              {
                "label": "Paticipant Escrow",
                "value": "Paticipant Escrow"
              },
              {
                "label": "Paticipant Mail Service",
                "value": "Paticipant Mail Service"
              },
              {
                "label": "Permanent Supportive Housing",
                "value": "Permanent Supportive Housing"
              },
              {
                "label": "Post-Treatment Supportive Shelter",
                "value": "Post-Treatment Supportive Shelter"
              },
              {
                "label": "Recuperative Care",
                "value": "Recuperative Care"
              },
              {
                "label": "RHP/TDOC",
                "value": "RHP/TDOC"
              },
              {
                "label": "Seeking/Pending Treatment",
                "value": "Seeking/Pending Treatment"
              },
              {
                "label": "Special Shelter",
                "value": "Special Shelter"
              },
              {
                "label": "Transitional Housing Program",
                "value": "Transitional Housing Program"
              },
              {
                "label": "Veterans Hospital to Housing",
                "value": "Veterans Hospital to Housing"
              },
              {
                "label": "Veterans Low Demand",
                "value": "Veterans Low Demand"
              },
              {
                "label": "Veterans Service Intensive",
                "value": "Veterans Service Intensive"
              },
              {
                "label": "Vine Hill Residential",
                "value": "Vine Hill Residential"
              },
              {
                "label": "Winter Shelter",
                "value": "Winter Shelter"
              }
            ],
            "placeholder": "Program",
            "selection": null
          },
          "path": "Providers/Dashboard/Components/Filters/Conditional_DropDown",
          "style": {
            "classes": "Filter/Filter_Text_TeelBlue Filter/Filter_Container"
          }
        },
        "scripts": {
          "customMethods": [
            {
              "name": "setOptions",
              "params": [],
              "script": "\t\n\tquery \u003d \"\"\"\nSELECT programName FROM interaction.Program WHERE programName IS NOT NULL AND timeRetired IS NULL ORDER BY programName\n\t\"\"\"\n\t\n\tresult \u003d system.db.runPrepQuery(query,[],\u0027HMSOps\u0027)\n\t\n\t# Version 1 set options as list of dictionaries\n\tself.props.params.options \u003d [ dict(value \u003d x[0],label \u003d x[0]) for x in result]\n"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": []
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "emvShelter"
        },
        "position": {
          "basis": "150px",
          "shrink": 0
        },
        "props": {
          "params": {
            "actionPerformedPulse": true,
            "clear": false,
            "column_name": "Gender",
            "filter": "",
            "multiSelect": false,
            "options": [
              {
                "label": "All Guest House",
                "value": "All Guest House"
              },
              {
                "label": "532 Apartments",
                "value": "532 Apartments"
              },
              {
                "label": "705 Apartments",
                "value": "705 Apartments"
              },
              {
                "label": "Hallway",
                "value": "Hallway"
              },
              {
                "label": "Next Steps Dorm",
                "value": "Next Steps Dorm"
              },
              {
                "label": "Night Shift Dorm",
                "value": "Night Shift Dorm"
              },
              {
                "label": "Respite Dorm (Men)",
                "value": "Respite Dorm (Men)"
              },
              {
                "label": "Respite Dorm (Women)",
                "value": "Respite Dorm (Women)"
              },
              {
                "label": "Special Dorm",
                "value": "Special Dorm"
              },
              {
                "label": "Veteran Service Intensive Dorm",
                "value": "Veteran Service Intensive Dorm"
              },
              {
                "label": "Veteran\u0027s Dorm",
                "value": "Veteran\u0027s Dorm"
              },
              {
                "label": "Vine Hill",
                "value": "Vine Hill"
              },
              {
                "label": "Welcome Dorm",
                "value": "Welcome Dorm"
              },
              {
                "label": "Women\u0027s Welcome Dorm",
                "value": "Women\u0027s Welcome Dorm"
              }
            ],
            "placeholder": "Shelter",
            "selection": null
          },
          "path": "Providers/Dashboard/Components/Filters/Conditional_DropDown",
          "style": {
            "classes": "Filter/Filter_Text_TeelBlue Filter/Filter_Container",
            "marginLeft": "4px"
          }
        },
        "scripts": {
          "customMethods": [
            {
              "name": "setOptions",
              "params": [],
              "script": "\t\n\tquery \u003d \"\"\" \nSELECT facilityName FROM lodging.Facility WHERE facilityName IS NOT NULL AND timeRetired IS NULL ORDER BY facilityName\n\t\"\"\"\n\t\n\tresult \u003d system.db.runPrepQuery(query,[],\u0027HMSOps\u0027)\n\t\n\t# Version 1 set options as list of dictionaries\n\tfacilityNameList \u003d [ dict(value \u003d x[0],label \u003d x[0]) for x in result]\n\tfacilityNameList.insert(0,{\u0027value\u0027:\u0027All Guest House\u0027,\u0027label\u0027:\u0027All Guest House\u0027})\n\t\n\t\n\tself.props.params.options \u003d facilityNameList\n#\tself.props.params.options \u003d [ dict(value \u003d x[0],label \u003d x[0]) for x in result]\n\t\n"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": []
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "staff"
        },
        "position": {
          "basis": "150px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "queryPath": "Filter/EmployeeDropdownList"
              },
              "type": "query"
            }
          },
          "props.params.selection": {
            "binding": {
              "config": {
                "path": "session.custom.loggedInStaffEmployeeID"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "actionPerformedPulse": false,
            "clear": false,
            "multiSelect": false,
            "placeholder": "Staff"
          },
          "path": "1_TEMPLATES/Filtering/Conditionals/Conditional_DropDown_TwoWay_Selection",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "assigner"
        },
        "position": {
          "basis": "150px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.options": {
            "binding": {
              "config": {
                "queryPath": "Filter/EmployeeDropdownList"
              },
              "type": "query"
            }
          }
        },
        "props": {
          "params": {
            "actionPerformedPulse": false,
            "clear": false,
            "multiSelect": false,
            "placeholder": "Assigner",
            "selection": null
          },
          "path": "Providers/Dashboard/Components/Filters/Conditional_DropDown",
          "style": {
            "classes": "Filter/Filter_Container"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "toExcel"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "props": {
          "params": {
            "defaultFilePrefix": "Participants"
          },
          "path": "1_TEMPLATES/Tables/TableToExcel"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "filler"
        },
        "position": {
          "basis": "200px",
          "grow": 1
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "lblSearch"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "classes": "Table/Filter_Header",
            "textAlign": "end"
          },
          "text": "Search:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Search"
        },
        "position": {
          "basis": "220px",
          "shrink": 0
        },
        "props": {
          "params": {
            "column_names": [],
            "filter": "",
            "key": " ",
            "placeholder": "Search",
            "searchText": "",
            "searchType": "like"
          },
          "path": "1_TEMPLATES/Filtering/Filters/Search_Bar",
          "style": {
            "classes": "Table/Search_Bar"
          },
          "useDefaultViewWidth": true
        },
        "type": "ia.display.view"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\t#Clear the filter components\n\tsystem.perspective.sendMessage(messageType\u003d\"clearFilter\")\n\tself.getSibling(\"emvProgram\").props.params.clear \u003d True\n\n\tself.getSibling(\"emvShelter\").props.params.clear \u003d True\n\tself.getSibling(\"staff\").props.params.clear \u003d True\n\tself.getSibling(\"assigner\").props.params.clear \u003d True\n\tself.getSibling(\"Search\").props.params.searchText \u003d \"\""
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "ClearFilters"
        },
        "position": {
          "basis": "40px",
          "shrink": 0
        },
        "props": {
          "path": "1_TEMPLATES/Filtering/Filters/ClearFilters"
        },
        "type": "ia.display.view"
      }
    ],
    "events": {
      "system": {
        "onStartup": {
          "config": {
            "script": "\tself.getChild(\"emvProgram\").setOptions()\n\tself.getChild(\"emvShelter\").setOptions()"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "style": {
        "classes": "Filter/Header_Text"
      }
    },
    "type": "ia.container.flex"
  }
}