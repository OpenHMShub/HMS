{
  "custom": {
    "edit_data": {
      "ReasonForEntry": "",
      "employee_id": -1,
      "employee_name": "",
      "participant_id": -1,
      "program_id": -1,
      "program_name": "",
      "provider_id": -1,
      "provider_name": "",
      "provider_type_id": -1,
      "reasonForEntryId": -1,
      "referral_date": {
        "$": [
          "ts",
          192,
          1756896154439
        ],
        "$ts": 1756896154439
      },
      "referral_type": "",
      "status_id": -1,
      "type_id": -1
    },
    "logEntry": {
      "dateEntry": {
        "$": [
          "ts",
          201,
          1692701783230
        ],
        "$ts": 1633811542974
      },
      "status_id": -1
    }
  },
  "params": {
    "newLogEntry": false,
    "row_data": {
      "ReasonForEntry": "",
      "employee_id": -1,
      "employee_name": "",
      "participant_id": -1,
      "program_id": -1,
      "program_name": "",
      "provider_id": -1,
      "provider_name": "",
      "provider_type_id": -1,
      "reasonForEntryId": -1,
      "referral_date": "",
      "referral_id": "",
      "referral_type": "",
      "status_id": -1,
      "type_id": -1
    },
    "size": "490px"
  },
  "propConfig": {
    "custom.edit_data": {
      "persistent": true
    },
    "custom.edit_data.referral_id": {
      "binding": {
        "config": {
          "path": "view.params.row_data.referral_id"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.custom.edit_data \u003d self.params.row_data\n\tif self.params.row_data.referral_date is None or self.params.row_data.referral_date \u003d\u003d \"\":\n\t\tself.custom.edit_data.referral_date \u003d system.date.now()"
      }
    },
    "custom.func_add_comment": {
      "persistent": true
    },
    "custom.logEntry": {
      "persistent": true
    },
    "params.newLogEntry": {
      "paramDirection": "output",
      "persistent": true
    },
    "params.row_data": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.notes": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.participant_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.program_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.provider_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.provider_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.provider_type_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.referral_date": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.referral_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.referral_type": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.status_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.type_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.size": {
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 435,
      "width": 1419
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Header"
        },
        "position": {
          "basis": "25px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.Text": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.referral_id"
              },
              "transforms": [
                {
                  "expression": "if({value} \u003d -1,\u0027New Referral\u0027,\u0027Edit Referral\u0027)",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Templates/Header"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Participant"
        },
        "position": {
          "basis": "80px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({view.custom.edit_data.referral_id} \u003e -2 , True, False)"
              },
              "type": "expr"
            }
          },
          "props.params.employee_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.employee_id"
              },
              "type": "property"
            }
          },
          "props.params.participant_id": {
            "binding": {
              "config": {
                "path": "view.params.row_data.participant_id"
              },
              "type": "property"
            }
          },
          "props.params.referral_date": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.referral_date"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Referrals/Detail/Main/Edit/ParticipantData",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({view.custom.edit_data.referral_id} \u003e -2 , True, False)"
              },
              "type": "expr"
            }
          },
          "props.params.ReasonForEntry": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.ReasonForEntry"
              },
              "type": "property"
            }
          },
          "props.params.program_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.program_id"
              },
              "type": "property"
            }
          },
          "props.params.program_name": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.program_name"
              },
              "type": "property"
            }
          },
          "props.params.provider_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.provider_id"
              },
              "type": "property"
            }
          },
          "props.params.provider_name": {
            "binding": {
              "config": {
                "path": "view.params.row_data.provider_name"
              },
              "type": "property"
            }
          },
          "props.params.provider_type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.provider_type_id"
              },
              "type": "property"
            }
          },
          "props.params.reasonForEntryId": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.reasonForEntryId"
              },
              "type": "property"
            }
          },
          "props.params.referral_id": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.referral_id"
              },
              "type": "property"
            }
          },
          "props.params.referral_type": {
            "binding": {
              "config": {
                "path": "view.params.row_data.referral_type"
              },
              "type": "property"
            }
          },
          "props.params.status_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.status_id"
              },
              "type": "property"
            }
          },
          "props.params.type_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.type_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Referrals/Detail/Main/Edit/Row1",
          "style": {
            "marginLeft": 25,
            "marginRight": 25
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "basis": "35px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.referral_id"
              },
              "transforms": [
                {
                  "code": "\tif value \u003d\u003d -1 or self.view.custom.edit_data.type_id \u003d\u003d 2:\n\t\treturn False\n\telse:\n\t\treturn True",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Referrals/Detail/Main/Edit/Row2",
          "style": {
            "marginLeft": "14px",
            "marginRight": "25px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "events": {
          "component": {
            "onRowClick": {
              "config": {
                "script": "\tsystem.perspective.print(event)\n\tproject \u003d \"HMS\"\n\tselectedColumn \u003d self.props.selection.selectedColumn\n\tif selectedColumn \u003d\u003d \u0027note_id\u0027:\n\t\trowToDelete \u003d event.row\n\t\tstatusIdToDelete \u003d event.value.status_id\n\t\tnoteIdToDelete \u003d event.value.note_id\n\t\tstatusNameToDelete \u003d event.value.status_name\n\t\tif statusNameToDelete !\u003d \u0027Created\u0027 and (self.session.custom.isManager or self.session.custom.isAdministrator or self.session.custom.isWSSupportCoordinator or self.session.custom.isWSManager or self.session.custom.isSupportCoordinator):\n\t\t\ttableData \u003d self.props.data\n\t\t\tlastRowInDataSet \u003d tableData.getRowCount() - 1\n\t\t\t\n\t\t\tif rowToDelete !\u003d 0:\n\t\t\t\tif rowToDelete \u003d\u003d lastRowInDataSet:\n\t\t\t\t\t## The entry being deleted is the latest entry\n\t\t\t\t\t## retrieve previous status id and update the referral status to that\n\t\t\t\t\tstatusIdToUpdate \u003d tableData.getValueAt(rowToDelete-1, \u0027status_id\u0027)\n\t\t\t\t\t## Update referral status to previous status\n\t\t\t\t\t#Update the referral status\n\t\t\t\t\treferral_id \u003d self.view.custom.edit_data.referral_id\n\t\t\t\t\ttime_created \u003d tableData.getValueAt(rowToDelete-1, \u0027time_created\u0027)\n\t\t\t\t\tpath \u003d \"Participants/Referrals/ReferralDetailUpdate\"\n\t\t\t\t\tparameters \u003d {\"row_id\":referral_id,\n\t\t\t\t\t\t\t\"status_id\":statusIdToUpdate,\n\t\t\t\t\t\t\t\"time_created\":time_created}\n\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t## Delete the note\n\t\t\t\tdeleteNoteQ \u003d \"DELETE FROM [participant].[ReferralLog] WHERE id \u003d ?\"\n\t\t\t\tsystem.db.runPrepUpdate(deleteNoteQ, [noteIdToDelete])\n\t\t\t\t\n\t\t\t\tif statusNameToDelete \u003d\u003d \u0027Approved\u0027:\n\t\t\t\t\t## Delete the program from Participant\n\t\t\t\t\tparticipantId \u003d self.view.custom.edit_data.participant_id\n\t\t\t\t\tprogramId \u003d self.view.custom.edit_data.program_id\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantDeleteSelectedEnrollment\"\n\t\t\t\t\tparameters \u003d {\"programId\":programId,\"participantId\":participantId}\n\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t\t\n\t\t\t\t\t## This should also delete the Waiting list entry\n\t\t\t\t\t\n\t\t\t## refresh the notes table\n\t\t\tmessageType \u003d \u0027RefreshReferralsData\u0027\n\t\t\tsystem.perspective.sendMessage(messageType)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "100%"
        },
        "propConfig": {
          "props.data": {
            "binding": {
              "config": {
                "parameters": {
                  "referral_id": "{view.params.row_data.referral_id}"
                },
                "queryPath": "Participants/Referrals/ReferralNotesSelect"
              },
              "type": "query"
            }
          }
        },
        "props": {
          "cells": {
            "allowEditOn": "single-click",
            "style": {
              "classes": "Table/Cell_Detail"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "time_created",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Date"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "status_id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Status"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "status_name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Status"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "type_id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Suspension Type"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": 155
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "type_name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Type"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "comment",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Comment"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal_Detail"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "note_id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "Participants/Referrals/Detail/Main/Edit/Button_Clear",
              "visible": true,
              "width": 40
            }
          ],
          "pager": {
            "activeOption": 5,
            "bottom": false,
            "initialOption": 5
          },
          "rows": {
            "highlight": {
              "color": "#CCFFFF",
              "enabled": false
            },
            "striped": {
              "color": {
                "even": "#8AFFFF"
              },
              "enabled": false
            }
          },
          "style": {
            "classes": "Background/Default",
            "marginLeft": "25px",
            "marginRight": "25px"
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "refreshReferralDetail",
              "pageScope": true,
              "script": "\t### Refresh data\n\t#system.perspective.print(\"Refresh Referral Detail\")\n\tself.refreshBinding(\"props.data\")\n\tself.props.selection.selectedRow \u003d None",
              "sessionScope": true,
              "viewScope": true
            }
          ]
        },
        "type": "ia.display.table"
      },
      {
        "meta": {
          "name": "EmbeddedView Row3"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.params.newLogEntry"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Referrals/Detail/Main/Edit/Row3"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row4"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.params.newLogEntry"
              },
              "type": "property"
            }
          },
          "props.params.status_id": {
            "binding": {
              "config": {
                "path": "view.custom.logEntry.status_id"
              },
              "type": "property"
            }
          },
          "props.params.time_created": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.logEntry.dateEntry"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "comment": ""
          },
          "path": "Participants/Referrals/Detail/Main/Edit/Row_Log_Entry"
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t#import time\n\t#Send the message to refresh the table\n\tmessageType \u003d \u0027RefreshReferralsData\u0027\n\tsystem.perspective.sendMessage(messageType, payload \u003d {\u0027row_num\u0027:-1})\n\t#wait for the table to refresh\n\t#self.view.params.row_data.referral_id \u003d -1\n\t#time.sleep(.900)\n\t#if len(self.parent.parent.getChild(\"FlexRepeater\").props.instances) \u003d\u003d 0:\n\t\t# Add the first comment\n\t\t#system.perspective.print(\u0027Add Comment\u0027)\n\t\t#self.view.custom.func_add_comment \u003d True\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.provider_id \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.program_id \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.provider_type_id \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.referral_id \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.reasonForEntryId \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Participant\").props.params.employee_id \u003d self.session.custom.loggedInStaffEmployeeID\n\tself.parent.parent.getChild(\"EmbeddedView Participant\").props.params.referral_date \u003d system.date.now()"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "!{view.params.newLogEntry} \u0026\u0026 ({session.custom.isWSManager} || {session.custom.isManager} || {session.custom.isCareCoordinator} || {session.custom.isAdministrator} || {session.custom.isWSSupportCoordinator} || {session.custom.isSupportCoordinator})"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "New Referral"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t\treferral_id \u003d self.view.custom.edit_data.referral_id\n\t\tif referral_id \u003d\u003d -1:#Insert new data, no row_id\n\t\t\ttype_id \u003d 1\n\t\t\ttime_created \u003d self.view.custom.edit_data.referral_date\n\t\t\tstatus_id \u003d 2\n\t\t\tuser_name \u003d self.session.props.auth.user.userName\n\t\t\tparticipant_id \u003d self.view.params.row_data.participant_id\n\t\t\tprovider_id \u003d self.view.custom.edit_data.provider_id\n\t\t\tprogram_id \u003d self.view.custom.edit_data.program_id\n\t\t\tprovider_type_id \u003d self.view.custom.edit_data.provider_type_id\n\t\t\temployee_id \u003d self.view.custom.edit_data.employee_id\n\t\t\tReasonForEntry_Id \u003d self.view.custom.edit_data.reasonForEntryId\n\t\t\tparticipant_name \u003d system.db.runScalarPrepQuery(\"SELECT firstName+\u0027 \u0027+ IsNull(NullIf(middleName + \u0027 \u0027,\u0027\u0027),\u0027\u0027) + lastName FROM participant.vwParticipantDetails WHERE participantId \u003d ?\",[participant_id])\n\t\t\tsystem.perspective.print(\"participant_name: \"+participant_name)\n\t\t\t\n\t\t\t## Check if parameters are filled in correctly \n\t\t\tvalid \u003d True\n\t\n\t\t\tif (referral_id is None):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Referral ID Error\"\n\t\t\telif (participant_id is None) or (int(participant_id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Participant ID Error\"\n\t\t\telif (provider_type_id is None) or (int(provider_type_id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select a Provider Type\"\n\t\t\telif (provider_id is None) or (int(provider_id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select a Provider\"\n\t\t\telif (program_id is None) or (int(type_id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select a Program\"\n\t\t\telif (program_id is None) or (int(program_id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select a Program\"\n\t\t\telif (provider_type_id) \u003d\u003d 7 and (int(ReasonForEntry_Id) \u003c 0):\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select a Reason for Entry\"\n\t\t\telif time_created \u003d\u003d None or time_created \u003d\u003d \"\":\n\t\t\t\tvalid \u003d False\n\t\t\t\terror_message \u003d \"Please select a Referral Date\"\n\t\t\telse:\n\t\t\t\tvalid \u003d True\n\t\t\t\t#system.perspective.print(\"Referral Data Valid\")\n\t\t\t\n\t\t\tif valid:\t\t\n\t\t\t\t### Check if the user is creating new data\n\t\t\t\n\t\t\t\t#system.perspective.print(\"Insert New Data\")\n\t\t\t\tpath \u003d \"Participants/Referrals/ReferralDetailInsert\"\n\t\t\t\tparameters \u003d {\"participant_id\":participant_id,\n\t\t\t\t\t\t\t\"provider_id\":provider_id, \n\t\t\t\t\t\t\t\"status_id\":status_id,\n\t\t\t\t\t\t\t\"type_id\":type_id,\n\t\t\t\t\t\t\t\"program_id\":program_id,\n\t\t\t\t\t\t\t\"employee_id\":employee_id,\n\t\t\t\t\t\t\t\"ReasonForEntry_Id\":ReasonForEntry_Id,\n\t\t\t\t\t\t\t\"time_created\":time_created}\n\t\t\t\treferral_row \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t#Insert the comments\n\t\t\t\tcomment \u003d \"Full referral created by \" + str(user_name)\n\t\t\t\treferral_id \u003d referral_row\n\t\t\t\tpath \u003d \"Participants/Referrals/ReferralDetailNoteInsert\"\n\t\t\t\tparameters \u003d {\"comment\":comment,\n\t\t\t\t\t\t\t\"referral_id\":referral_id,\n\t\t\t\t\t\t\t\"status_id\":status_id,\n\t\t\t\t\t\t\t\"type_id\":type_id,\n\t\t\t\t\t\t\t\"time_created\":time_created,\n\t\t\t\t\t\t\t\"user_name\":user_name}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t## also add to Congregation Activity log if provider type is Congregation\n\t\t\t\tif provider_type_id \u003d\u003d 8:\n\t\t\t\t\n\t\t\t\t\t## get the location Id \n\t\t\t\t\tsqlQ \u003d \"\"\"\n\t\t\t\t\t\t\tSELECT [shelter].Location.id FROM\n\t\t\t\t\t\t\t   [organization].[Provider] , [shelter].Location\n\t\t\t\t\t\t\t  where [organization].[Provider].id \u003d ?\n\t\t\t\t\t\t\t  AND [organization].[Provider].providerName \u003d [shelter].Location.locationName\n\t\t\t\t\t\t\t  \"\"\"\n\t\t\t\t\tlocationData \u003d system.db.runPrepQuery(sqlQ, [provider_id])\n\t\t\t\t\tif locationData is not None and locationData.getRowCount() \u003e 0:\n\t\t\t\t\t\tinsertLogQ \u003d \"INSERT INTO shelter.ActivityLog (locationId, activityType, activityDescription, referenceId, timeCreated ) VALUES (?,?,?,?,CURRENT_TIMESTAMP)\"\n\t\t\t\t\t\tsystem.db.runPrepUpdate(insertLogQ, [locationData.getValueAt(0,0),\"referral_added\",participant_name,referral_id])\n\t\t\t\t##### Refresh the table\n\t\t\t\tif Refresh:\n\t\t\t\t\t#system.perspective.print(\"Referral Query Success\")\n\t\t\t\t\tself.getSibling(\"Label\").showMessage(\"Referral Created\")\t\n\t\t\t\tmessageType \u003d \u0027RefreshReferralsData\u0027\n\t\t\t\tsystem.perspective.sendMessage(messageType)\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.provider_id \u003d -1\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.program_id \u003d -1\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.provider_type_id \u003d -1\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.referral_id \u003d -1\n\t\t\telse:\n\t\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\t\telse:#Exisitng referral, New Log Entry\n\t\t\t#system.perspective.print(\u0027Add Referral Log Entry\u0027)\n\t\t\t#Set the initial varibles\n\t\t\tself.view.custom.logEntry.dateEntry \u003d system.date.now()\n#\t\t\tself.view.custom.logEntry.status_id \u003d self.view.params.row_data.status_id\n\t\t\tself.view.custom.logEntry.status_id \u003d -1\n\t\t\tself.view.params.newLogEntry \u003d True\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReferralDetailEdit button_save\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tsystem.perspective.print(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.custom.edit_data.referral_id"
                  },
                  "transforms": [
                    {
                      "code": "\tif value !\u003d -1 and self.view.custom.edit_data.type_id \u003d\u003d 2:\n\t\treturn False\n\telse:\n\t\tif not self.view.params.newLogEntry and (self.session.custom.isWSManager or self.session.custom.isManager or self.session.custom.isCareCoordinator or self.session.custom.isAdministrator or self.session.custom.isWSSupportCoordinator or self.session.custom.isSupportCoordinator):\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.referral_id} \u003d -1,\u0027Save Referral\u0027,\u0027New Log Entry\u0027)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\t\n\ttry:\n\t\t### Declare parameters\n\t\tproject \u003d \"HMS\" \n\t\treferral_id \u003d self.view.custom.edit_data.referral_id\n\t\t\t\t\t\n\t\t#Query and delete all comments linked to the referral\n\t\tpath \u003d \"Participants/Referrals/ReferralNotesSelect\"\n\t\tparameters \u003d {\"referral_id\":referral_id}\n\t\tcomment_list \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t#system.perspective.print(service_list.getRowCount())\n\t\tif comment_list.getRowCount():\n\t\t\tfor comment in range(comment_list.getRowCount()):\n\t\t\t\tcomment_id \u003d comment_list.getValueAt(comment,\u0027note_id\u0027)\n\t\t\t\t#Delete the comment\n\t\t\t\tpath \u003d \"Participants/Referrals/ReferralNotesDelete\"\n\t\t\t\tparameters \u003d {\"row_id\":comment_id}\n\t\t\t\t#system.perspective.print(\u0027Delete Service: \u0027 + str(service))\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t#Delete the Referral\n\t\tpath \u003d \"Participants/Referrals/ReferralDetailDelete\"\n\t\tparameters \u003d {\"row_id\":referral_id}\n\t\t#system.perspective.print(\u0027Delete Case Note: \u0027 + str(note_id))\n\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\t\n\n\t\t##### Refresh the table\n\t\tself.getSibling(\"Label\").showMessage(\"Referral Deleted\")\n\t\tsystem.perspective.sendMessage(messageType\u003d\"RefreshReferralsData\", payload\u003d{\u0027row_num\u0027:-1}, scope\u003d\"session\")\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReferralsDetailEdit button_delete\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while deleting data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_delete"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.referral_id} \u003e 0 \u0026\u0026 !({view.params.newLogEntry}) \u0026\u0026 ({session.custom.isAdministrator}), True, False)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Delete Referral"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t\tcomment \u003d self.parent.parent.getChild(\"EmbeddedView Row4\").props.params.comment\n\t\treferral_id \u003d self.view.custom.edit_data.referral_id\n\t\ttime_created \u003d self.parent.parent.getChild(\"EmbeddedView Row4\").props.params.time_created\n\t\tuser_name \u003d self.session.props.auth.user.userName\n\t\ttype_id \u003d 1\n\t\tstatus_id \u003d self.parent.parent.getChild(\"EmbeddedView Row4\").props.params.status_id\n\t\tparticipant_id \u003d self.view.custom.edit_data.participant_id\n\t\tprogram_id \u003d self.view.custom.edit_data.program_id\n\t\tparticipant_name \u003d system.db.runScalarPrepQuery(\"SELECT firstName+\u0027 \u0027+ IsNull(NullIf(middleName + \u0027 \u0027,\u0027\u0027),\u0027\u0027) + lastName FROM participant.vwParticipantDetails WHERE participantId \u003d ?\",[participant_id])\n\t\tsystem.perspective.print(\"participant_name: \"+participant_name)\n\t\t## Check if parameters are filled in correctly \n\t\tvalid \u003d True\n\t\tif (referral_id is None):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Referral ID Error\"\n\t\telif (status_id is None) or (int(status_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terror_message \u003d \"Referral Status ID Error\"\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t\t#system.perspective.print(\"Referral Log Data Valid\")\n\t\tif valid:\t\t\n\t\t\t#Update the referral status\n\t\t\tpath \u003d \"Participants/Referrals/ReferralDetailUpdate\"\n\t\t\tparameters \u003d {\"row_id\":referral_id,\n\t\t\t\t\t\"status_id\":status_id,\n\t\t\t\t\t\"latestReferralUpdate\":time_created}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t#Insert the log note\n\t\t\tpath \u003d \"Participants/Referrals/ReferralDetailNoteInsert\"\n\t\t\tparameters \u003d {\"comment\":comment,\n\t\t\t\t\t\t\"referral_id\":referral_id,\n\t\t\t\t\t\t\"status_id\":status_id,\n\t\t\t\t\t\t\"type_id\":type_id,\n\t\t\t\t\t\t\"time_created\":time_created,\n\t\t\t\t\t\t\"user_name\":user_name}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\n\t\t\t## if status is approved i.e. status_id \u003d 5 then create program in partcipants\n\t\t\t# Commenting out below as per ticket #147\n#\t\t\tif int(status_id) \u003d\u003d 5:\n#\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n#\t\t\t\tparameters \u003d {\"programId\":program_id,\"participantId\":participant_id}\n##\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n#\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\n\t\t\t# End Change as per ticket #147\n\t\t\t##### Refresh the table\n\t\t\tif Refresh:\n\t\t\t\t#system.perspective.print(\"Referral Query Success\")\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Referral Log Entry Created\")\t\n\t\t\tmessageType \u003d \u0027RefreshReferralsData\u0027\n\t\t\tsystem.perspective.sendMessage(messageType)\n\t\t\tself.view.params.newLogEntry \u003d False\n\t\t\t## also add to Congregation Activity log if provider type is Congregation\n\t\t\tprovider_type_id \u003d self.view.params.row_data.provider_type_id\n\t\t\tprovider_id \u003d self.view.params.row_data.provider_id\n\t\t\tif provider_type_id \u003d\u003d 8:\n\t\t\t\t## get the location Id \n\t\t\t\tsqlQ \u003d \"\"\"\n\t\t\t\t\t\tSELECT [shelter].Location.id FROM\n\t\t\t\t\t\t   [organization].[Provider] , [shelter].Location\n\t\t\t\t\t\t  where [organization].[Provider].id \u003d ?\n\t\t\t\t\t\t  AND [organization].[Provider].providerName \u003d [shelter].Location.locationName\n\t\t\t\t\t\t  \"\"\"\n\t\t\t\tlocationData \u003d system.db.runPrepQuery(sqlQ, [provider_id])\n\t\t\t\tif locationData is not None and locationData.getRowCount() \u003e 0:\n\t\t\t\t\tinsertLogQ \u003d \"INSERT INTO shelter.ActivityLog (locationId, activityType, activityDescription, referenceId, timeCreated ) VALUES (?,?,?,?,CURRENT_TIMESTAMP)\"\n\t\t\t\t\tsystem.db.runPrepUpdate(insertLogQ, [locationData.getValueAt(0,0),\"referral_changed\",participant_name,referral_id])\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(error_message)\n\t\t\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReferralDetailEdit button_save_log_entry\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_save_log_entry"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.params.newLogEntry} \u0026\u0026 ({session.custom.isWSManager} || {session.custom.isManager} || {session.custom.isCareCoordinator} || {session.custom.isAdministrator} || {session.custom.isWSSupportCoordinator} || {session.custom.isSupportCoordinator})"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Save"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\timport traceback\n\ttry:\n\n\t\tself.view.params.newLogEntry \u003d False\n\n\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants ReinstatementDetailEdit New Log Cancel Button\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_cancel"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "{view.params.newLogEntry} \u0026\u0026 ({session.custom.isWSManager} || {session.custom.isManager} || {session.custom.isCareCoordinator} || {session.custom.isAdministrator} || {session.custom.isWSSupportCoordinator} || {session.custom.isSupportCoordinator})"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Cancel"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Something went wrong while saving data. Please try again."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(3)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\u0027Row:\u0027 +\r\n{view.custom.edit_data.referral_id} +\r\n\u0027, Type:\u0027 +\r\n{view.custom.edit_data.type_id} + \r\n\u0027, Status:\u0027 +\r\n{view.custom.edit_data.status_id} +\r\n\u0027, Program:\u0027 +\r\n{view.custom.edit_data.program_id} +\r\n\u0027, Participant:\u0027 +\r\n{view.custom.edit_data.participant_id}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}