{
  "custom": {
    "Filters": {
      "category": -1,
      "dateRangeFrom": "12/27/2022 00:00:00",
      "dateRangeTo": "12/27/2023 23:59:59",
      "eventName": "",
      "searchText": ""
    },
    "reset": false
  },
  "params": {
    "Filters": {
      "category": -1,
      "dateRangeFrom": "12/27/2022 00:00:00",
      "dateRangeTo": "12/27/2023 23:59:59",
      "eventName": "",
      "searchText": ""
    },
    "fetch": null,
    "participantId": -1,
    "resultRowCount": 208
  },
  "propConfig": {
    "custom.Filters": {
      "persistent": true
    },
    "custom.reset": {
      "onChange": {
        "enabled": false,
        "script": "\tself.custom.reset \u003d False\n\tpayload \u003d self.params.Filters\n\t# get shelter list\n\tquery_shelter \u003d \"\"\"\n\tSELECT facilityName FROM lodging.Facility WHERE facilityName IS NOT NULL AND timeRetired IS NULL ORDER BY facilityName\n\t\t\"\"\"\n\tresult_shelter \u003d system.db.runPrepQuery(query_shelter,[],\u0027HMSOps\u0027)\n\tshelterList \u003d \u0027\u0027\n\tif payload[\u0027shelter\u0027] !\u003d None and payload[\u0027shelter\u0027] !\u003d \u0027\u0027:\n\t\tfor shelter in payload[\u0027shelter\u0027]:\n\t\t\tsystem.perspective.print(shelter)\n\t\t\tif shelter \u003d\u003d \u0027All Guest House\u0027:\n\t\t\t\tquery \u003d \"\"\"\n\t\t\t\tSELECT facilityName FROM lodging.Facility WHERE facilityName IS NOT NULL AND facilityName NOT IN (\u0027532 Apartments\u0027,\u0027705 Apartments\u0027) AND timeRetired IS NULL ORDER BY facilityName\n\t\t\t\t\t\"\"\"\n\t\t\t\tresult \u003d system.db.runPrepQuery(query,[],\u0027HMSOps\u0027)\n\t\t\t\tshelter_All \u003d [ dict(shelter_one \u003d x[0]) for x in result]\n\t\t\t\tfor shelter_one in shelter_All:\n\t\t\t\t\tif shelterList !\u003d \u0027\u0027:\n\t\t\t\t\t\tshelterList \u003d shelterList + \", \u0027\" + (str(shelter_one[\u0027shelter_one\u0027])).replace(\"\u0027\",\"\u0027\u0027\") + \"\u0027\"\n\t\t\t\t\telse:\n\t\t\t\t\t\tshelterList \u003d shelterList + \"\u0027\" + (str(shelter_one[\u0027shelter_one\u0027])).replace(\"\u0027\",\"\u0027\u0027\") + \"\u0027\"\n\t\t\t\tsystem.perspective.print(shelterList)\n\t\t\telse:\n\t\t\t\tif shelterList !\u003d \u0027\u0027:\n\t\t\t\t\tshelterList \u003d shelterList + \", \u0027\" + (str(shelter)).replace(\"\u0027\",\"\u0027\u0027\") + \"\u0027\"\n\t\t\t\telse:\n\t\t\t\t\tshelterList \u003d shelterList + \"\u0027\" + (str(shelter)).replace(\"\u0027\",\"\u0027\u0027\") + \"\u0027\"\n\t\tshelterList \u003d \u0027(\u0027 + str(shelterList) + \u0027)\u0027\n\telse:\n\t\tshelterAll \u003d [ dict(shelter \u003d x[0]) for x in result_shelter]\n\t\tfor shelter in shelterAll:\n\t\t\tif shelterList !\u003d \u0027\u0027:\n\t\t\t\tshelterList \u003d shelterList + \", \u0027\" + (str(shelter[\u0027shelter\u0027])).replace(\"\u0027\",\"\u0027\u0027\") + \"\u0027\"\n\t\t\telse:\n\t\t\t\tshelterList \u003d shelterList + \"\u0027\" + (str(shelter[\u0027shelter\u0027])).replace(\"\u0027\",\"\u0027\u0027\") + \"\u0027\"\n\t\tshelterList \u003d \u0027(\u0027 + str(shelterList) + \u0027)\u0027\n\t\n\t# Get program list\n\tquery_program \u003d \"\"\"\n\tSELECT programName FROM interaction.Program WHERE programName IS NOT NULL ORDER BY programName\n\t\t\"\"\"\n\tresult_program \u003d system.db.runPrepQuery(query_program,[],\u0027HMSOps\u0027)\t\n\tprogramList \u003d \u0027\u0027\n\tif payload[\u0027program\u0027] !\u003d None and payload[\u0027program\u0027] !\u003d \u0027\u0027:\n\t\tfor program in payload[\u0027program\u0027]:\n\t\t\tif programList !\u003d \u0027\u0027:\n\t\t\t\tprogramList \u003d programList + \", \u0027\" + str(program) + \"\u0027\"\n\t\t\telse:\n\t\t\t\tprogramList \u003d programList + \"\u0027\" + str(program) + \"\u0027\"\n\t\tprogramList \u003d \u0027(\u0027 + str(programList) + \u0027)\u0027\n\telse:\n\t\tprogramAll \u003d [ dict(program \u003d x[0]) for x in result_program]\n\t\tprogramList \u003d \"\u0027 \u0027\"\n\t\tfor program in programAll:\n\t\t\tif programList !\u003d \u0027\u0027:\n\t\t\t\tprogramList \u003d programList + \", \u0027\" + str(program[\u0027program\u0027]) + \"\u0027\"\n\t\t\telse:\n\t\t\t\tprogramList \u003d programList + \"\u0027\" + str(program[\u0027program\u0027]) + \"\u0027\"\n\t\tprogramList \u003d \u0027(\u0027 + str(programList) + \u0027)\u0027\n\n\t# append payload values to filter\t\n\tFilters \u003d {\n\t\t\t  \"shelter\": shelterList,\n\t\t\t  \"program\": programList,\n\t\t\t  \"dateRangeTo\": payload[\u0027dateRangeTo\u0027],\n\t\t\t  \"dateRangeFrom\": payload[\u0027dateRangeFrom\u0027],\n\t\t\t  \"searchText\": payload[\u0027searchText\u0027]\n\t\t\t}\n\tself.custom.Filters \u003d Filters"
      },
      "persistent": true
    },
    "params.Filters": {
      "onChange": {
        "enabled": null,
        "script": "\tself.custom.Filters \u003d currentValue.value"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.fetch": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.participantId": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.resultRowCount": {
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 1053,
      "width": 1650
    }
  },
  "root": {
    "children": [
      {
        "custom": {
          "PayloadData": {
            "dateRangeFrom": "",
            "dateRangeTo": "",
            "exitDestinationId": null,
            "gender": null,
            "maxAge": null,
            "minAge": null,
            "program": null,
            "race": null,
            "searchText": "",
            "shelter": null
          },
          "_devPulse": false,
          "_devTxt": "",
          "_isDev": false,
          "jsonLastPayload": "{\"searchText\":\"\",\"shelter\":null,\"gender\":null,\"race\":null,\"maxAge\":90,\"minAge\":18,\"program\":null,\"dateRangeTo\":\"09/20/2022\",\"dateRangeFrom\":\"06/01/2022\"}",
          "lastPayload": {
            "dateRangeFrom": "06/01/2022",
            "dateRangeTo": "09/20/2022",
            "exitDestinationId": null,
            "gender": null,
            "maxAge": 90,
            "minAge": 18,
            "program": null,
            "race": null,
            "searchText": "",
            "shelter": null
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "100%",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "custom._devPulse": {
            "onChange": {
              "enabled": null,
              "script": "\tif self.custom._isDev:\n\t\tif currentValue.value is True:\n\t\t\tpayload \u003d {}\n\t\t\t\n#\t\t\tpayload[\u0027countReferralFromTo\u0027] \u003d [1,5]\n#\t\t\tpayload[\u0027providerTypeId\u0027] \u003d [0,2]\n\t\t\tpayload[\u0027shelter\u0027] \u003d None\n\t\t\tpayload[\u0027program\u0027] \u003d None\n\t\t\tpayload[\u0027gender\u0027] \u003d None\n\t\t\tpayload[\u0027race\u0027] \u003d None\n\t\t\tpayload[\u0027minAge\u0027] \u003d 18\n\t\t\tpayload[\u0027maxAge\u0027] \u003d 90\n\t\t\tpayload[\u0027dateRangeFrom\u0027] \u003d \u002706/01/2022\u0027 \n\t\t\tpayload[\u0027dateRangeTo\u0027] \u003d \u002709/20/2022\u0027\n\t\t\tpayload[\u0027searchText\u0027] \u003d \"\"\n\t\t\t#payload[\u0027fetch\u0027] \u003d 12\n\t\t\t\n\t\t\tsystem.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\t\t\tself.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\n\t\telse:\n\t\t\t#payload \u003d {}\n\t\t\t#payload[\u0027providerTypeId\u0027] \u003d [-1]\n\t\t\t#payload[\u0027searchText\u0027] \u003d self.custom._devTxt\n\t\t\t#payload[\u0027fetch\u0027] \u003d 12\n\t\t\t\n\t\t\t#system.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\t\t\t#self.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\n\t\t\t#self.props.data \u003d [{key: \u0027\u0027 if key \u003d\u003d \u0027providerName\u0027 else None for key in self.props.data[0]}]\n\t\t\tself.props.data \u003d [{key: None for key in self.props.data[0]}]\n\t\t\tself.custom.jsonLastPayload \u003d None\n\n\n"
            }
          },
          "props.data": {
            "binding": {
              "config": {
                "parameters": {
                  "dateRangeEnd": "{view.custom.Filters.dateRangeTo}",
                  "dateRangeStart": "{view.custom.Filters.dateRangeFrom}",
                  "participantId": "{view.params.participantId}",
                  "searchText": "{view.custom.Filters.searchText}",
                  "selectedCategoryId": "{view.custom.Filters.category}",
                  "selectedEventName": "{view.custom.Filters.eventName}"
                },
                "queryPath": "Event/ParticipantEvents/Participants/GetAllEventsForParticipant"
              },
              "type": "query"
            },
            "onChange": {
              "enabled": null,
              "script": "\tself.props.selection.selectedColumn \u003d None\n\tself.props.selection.selectedRow \u003d -1"
            }
          },
          "props.filter.text": {
            "access": "PUBLIC"
          }
        },
        "props": {
          "cells": {
            "style": {
              "classes": "Table/Cell_Detail_NoBG"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "auto"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "1_TEMPLATES/Placeholder",
              "visible": true,
              "width": 40
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Event"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": false,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "auto"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 300
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "location",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Location"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": false,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "auto"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 200
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "startsOn",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Date"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "default"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 120
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "hh:mm a",
              "editable": false,
              "field": "startTime",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Start Time"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "default"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 120
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "duration_hours",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Duration(Hours)"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "default"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 120
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "attendance",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Attendance"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "default"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 150
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "description",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header_Detail"
                },
                "title": "Description"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal_Detail",
                "cursor": "default"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 130
            }
          ],
          "pager": {
            "initialOption": 100
          },
          "rows": {
            "highlight": {
              "color": "#ccffff",
              "enabled": false
            },
            "striped": {
              "enabled": false
            }
          },
          "selection": {
            "selectedRow": -1,
            "style": {
              "backgroundColor": "#FFFFFF00"
            }
          },
          "style": {
            "classes": "Background/Default",
            "overflowX": "hidden"
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "tableToExcel",
              "pageScope": true,
              "script": "\t# implement your handler here\n\timport traceback\n\ttry:\n\t\t#Send the dataset to Excel\n\t\tfilename \u003d \u0027Participant_Events_\u0027 + str(system.date.format(system.date.now(),\"yyyyMMddHHmmss\")) + \u0027.xls\u0027\n\t\tdataset \u003d self.props.data\n\t\tNewDataSet \u003d []\n\t\theaders \u003d [\"Event\",\"Location\",\"Date\",\"Start Time\", \"Duration(Hours)\",\"Attendance\",\"Description\"]\n#\t\tfor i in range(0,len(dataset)):\n#\t\t\tNewDataSet.append([dataset[i][\u0027name\u0027][\u0027value\u0027],dataset[i][\u0027eventStart\u0027][\u0027value\u0027],dataset[i][\u0027eventEnd\u0027][\u0027value\u0027],dataset[i][\u0027ExitDestination\u0027][\u0027value\u0027],dataset[i][\u0027gender\u0027][\u0027value\u0027],dataset[i][\u0027age\u0027][\u0027value\u0027],dataset[i][\u0027associatedProgram\u0027][\u0027value\u0027],dataset[i][\u0027facilityName\u0027][\u0027value\u0027],dataset[i][\u0027roomName\u0027][\u0027value\u0027],dataset[i][\u0027bedName\u0027][\u0027value\u0027]])\n\t\tfor i in range(dataset.getRowCount()):\n\t\t\teventDate \u003d None\n\t\t\teventTime \u003d None\n\t\t\tif dataset.getValueAt(i,\u0027startsOn\u0027) is not None:\n\t\t\t\teventDate \u003d system.date.format(dataset.getValueAt(i,\u0027startsOn\u0027), \u0027MM/dd/yyyy\u0027)\n\t\t\tif dataset.getValueAt(i,\u0027startTime\u0027) is not None:\n\t\t\t\teventTime \u003d system.date.format(dataset.getValueAt(i,\u0027startTime\u0027), \u0027hh:mm a\u0027)\n\t\t\tNewDataSet.append([dataset.getValueAt(i,\u0027name\u0027),dataset.getValueAt(i,\u0027location\u0027),eventDate,eventTime, dataset.getValueAt(i,\u0027duration_hours\u0027),dataset.getValueAt(i,\u0027attendance\u0027),dataset.getValueAt(i,\u0027description\u0027)])\t\n\t\tNewDataSet \u003d system.dataset.toDataSet(headers, NewDataSet)\n\t\t\n\t\txlFile \u003d system.dataset.toExcel(True,NewDataSet)\n\t\tsystem.perspective.download(filename, xlFile)\n\texcept:   \n\t\tlogger \u003d system.util.getLogger(\"Participant Events tableToExcel\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
              "sessionScope": false,
              "viewScope": true
            },
            {
              "messageType": "tableToPDF",
              "pageScope": true,
              "script": "\t# implement your handler here\n\timport traceback\n\ttry:\n\t\t#Generate the report\n\t\tproject \u003d \"HMS\"\n\t\tpath \u003d \"participant_events\"\n\t\tparameters \u003d {\u0027dateRangeFrom\u0027:self.view.custom.Filters.dateRangeFrom,\n\t\t\t\t\t\u0027dateRangeTo\u0027:self.view.custom.Filters.dateRangeTo,\n\t\t\t\t\t\u0027calendarId\u0027:self.view.custom.Filters.category,\n\t\t\t\t\t\u0027eventName\u0027:self.view.custom.Filters.eventName,\n\t\t\t\t\t\u0027participantId\u0027:self.view.params.participantId,\n\t\t\t\t\t\u0027search_text\u0027:self.view.custom.Filters.searchText\n\t\t\t\t\t}\n\t\tsystem.perspective.print(parameters)\n\t\tpdfFile \u003d system.report.executeReport(path,project,parameters,fileType\u003d\u0027pdf\u0027)\n\t\tfilename \u003d \u0027Participant_Events_\u0027 + str(system.date.format(system.date.now(),\"yyyyMMddHHmmss\")) + \u0027.pdf\u0027\n\n\t\tsystem.perspective.download(filename, pdfFile)\n\texcept:   \n\t\tlogger \u003d system.util.getLogger(\"Participant Events tableToPDF\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "justify": "space-around",
      "style": {
        "overflow": "visible"
      }
    },
    "type": "ia.container.flex"
  }
}