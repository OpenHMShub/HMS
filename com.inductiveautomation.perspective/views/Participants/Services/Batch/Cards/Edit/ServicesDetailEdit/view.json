{
  "custom": {
    "edit_data": {
      "HMIS": 0,
      "comment": "",
      "employee_id": "",
      "employee_name": "",
      "enrollment_id": -1,
      "enrollment_name": "",
      "participant_id": "",
      "quantity": "",
      "row_id": -1,
      "service_id": -1,
      "service_location_id": -1,
      "service_name": "",
      "time_created": ""
    },
    "selectedServiceName": "",
    "winterShelterProgramId": -1
  },
  "params": {
    "participantList": [],
    "row_data": {
      "HMIS": 0,
      "comment": "",
      "employee_id": "",
      "employee_name": "",
      "enrollment_id": -1,
      "enrollment_name": "",
      "participant_id": "",
      "quantity": "",
      "row_id": -1,
      "service_id": -1,
      "service_location_id": -1,
      "service_name": "",
      "time_created": ""
    },
    "selectedId": 2
  },
  "propConfig": {
    "custom.edit_data": {
      "persistent": true
    },
    "custom.edit_data.id": {
      "binding": {
        "config": {
          "path": "view.params.row_data.id"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\t#Move the row data to the edit data any time the row id changes\n\tself.custom.edit_data \u003d self.params.row_data"
      }
    },
    "custom.edit_data[0].id": {
      "binding": {
        "config": {
          "path": "view.params.drugscreenlogid"
        },
        "type": "property"
      }
    },
    "custom.selectedServiceName": {
      "binding": {
        "config": {
          "parameters": {
            "serviceId": "{view.custom.edit_data.service_id}"
          },
          "queryPath": "Participants/Services/GetServiceNameFromId"
        },
        "transforms": [
          {
            "code": "\tif value is not None and value.getRowCount() \u003e 0 and value.getValueAt(0,\u0027serviceName\u0027) is not None:\n\t\treturn value.getValueAt(0,\u0027serviceName\u0027)\n\telse:\n\t\treturn \u0027\u0027",
            "type": "script"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "custom.winterShelterProgramId": {
      "binding": {
        "config": {
          "expression": "True"
        },
        "transforms": [
          {
            "code": "\tquery \u003d \"SELECT id from interaction.program WHERE programName \u003d \u0027Winter Shelter\u0027\"\n\tresult \u003d system.db.runQuery(query)\n\tif result is not None and result.getRowCount() \u003e0 and result.getValueAt(0,\u0027id\u0027) is not None:\n\t\treturn result.getValueAt(0,\u0027id\u0027)\n\telse:\n\t\treturn -1",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "params.participantList": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.HMIS": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.comment": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.enrollment_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.quantity": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.service_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.service_location_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.row_data.service_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.selectedId": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 460,
      "width": 774
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView Row1"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.params.HMIS": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.HMIS"
              },
              "type": "property"
            }
          },
          "props.params.comment": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.comment"
              },
              "type": "property"
            }
          },
          "props.params.employee_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.employee_id"
              },
              "type": "property"
            }
          },
          "props.params.enrollment_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.enrollment_id"
              },
              "type": "property"
            }
          },
          "props.params.hmis": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.HMIS"
              },
              "type": "property"
            }
          },
          "props.params.participant_id": {
            "binding": {
              "config": {
                "path": "view.custom.edit_data.participant_id"
              },
              "type": "property"
            }
          },
          "props.params.quantity": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.quantity"
              },
              "type": "property"
            }
          },
          "props.params.selectedId": {
            "binding": {
              "config": {
                "path": "view.params.selectedId"
              },
              "type": "property"
            }
          },
          "props.params.service_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.service_id"
              },
              "type": "property"
            }
          },
          "props.params.service_location_id": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.service_location_id"
              },
              "type": "property"
            }
          },
          "props.params.time_created": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.time_created"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Services/Batch/Cards/Edit/Row1"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "EmbeddedView Row2"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.params.comment": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.edit_data.comment"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Participants/Services/Batch/Cards/Edit/Row2"
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t#system.perspective.print(\"New Service Button Pressed\")\n\t#Send the message to refresh the table\n\tmessageType \u003d \u0027refreshServicesDetail\u0027\n\tsystem.perspective.sendMessage(messageType)\n"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_new"
            },
            "position": {
              "basis": "120px",
              "display": false,
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "New Service"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\t### Declare parameters\n\tproject \u003d \"HMS\" \n\trow_id \u003d self.view.custom.edit_data.row_id\n\t\t\n\t## Check if parameters are filled in correctly \n\tif (row_id is None) or (int(row_id) \u003c 0):\n\t\tvalid \u003d False\n\t\tsystem.perspective.print(\"Row ID Error\")\n\telse:\n\t\tvalid \u003d True\n\t\tsystem.perspective.print(\"Data Valid\")\n\t\t\t\n\t### Check if data is valid otherwise show error message.\n\tif valid:\n\t\ttry:\n\t\t\t#Delete the Case Note Association before deleting the service\n\t\t\tpath \u003d \"Participants/Services/ServicesDetailDeleteAssociations\"\n\t\t\tparameters \u003d {\"service_id\":row_id}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\tpath \u003d \"Participants/Services/ServicesDetailDelete\"\n\t\t\tparameters \u003d {\"row_id\":row_id}\n\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t#system.perspective.print(\"Delete Service\")\n\t\t\t##### Refresh the table\n\t\t\t#if Refresh:\t\n\t\t\t#\tsystem.perspective.print(\"Query Success\")\n\t\t\t#else:\n\t\t\t\t#system.perspective.print(\"Query Fail\")\n\t\t\t\t#system.perspective.print(Refresh)\n\t\t\tsystem.perspective.sendMessage(messageType\u003d\"refreshServicesDetail\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\n\t\texcept:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t\n\telse:\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_delete"
            },
            "position": {
              "basis": "120px",
              "display": false,
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.row_id} \u003d -1, False, True)"
                  },
                  "enabled": false,
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              },
              "text": "Delete Service"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.params.row_data.HMIS \u003d 0\n\tself.view.params.row_data.comment \u003d \u0027\u0027\n\tself.view.params.row_data.employee_id \u003d self.session.custom.loggedInStaffEmployeeID\n\tself.view.params.row_data.enrollment_id \u003d -1\n\tself.view.params.row_data.quantity \u003d 1\n\tself.view.params.row_data.service_id \u003d -1\n\tself.view.params.row_data.service_location_id \u003d -1\n\t\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.HMIS \u003d 0\n\tself.parent.parent.getChild(\"EmbeddedView Row2\").props.params.comment \u003d \u0027\u0027\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.employee_id \u003d self.view.custom.edit_data.employee_id\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.enrollment_id \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.quantity \u003d 1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.service_id \u003d -1\n\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.service_location_id \u003d -1\n\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "button_clear"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary",
                "marginBottom": "5px",
                "marginLeft": "20px",
                "marginTop": "5px"
              },
              "text": "Clear"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": [
                  {
                    "config": {
                      "script": "\timport traceback\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t\t## changes as per ticket #209 - done by Yogini Marathe\n\t\ttime_created \u003d self.parent.parent.getChild(\"EmbeddedView Row1\").props.params.time_created\n\t\tuser_name \u003d self.session.props.auth.user.userName\n#\t\tparticipant_id \u003d self.view.custom.edit_data.participant_id\n\t\temployee_id \u003d self.view.custom.edit_data.employee_id\n\t\tenrollment_id \u003d self.view.custom.edit_data.enrollment_id\n\t\tservice_id \u003d self.view.custom.edit_data.service_id\n\t\tHMIS \u003d self.view.custom.edit_data.HMIS\n\t\tquantity \u003d self.view.custom.edit_data.quantity\n\t\tcomment \u003d self.view.custom.edit_data.comment\n\t\tservice_location_id \u003d self.view.custom.edit_data.service_location_id\n\t\n\t\t## Check if parameters are filled in correctly \n\t\terrorMessage \u003d \"\"\n\t\tif (employee_id is None) or (int(employee_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terrorMessage \u003d \"Please fill in all the fields correctly before saving.\"\n\t\t\tsystem.perspective.print(\"Employee ID Error\")\n\t\telif (enrollment_id is None) or (int(enrollment_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terrorMessage \u003d \"Please fill in all the fields correctly before saving.\"\n\t\t\tsystem.perspective.print(\"Enrollment ID Error\")\n\t\telif (service_id is None) or (int(service_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terrorMessage \u003d \"Please fill in all the fields correctly before saving.\"\n\t\t\tsystem.perspective.print(\"Service ID Error\")\n\t\telif (HMIS is None) or (HMIS \u003d\u003d \"\") or (int(HMIS) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\terrorMessage \u003d \"Please fill in all the fields correctly before saving.\"\n\t\t\tsystem.perspective.print(\"HMIS Selection Error\")\n\t\telif (service_location_id is None) or (int(service_location_id) \u003c 0):\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\"service_location_id Error\")\n\t\t\terror_message \u003d \"Please select a Service Location\"\n\t\telse:\n\t\t\t## check for any suspended Participants\n\t\t\t## check for matching enrollments\n\t\t\tsuspendedParticipants \u003d []\n\t\t\tparticipantsWithMissingPrograms \u003d []\n\t\t\tif self.view.params.participantList is not None and len(self.view.params.participantList) \u003e 0:\n\t\t\t\tfor participant in self.view.params.participantList:\n\t\t\t\t\tif participant.value[\u0027suspended\u0027] \u003d\u003d True:\n\t\t\t\t\t\tsuspendedParticipants.append(participant.value[\u0027firstName\u0027] + \" \" + participant.value[\u0027lastName\u0027])\n\t\t\t\t\tif str(enrollment_id) not in str(participant.value[\u0027enrollments\u0027]):\n\t\t\t\t\t\tparticipantsWithMissingPrograms.append(participant.value[\u0027firstName\u0027] + \" \" + participant.value[\u0027lastName\u0027])\n\t\t\tif len(participantsWithMissingPrograms) \u003e 0:\n\t\t\t\terrorMessage \u003d \"Participants - \" + \",\".join(participantsWithMissingPrograms) + \" do not have selected Program\"\n\t\t\t\tvalid \u003d False\n\t\t\telif len(suspendedParticipants) \u003e 0:\n\t\t\t\tvalid \u003d False\n\t\t\t\tparameters \u003d {\"time_created\":time_created,\"allParticipantsList\":self.view.params.participantList,\n\t\t\t\t\t\t\t\t\"suspendedParticipantNames\":suspendedParticipants,\"employee_id\":employee_id,\"enrollment_id\":enrollment_id, \n\t\t\t\t\t\t\t\t\"service_id\":service_id,\"user_name\":user_name, \"HMIS\":HMIS,\"quantity\":quantity, \"comment\":comment, \"service_location_id\":service_location_id}\n\t\t\t\tsystem.perspective.openPopup(\"BatchSaveServiceWarning\", \"Participants/Services/Batch/Cards/Edit/SaveServiceWarning\", params \u003d parameters)\n\t\t\telse:\n\t\t\t\tvalid \u003d True\n\t\t\t\tsystem.perspective.print(\"Servcies Detail Data Valid\")\n\t\t\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\t\t\t### Check if the user is creating new data\n\t\t\tif self.view.params.participantList is not None and len(self.view.params.participantList) \u003e 0:\n\t\t\t\tfor participant in self.view.params.participantList:\n\t\t\t\t\tparticipant_id \u003d participant.value[\u0027participantId\u0027]\n\t\t\t\t\t#system.perspective.print(\"Insert New Data\")\n\t\t\t\t\tsystem.perspective.print(HMIS)\n\t\t\t\t\tpath \u003d \"Participants/Services/ServicesDetailInsert\"\n\t\t\t\t\tparameters \u003d {\"time_created\":time_created,\"participant_id\":participant_id,\n\t\t\t\t\t\t\t\t\"employee_id\":employee_id,\"enrollment_id\":enrollment_id, \n\t\t\t\t\t\t\t\t\"service_id\":service_id,\"user_name\":user_name,\n\t\t\t\t\t\t\t\t\"HMIS\":HMIS,\"quantity\":quantity,\n\t\t\t\t\t\t\t\t\"comment\":comment, \"service_location_id\":service_location_id}\n\t\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\n\t\t\t\t\t\n\t\t\t\t\t## also add a program if service selected is Winter Shelter Orientation\n\t\t\t\t\tif self.view.custom.selectedServiceName \u003d\u003d \"Winter Shelter Orientation\":\n\t\t\t\t\t\t## add a program to the participant\n\t\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n\t\t\t\t\t\tparameters \u003d {\"participantId\": participant_id, \"programId\":self.view.custom.winterShelterProgramId}\n\t\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\t\t\n\t\t\t\t#system.perspective.print(\"Insert data\")\n\t\t\t\t\n\t\t\t\t###################################\n\t\t\t\t# Increment Yearly Services\n\t\t\t\ttotal_services \u003d system.tag.readBlocking([\"[default]RITI/Participants/long_TotalServices\"])[0].value\n\t\t\t\ttotal_services +\u003d len(self.view.params.participantList)\n\t\t\t\tsystem.tag.writeBlocking([\"[default]RITI/Participants/long_TotalServices\"], [total_services])\n\t\t\t\t\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Services created successfully.\")\n\t\t\t\t## clear the selected participants\n\t\t\t\tsystem.perspective.sendMessage(\"clearParticipants\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\t## clear services selection\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.HMIS \u003d \u0027\u0027\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row2\").props.params.comment \u003d \u0027\u0027\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.employee_id \u003d \u0027\u0027\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.enrollment_id \u003d -1\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.quantity \u003d \u0027\u0027\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.service_id \u003d -1\n\t\t\t\tself.parent.parent.getChild(\"EmbeddedView Row1\").props.params.type_id \u003d -1\n\t\t\telse:\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Please select at least one participant.\")\n\t\t\t\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(errorMessage)\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Batch Services\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\n\t\tsystem.perspective.print(msg)\n\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\t"
                    },
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "script": "\t#send message to batch services to execute insert loop - Participants/Services/Batch/Cards/Participant_Select\u003eroot container\n\tmessage \u003d \u0027updateServices\u0027\n\tpayload \u003d self.parent.parent.getChild(\"EmbeddedView Row1\").props.params\n\tpayload[\u0027comment\u0027] \u003d self.parent.parent.getChild(\"EmbeddedView Row2\").props.params.comment\n\t\n\tsystem.perspective.sendMessage(message, payload)\n\tsystem.util.getLogger(\u0027Batch Services\u0027).info(str(payload))"
                    },
                    "enabled": false,
                    "scope": "G",
                    "type": "script"
                  }
                ]
              }
            },
            "meta": {
              "name": "button_save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({view.custom.edit_data.row_id} \u003d -1,\u0027Save Service\u0027,\u0027Update Service\u0027)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginTop": "5px"
              }
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "50px",
          "shrink": 0
        },
        "props": {
          "style": {
            "borderTopColor": "#9db8d1",
            "borderTopStyle": "solid",
            "borderTopWidth": "1px",
            "classes": "Background/Default",
            "marginTop": "5px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "25px",
          "display": false,
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.row_data"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "suspendedParticipantsResponse",
          "pageScope": true,
          "script": "\t# implement your handler here\n\taddSuspended \u003d payload[\u0027allow_suspended\u0027] \n#\ttime_created \u003d system.date.now()\n\ttime_created \u003d self.getChild(\"EmbeddedView Row1\").props.params.time_created\n\tuser_name \u003d self.session.props.auth.user.userName\n#\t\tparticipant_id \u003d self.view.custom.edit_data.participant_id\n\temployee_id \u003d self.view.custom.edit_data.employee_id\n\tenrollment_id \u003d self.view.custom.edit_data.enrollment_id\n\tservice_id \u003d self.view.custom.edit_data.service_id\n\tHMIS \u003d self.view.custom.edit_data.HMIS\n\tquantity \u003d self.view.custom.edit_data.quantity\n\tcomment \u003d self.view.custom.edit_data.comment\n\tservice_location_id \u003d self.view.custom.edit_data.service_location_id\n\tproject \u003d \"HMS\"\n\tpath \u003d \"Participants/Services/ServicesDetailInsert\"\n\tif self.view.params.participantList is not None and len(self.view.params.participantList) \u003e 0:\n\t\tnoOfServicesAdded \u003d 0\n\t\tfor participant in self.view.params.participantList:\n\t\t\tif addSuspended \u003d\u003d False and participant.value[\u0027suspended\u0027] \u003d\u003d True:\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tparticipant_id \u003d participant.value[\u0027participantId\u0027]\n\t\t\t\tparameters \u003d {\"time_created\":time_created,\"participant_id\":participant_id,\n\t\t\t\t\t\t\t\"employee_id\":employee_id,\"enrollment_id\":enrollment_id, \n\t\t\t\t\t\t\t\"service_id\":service_id,\"user_name\":user_name,\n\t\t\t\t\t\t\t\"HMIS\":HMIS,\"quantity\":quantity,\n\t\t\t\t\t\t\t\"comment\":comment, \"service_location_id\":service_location_id}\n\t\t\t\tRefresh \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, getKey\u003dTrue)\t\n\t\t\t\tnoOfServicesAdded \u003d noOfServicesAdded + 1\t\n\t\t\t\t## also add a program if service selected is Winter Shelter Orientation\n\t\t\t\tif self.view.custom.selectedServiceName \u003d\u003d \"Winter Shelter Orientation\":\n\t\t\t\t\t## add a program to the participant\n\t\t\t\t\tpath \u003d \"Participants/Enrollments/ParticipantAddSelectedEnrollments\"\n\t\t\t\t\tparameters \u003d {\"participantId\": participant_id, \"programId\":self.view.custom.winterShelterProgramId}\n\t\t\t\t\tsystem.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters)\t\n\t\t#system.perspective.print(\"Insert data\")\n\t\t\n\t\t###################################\n\t\t# Increment Yearly Services\n\t\ttotal_services \u003d system.tag.readBlocking([\"[default]RITI/Participants/long_TotalServices\"])[0].value\n\t\ttotal_services +\u003d noOfServicesAdded\n\t\tsystem.tag.writeBlocking([\"[default]RITI/Participants/long_TotalServices\"], [total_services])\n\t\t\n\t\tif addSuspended \u003d\u003d True:\n\t\t\tself.getChild(\"root Actions\").getChild(\"Label\").showMessage(\"Services created successfully.\")\n\t\telse:\n\t\t\tself.getChild(\"root Actions\").getChild(\"Label\").showMessage(\"Services created for participants excluding suspended.\")\n\t\t## clear the selected participants\n\t\tsystem.perspective.sendMessage(\"clearParticipants\", payload\u003d{}, scope\u003d\"session\")\n\t\t## clear services selection\n\t\tself.getChild(\"EmbeddedView Row1\").props.params.HMIS \u003d \u0027\u0027\n\t\tself.getChild(\"EmbeddedView Row2\").props.params.comment \u003d \u0027\u0027\n\t\tself.getChild(\"EmbeddedView Row1\").props.params.employee_id \u003d \u0027\u0027\n\t\tself.getChild(\"EmbeddedView Row1\").props.params.enrollment_id \u003d -1\n\t\tself.getChild(\"EmbeddedView Row1\").props.params.quantity \u003d \u0027\u0027\n\t\tself.getChild(\"EmbeddedView Row1\").props.params.service_id \u003d -1\n\t\tself.getChild(\"EmbeddedView Row1\").props.params.type_id \u003d -1\n\t\t",
          "sessionScope": true,
          "viewScope": false
        },
        {
          "messageType": "Service_Selected",
          "pageScope": false,
          "script": "\t# implement your handler here\n\tselectedServiceId \u003d payload[\"service_id\"]\n\tselectedTypeId \u003d payload[\"type_id\"]\n\tselectedProgramId \u003d payload[\"program_id\"]\n\t\t\n\tif selectedProgramId !\u003d None and selectedProgramId !\u003d \"\" and selectedProgramId !\u003d -1:\n\t\tself.view.custom.edit_data.enrollment_id \u003d selectedProgramId\n\t\n\tif selectedTypeId !\u003d None and selectedTypeId !\u003d \"\" and selectedTypeId !\u003d -1:\n\t\tself.view.custom.edit_data.type_id \u003d selectedTypeId\n\t\t\t\n\tif selectedServiceId !\u003d None and selectedServiceId !\u003d \"\" and selectedServiceId !\u003d -1:\n\t\tself.view.custom.edit_data.service_id \u003d selectedServiceId",
          "sessionScope": true,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}