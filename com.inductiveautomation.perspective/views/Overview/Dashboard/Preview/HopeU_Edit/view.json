{
  "custom": {
    "sql_data": {
      "$": [
        "ds",
        192,
        1759155468032
      ],
      "$columns": [
        {
          "data": [
            1
          ],
          "name": "id",
          "type": "Integer"
        },
        {
          "data": [
            "September"
          ],
          "name": "month",
          "type": "String"
        },
        {
          "data": [
            1
          ],
          "name": "day",
          "type": "Integer"
        },
        {
          "data": [
            2025
          ],
          "name": "year",
          "type": "Integer"
        },
        {
          "data": [
            "1-Sep"
          ],
          "name": "Date",
          "type": "String"
        },
        {
          "data": [
            48
          ],
          "name": "generalPopLunch",
          "type": "Integer"
        },
        {
          "data": [
            15
          ],
          "name": "cafeMWF",
          "type": "Integer"
        },
        {
          "data": [
            22
          ],
          "name": "snackPacks",
          "type": "Integer"
        },
        {
          "data": [
            34
          ],
          "name": "morningCensus",
          "type": "Integer"
        },
        {
          "data": [
            52
          ],
          "name": "dayCensus",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "showers",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "laundry",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "mailCheckRITI",
          "type": "Integer"
        },
        {
          "data": [
            18
          ],
          "name": "morningNews",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "noOfClasses",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "classAttendance",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "inPersonStore",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "navigationService",
          "type": "Integer"
        },
        {
          "data": [
            null
          ],
          "name": "footClinic",
          "type": "Integer"
        },
        {
          "data": [
            false
          ],
          "name": "isClosed",
          "type": "Boolean"
        },
        {
          "data": [
            false
          ],
          "name": "isWeekend",
          "type": "Boolean"
        },
        {
          "data": [
            "Rainy day – higher attendance at the day center. 3 people couldn’t use showers due to maintenance issues."
          ],
          "name": "notes",
          "type": "String"
        },
        {
          "data": [
            null
          ],
          "name": "navigationPhoneAccess",
          "type": "Integer"
        },
        {
          "data": [
            2
          ],
          "name": "laundryMissed",
          "type": "Integer"
        },
        {
          "data": [
            5
          ],
          "name": "mailMissed",
          "type": "Integer"
        },
        {
          "data": [
            3
          ],
          "name": "showersMissed",
          "type": "Integer"
        },
        {
          "data": [
            4
          ],
          "name": "phoneComputerAccessMissed",
          "type": "Integer"
        }
      ]
    }
  },
  "params": {
    "checked": false,
    "id": 1
  },
  "propConfig": {
    "custom.sql_data": {
      "binding": {
        "config": {
          "parameters": {
            "id": "{view.params.id}"
          },
          "queryPath": "Overview/Get_HopeUData_FromID"
        },
        "type": "query"
      },
      "onChange": {
        "enabled": null,
        "script": "\tdataset \u003d self.custom.sql_data\n\tif dataset is not None and dataset.getRowCount() \u003e 0:\n\t\tself.getChild(\"root\").getChild(\"Row_1\").getChild(\"Embed_GenPopLunch\").props.params.textValue \u003d dataset.getValueAt(0,\u0027generalPopLunch\u0027) if dataset.getValueAt(0,\u0027generalPopLunch\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_3\").getChild(\"Embed_SnackPacks\").props.params.textValue \u003d dataset.getValueAt(0,\u0027snackPacks\u0027) if dataset.getValueAt(0,\u0027snackPacks\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_3\").getChild(\"Embed_MorningCensus\").props.params.textValue \u003d dataset.getValueAt(0,\u0027morningCensus\u0027) if dataset.getValueAt(0,\u0027morningCensus\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_4\").getChild(\"Embed_DayCensus\").props.params.textValue \u003d dataset.getValueAt(0,\u0027dayCensus\u0027) if dataset.getValueAt(0,\u0027dayCensus\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_1\").getChild(\"Embed_Cafe\").props.params.textValue \u003d dataset.getValueAt(0,\u0027cafeMWF\u0027) if dataset.getValueAt(0,\u0027cafeMWF\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_4\").getChild(\"Embed_MorningNews\").props.params.textValue \u003d dataset.getValueAt(0,\u0027morningNews\u0027) if dataset.getValueAt(0,\u0027morningNews\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_5\").getChild(\"Embed_Notes\").props.params.textValue \u003d dataset.getValueAt(0,\u0027notes\u0027) if dataset.getValueAt(0,\u0027notes\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_6\").getChild(\"Checkbox\").props.selected \u003d dataset.getValueAt(0,\u0027isClosed\u0027) if dataset.getValueAt(0,\u0027isClosed\u0027) !\u003d None else \u0027\u0027\n\t\t#self.getChild(\"root\").getChild(\"Row_7\").getChild(\"Embed_NavigationPhoneAccess\").props.params.textValue \u003d dataset.getValueAt(0,\u0027navigationPhoneAccess\u0027) if dataset.getValueAt(0,\u0027navigationPhoneAccess\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_MissedEncounters\").getChild(\"Row_1\").getChild(\"Embed_showers\").props.params.textValue \u003d dataset.getValueAt(0,\u0027showersMissed\u0027) if dataset.getValueAt(0,\u0027showersMissed\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_MissedEncounters\").getChild(\"Row_1\").getChild(\"Embed_mail\").props.params.textValue \u003d dataset.getValueAt(0,\u0027mailMissed\u0027) if dataset.getValueAt(0,\u0027mailMissed\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_MissedEncounters\").getChild(\"Row_2\").getChild(\"Embed_laundry\").props.params.textValue \u003d dataset.getValueAt(0,\u0027laundryMissed\u0027) if dataset.getValueAt(0,\u0027laundryMissed\u0027) !\u003d None else \u0027\u0027\n\t\tself.getChild(\"root\").getChild(\"Row_MissedEncounters\").getChild(\"Row_2\").getChild(\"Embed_phonecompaccess\").props.params.textValue \u003d dataset.getValueAt(0,\u0027phoneComputerAccessMissed\u0027) if dataset.getValueAt(0,\u0027phoneComputerAccessMissed\u0027) !\u003d None else \u0027\u0027"
      },
      "persistent": true
    },
    "params.id": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 1213,
      "width": 600
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "39px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Text/Add_TextArea",
                "marginLeft": "27px"
              },
              "text": "Date:"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Label_0"
            },
            "position": {
              "basis": "373px",
              "shrink": 0
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.custom.sql_data"
                  },
                  "transforms": [
                    {
                      "code": "\tDate \u003d str(value.getValueAt(0,\u0027date\u0027)) + \u0027 \u0027 + str(value.getValueAt(0,\u0027year\u0027))\n\treturn Date",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Text/Add_TextArea"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Date"
        },
        "position": {
          "basis": "40px"
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_GenPopLunch"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "params": {
                "text": 135,
                "textLabel": "General Pop Lunch",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Embed_Cafe"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "params": {
                "text": 0,
                "textLabel": "Cafe M/W/F",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Row_1"
        },
        "position": {
          "basis": "60px"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_SnackPacks"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "params": {
                "text": 0,
                "textLabel": "Snack Packs",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Embed_MorningCensus"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "params": {
                "text": 118,
                "textLabel": "Morning Census",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Row_3"
        },
        "position": {
          "basis": "60px"
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_DayCensus"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "params": {
                "text": 196,
                "textLabel": "Day Census",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Embed_MorningNews"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "params": {
                "text": 15,
                "textLabel": "Morning News",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Row_4"
        },
        "position": {
          "basis": "60px"
        },
        "props": {
          "style": {
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "basis": "25px",
                  "grow": 1
                },
                "props": {
                  "style": {
                    "classes": "Text/Add_TextArea"
                  },
                  "text": "Missed Encounters"
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Section_Header"
            },
            "position": {
              "basis": "30px"
            },
            "props": {
              "style": {
                "marginLeft": "25px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Embed_showers"
                },
                "position": {
                  "basis": "250px"
                },
                "props": {
                  "params": {
                    "text": "",
                    "textLabel": "Showers",
                    "textValue": ""
                  },
                  "path": "1_TEMPLATES/60px/top/TextInputSearch",
                  "style": {
                    "marginBottom": "2px",
                    "marginLeft": "25px",
                    "marginTop": "2px"
                  }
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Embed_mail"
                },
                "position": {
                  "basis": "250px"
                },
                "props": {
                  "params": {
                    "text": "",
                    "textLabel": "Mail",
                    "textValue": ""
                  },
                  "path": "1_TEMPLATES/60px/top/TextInputSearch",
                  "style": {
                    "marginBottom": "2px",
                    "marginLeft": "25px",
                    "marginTop": "2px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Row_1"
            },
            "position": {
              "basis": "60px"
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Embed_laundry"
                },
                "position": {
                  "basis": "250px"
                },
                "props": {
                  "params": {
                    "text": "",
                    "textLabel": "Laundry",
                    "textValue": ""
                  },
                  "path": "1_TEMPLATES/60px/top/TextInputSearch",
                  "style": {
                    "marginBottom": "2px",
                    "marginLeft": "25px",
                    "marginTop": "2px"
                  }
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Embed_phonecompaccess"
                },
                "position": {
                  "basis": "250px"
                },
                "props": {
                  "params": {
                    "text": "",
                    "textLabel": "Phone/Computer Access",
                    "textValue": ""
                  },
                  "path": "1_TEMPLATES/60px/top/TextInputSearch",
                  "style": {
                    "marginBottom": "2px",
                    "marginLeft": "25px",
                    "marginTop": "2px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Row_2"
            },
            "position": {
              "basis": "60px"
            },
            "props": {
              "style": {
                "marginTop": "20px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Row_MissedEncounters"
        },
        "position": {
          "basis": "170px"
        },
        "props": {
          "direction": "column",
          "style": {
            "classes": "preview/lineBreak",
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Embed_Notes"
            },
            "position": {
              "basis": "380px"
            },
            "props": {
              "params": {
                "textLabel": "Note",
                "textValue": ""
              },
              "path": "1_TEMPLATES/60px/top/TextareaInputSearch",
              "style": {
                "marginBottom": "2px",
                "marginLeft": "25px",
                "marginTop": "2px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Row_5"
        },
        "position": {
          "basis": "120px"
        },
        "props": {
          "style": {
            "classes": "preview/lineBreak",
            "marginTop": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Checkbox"
            },
            "position": {
              "basis": "36px"
            },
            "propConfig": {
              "props.selected": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.params.checked"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "checkedIcon": {
                "color": {
                  "enabled": "#3EC3D9"
                }
              },
              "style": {
                "marginBottom": "2px",
                "marginLeft": "20px",
                "marginTop": "2px"
              },
              "text": "",
              "uncheckedIcon": {
                "color": {
                  "enabled": "#3EC3D9"
                }
              }
            },
            "type": "ia.input.checkbox"
          },
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "229px"
            },
            "props": {
              "style": {
                "classes": "Text/Add_HeaderText"
              },
              "text": "Closed for Operation"
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Row_6"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "style": {
            "marginTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tdataset \u003d self.view.custom.sql_data\n\tself.parent.parent.getChild(\"Row_1\").getChild(\"Embed_GenPopLunch\").props.params.textValue \u003d dataset.getValueAt(0,\u0027generalPopLunch\u0027)\n\tself.parent.parent.getChild(\"Row_3\").getChild(\"Embed_SnackPacks\").props.params.textValue \u003d dataset.getValueAt(0,\u0027snackPacks\u0027)\n\tself.parent.parent.getChild(\"Row_3\").getChild(\"Embed_MorningCensus\").props.params.textValue \u003d dataset.getValueAt(0,\u0027morningCensus\u0027)\n\tself.parent.parent.getChild(\"Row_4\").getChild(\"Embed_DayCensus\").props.params.textValue \u003d dataset.getValueAt(0,\u0027dayCensus\u0027)\n\tself.parent.parent.getChild(\"Row_1\").getChild(\"Embed_Cafe\").props.params.textValue \u003d dataset.getValueAt(0,\u0027cafeMWF\u0027)\n\tself.parent.parent.getChild(\"Row_4\").getChild(\"Embed_MorningNews\").props.params.textValue \u003d dataset.getValueAt(0,\u0027morningNews\u0027)\n\tself.parent.parent.getChild(\"Row_5\").getChild(\"Embed_Notes\").props.params.textValue \u003d dataset.getValueAt(0,\u0027notes\u0027)\n\tself.parent.parent.getChild(\"Row_6\").getChild(\"Checkbox\").props.selected \u003d dataset.getValueAt(0,\u0027isClosed\u0027)\n\tself.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_1\").getChild(\"Embed_showers\").props.params.textValue \u003d dataset.getValueAt(0,\u0027showersMissed\u0027)\n\tself.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_1\").getChild(\"Embed_mail\").props.params.textValue \u003d dataset.getValueAt(0,\u0027mailMissed\u0027)\n\tself.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_2\").getChild(\"Embed_laundry\").props.params.textValue \u003d dataset.getValueAt(0,\u0027laundryMissed\u0027)\n\tself.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_2\").getChild(\"Embed_phonecompaccess\").props.params.textValue \u003d dataset.getValueAt(0,\u0027phoneComputerAccessMissed\u0027)\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Clear"
            },
            "position": {
              "basis": "120px"
            },
            "props": {
              "style": {
                "classes": "Buttons/Delete",
                "marginBottom": "15px",
                "marginLeft": "26px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Clear"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tGenPopLunch \u003d self.parent.parent.getChild(\"Row_1\").getChild(\"Embed_GenPopLunch\").props.params.textValue\n\tSnackPacks \u003d self.parent.parent.getChild(\"Row_3\").getChild(\"Embed_SnackPacks\").props.params.textValue\n\tMorningCensus \u003d self.parent.parent.getChild(\"Row_3\").getChild(\"Embed_MorningCensus\").props.params.textValue\n\tDayCensus \u003d self.parent.parent.getChild(\"Row_4\").getChild(\"Embed_DayCensus\").props.params.textValue\n\tCafe \u003d self.parent.parent.getChild(\"Row_1\").getChild(\"Embed_Cafe\").props.params.textValue\n\tMorningNews \u003d self.parent.parent.getChild(\"Row_4\").getChild(\"Embed_MorningNews\").props.params.textValue\n\tNotes \u003d self.parent.parent.getChild(\"Row_5\").getChild(\"Embed_Notes\").props.params.textValue\n\tisClosed \u003d self.parent.parent.getChild(\"Row_6\").getChild(\"Checkbox\").props.selected\n\tshowersMissed \u003d self.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_1\").getChild(\"Embed_showers\").props.params.textValue\n\tmailMissed \u003d self.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_1\").getChild(\"Embed_mail\").props.params.textValue\n\tlaundryMissed \u003d self.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_2\").getChild(\"Embed_laundry\").props.params.textValue\n\tphoneComputerAccessMissed \u003d self.parent.parent.getChild(\"Row_MissedEncounters\").getChild(\"Row_2\").getChild(\"Embed_phonecompaccess\").props.params.textValue\n\t\t\n\t\n\tdataset \u003d self.view.custom.sql_data\n\t\n\tGenPopLunch_SQL \u003d dataset.getValueAt(0,\u0027generalPopLunch\u0027)\n\tSnackPacks_SQL \u003d dataset.getValueAt(0,\u0027snackPacks\u0027)\n\tMorningCensus_SQL \u003d dataset.getValueAt(0,\u0027morningCensus\u0027)\n\tDayCensus_SQL \u003d dataset.getValueAt(0,\u0027dayCensus\u0027)\n\tCafe_SQL \u003d dataset.getValueAt(0,\u0027cafeMWF\u0027)\n\tMorningNews_SQL \u003d dataset.getValueAt(0,\u0027morningNews\u0027)\n\tNotes_SQL \u003d dataset.getValueAt(0,\u0027notes\u0027)\n\tisClosed_SQL \u003d dataset.getValueAt(0,\u0027isClosed\u0027)\n\t\n\tshowersMissed_SQL \u003d dataset.getValueAt(0,\u0027showersMissed\u0027)\n\tmailMissed_SQL \u003d dataset.getValueAt(0,\u0027mailMissed\u0027)\n\tlaundryMissed_SQL \u003d dataset.getValueAt(0,\u0027laundryMissed\u0027)\n\tphoneComputerAccessMissed_SQL \u003d dataset.getValueAt(0,\u0027phoneComputerAccessMissed\u0027)\n\t\t\n\t\n\tIsUpdated \u003d False\n\t\n\tif GenPopLunch_SQL !\u003d GenPopLunch:\n\t\tIsUpdated \u003d True\n\tif SnackPacks_SQL !\u003d SnackPacks:\n\t\tIsUpdated \u003d True\n\tif MorningCensus_SQL !\u003d MorningCensus:\n\t\tIsUpdated \u003d True\n\tif DayCensus_SQL !\u003d DayCensus:\n\t\tIsUpdated \u003d True\n\tif Cafe_SQL !\u003d Cafe:\n\t\tIsUpdated \u003d True\n\tif MorningNews_SQL !\u003d MorningNews:\n\t\tIsUpdated \u003d True\n\tif Notes_SQL !\u003d Notes:\n\t\tIsUpdated \u003d True\n\tif isClosed_SQL !\u003d isClosed:\n\t\tIsUpdated \u003d True\n\tif showersMissed_SQL !\u003d showersMissed:\n\t\tIsUpdated \u003d True\n\tif mailMissed_SQL !\u003d mailMissed:\n\t\tIsUpdated \u003d True\n\tif laundryMissed_SQL !\u003d laundryMissed:\n\t\tIsUpdated \u003d True\n\tif phoneComputerAccessMissed_SQL !\u003d phoneComputerAccessMissed:\n\t\tIsUpdated \u003d True\n\t\n\tsystem.perspective.print(\u0027IsUpdated: \u0027+str(IsUpdated))\n\t\n\tif IsUpdated \u003d\u003d True:\n\t\tid \u003d dataset.getValueAt(0,\u0027id\u0027)\n\t\t\n\t\tif GenPopLunch \u003d\u003d \u0027\u0027:\n\t\t\tGenPopLunch \u003d None\n\t\tif SnackPacks \u003d\u003d \u0027\u0027:\n\t\t\tSnackPacks \u003d None\n\t\tif MorningCensus \u003d\u003d \u0027\u0027:\n\t\t\tMorningCensus \u003d None\n\t\tif DayCensus \u003d\u003d \u0027\u0027:\n\t\t\tDayCensus \u003d None\n\t\tif Cafe \u003d\u003d \u0027\u0027:\n\t\t\tCafe \u003d None\n\t\tif MorningNews \u003d\u003d \u0027\u0027:\n\t\t\tMorningNews \u003d None\n\t\t\t\n\t\tif showersMissed \u003d\u003d \u0027\u0027:\n\t\t\tshowersMissed \u003d None\n\t\tif mailMissed \u003d\u003d \u0027\u0027:\n\t\t\tmailMissed \u003d None\n\t\tif laundryMissed \u003d\u003d \u0027\u0027:\n\t\t\tlaundryMissed \u003d None\n\t\tif phoneComputerAccessMissed \u003d\u003d \u0027\u0027:\n\t\t\tphoneComputerAccessMissed \u003d None\n\t\t\n\t\tupdateQuery \u003d \u0027\u0027\u0027\n\t\t\t\t\t\tUPDATE \n\t\t\t\t\t\t\t[participant].[HopeUDashboard]\n\t\t\t\t\t\tSET\n\t\t\t\t\t       [generalPopLunch] \u003d ?\n\t\t\t\t\t      ,[snackPacks] \u003d ?\n\t\t\t\t\t      ,[morningCensus] \u003d ?\n\t\t\t\t\t      ,[dayCensus] \u003d ?\n\t\t\t\t\t      ,[cafeMWF] \u003d ?\n\t\t\t\t\t      ,[morningNews] \u003d ?\n\t\t\t\t\t      ,[notes] \u003d ?\n\t\t\t\t\t      ,[isClosed] \u003d ?\n\t\t\t\t\t      ,[showersMissed] \u003d ?\n\t\t\t\t\t      ,[mailMissed] \u003d ?\n\t\t\t\t\t      ,[laundryMissed] \u003d ?\n\t\t\t\t\t      ,[phoneComputerAccessMissed] \u003d ?\n\t\t\t\t\t  \tWHERE [id] \u003d ?\n\t\t\t\t\t\u0027\u0027\u0027\n\t\t\n\t\tsystem.db.runPrepUpdate(updateQuery, [GenPopLunch, SnackPacks, MorningCensus, DayCensus, Cafe, MorningNews, Notes, isClosed,showersMissed,mailMissed,laundryMissed,phoneComputerAccessMissed,id])\n\t\tself.getSibling(\"Label\").showMessage(\u0027Update success !\u0027)\n\t\tsystem.perspective.closeDock(\u0027PreviewHopeU\u0027)\n\t\tsystem.perspective.sendMessage(\"HopeU_updated\", payload \u003d {}, scope \u003d \"page\")\n\t\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button Create"
            },
            "position": {
              "basis": "120px",
              "display": "True"
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "15px",
                "marginLeft": "20px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Update"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Update success !"
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\t#system.perspective.print(message)\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(1)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "root Actions"
        },
        "position": {
          "basis": "65px",
          "shrink": 0
        },
        "props": {
          "style": {
            "marginTop": "0px"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "HopeU_updated",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tself.view.refreshBinding(\u0027custom.sql_data\u0027)",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}