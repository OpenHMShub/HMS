{
  "custom": {
    "_devPulse": false,
    "_isDev": false
  },
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\troot \u003d self.getChild(\"root\")\n\t\n\ttry:\n\t\tsystem.perspective.sendMessage(\u0027mhEmployerDashboardKpiHeader\u0027, payload \u003d {})\n\texcept:\n\t\troot.cleanKpis()"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "propConfig": {
    "custom._devPulse": {
      "onChange": {
        "enabled": null,
        "script": "\troot \u003d self.getChild(\"root\")\n\tif self.custom._isDev is True:\n\t\tif currentValue.value is True:\n\t\t\tpayload \u003d {}\n\t\t\t#payload[\u0027employerId\u0027] \u003d [-1]\n\t\t\t#payload[\u0027employerId\u0027] \u003d [17, 38 ,39, 1]\n\t\t\tsystem.perspective.sendMessage(\u0027mhEmployerDashboardKpiHeader\u0027, payload \u003d payload)\n\t\n\t\telse:\n\t\t\troot.cleanKpis()"
      },
      "persistent": true
    },
    "custom._isDev": {
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 185,
      "width": 1430
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "KPI1"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Total Employers",
            "Value": "0"
          },
          "path": "Employers/Dashboard/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card",
            "marginLeft": "40px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "KPI2"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Number Of Applicants",
            "Value": "0"
          },
          "path": "Employers/Dashboard/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "custom": {
          "testValue": [
            {
              "applicants": 1,
              "time": "9/1/2020"
            },
            {
              "applicants": 0,
              "time": "10/1/2020"
            },
            {
              "applicants": 1,
              "time": "11/1/2020"
            },
            {
              "applicants": 0,
              "time": "12/1/2020"
            },
            {
              "applicants": 4,
              "time": "1/1/2021"
            },
            {
              "applicants": 6,
              "time": "2/1/2021"
            }
          ]
        },
        "meta": {
          "name": "KPI3"
        },
        "position": {
          "basis": "345px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Interviews Monthly",
            "Value": [
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1639847952471
                  ],
                  "$ts": 1625115600000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1639847952471
                  ],
                  "$ts": 1627794000000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1639847952471
                  ],
                  "$ts": 1630472400000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1639847952471
                  ],
                  "$ts": 1633064400000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1639847952471
                  ],
                  "$ts": 1635742800000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1639847952471
                  ],
                  "$ts": 1638338400000
                }
              }
            ]
          },
          "path": "Employers/Dashboard/Cards/KPI/Graph_Flex _bar",
          "style": {
            "classes": "KPIs/KPI_Card"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "custom": {
          "testValue": [
            {
              "applicants": 1,
              "time": "9/1/2020"
            },
            {
              "applicants": 0,
              "time": "10/1/2020"
            },
            {
              "applicants": 1,
              "time": "11/1/2020"
            },
            {
              "applicants": 0,
              "time": "12/1/2020"
            },
            {
              "applicants": 4,
              "time": "1/1/2021"
            },
            {
              "applicants": 6,
              "time": "2/1/2021"
            }
          ]
        },
        "meta": {
          "name": "KPI4"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Interview/Hire %",
            "Value": "0 %"
          },
          "path": "Employers/Dashboard/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card",
            "marginRight": "40px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "alignContent": "flex-start",
      "alignItems": "center",
      "style": {
        "classes": "KPIs/KPI_Flex_Container",
        "overflow": "hidden",
        "overflowY": "hidden"
      }
    },
    "scripts": {
      "customMethods": [
        {
          "name": "setKpi1_TotalEmployers",
          "params": [
            "payload"
          ],
          "script": "\timport extend.query\n\t\n\tquery \u003d \"\"\"\nSELECT \n\t COUNT([EmployerNew].[id]) counterEmployer\nFROM [organization].[EmployerNew]\nWHERE 1\u003d1\n\tAND [EmployerNew].[id] IN (*?)\n\"\"\"\n\n\targs \u003d []\n\n\t################################################\n\temployerId \u003d payload.get(\u0027employerId\u0027, -1)\n\t\n\twhereIn \u003d \u0027[EmployerNew].[id] IN (*?)\u0027\n\n\twhereInFix, employerIdFix \u003d extend.query.getWhereInParamFix(whereIn, employerId)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d employerIdFix\n\t\n\t#ystem.perspective.print((\u0027kpi1:\u0027, args))\n\t#employerId \u003d  [17, 38 ,39, 1]\t\n\t# Expect employerId as  list \n\t################################################\n\t\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\tresult \u003d result if result else 0\n\t\n\tkpi1 \u003d self.getChild(\"KPI1\")\n\tkpi1.props.params.Title \u003d \u0027Total Employers\u0027\n\tkpi1.props.params.Value \u003d \u0027{:,}\u0027.format(result)\n"
        },
        {
          "name": "setKpi2_NumberOfApplicants",
          "params": [
            "payload"
          ],
          "script": "\timport extend.query\n\tkpi2 \u003d self.getChild(\"KPI2\")\n\n\tquery \u003d \"\"\"\nSELECT COUNT(DISTINCT [participantId]) counterParticipants\nFROM [organization].[ApplicantStatus]\nWHERE 1\u003d1 \n\tAND [employerId] IN (*?)\n\"\"\"\n\n\targs \u003d []\n\n\t################################################\t\n\temployerId \u003d payload.get(\u0027employerId\u0027, -1)\n\t\n\twhereIn \u003d \u0027[employerId] IN (*?)\u0027\n\twhereInFix, employerIdFix \u003d extend.query.getWhereInParamFix(whereIn, employerId)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d employerIdFix \n\n\t#employerId \u003d  [17, 38 ,39, 1]\t\n\t# Expect employerId as  list \n\t################################################\n\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\tresult \u003d result if result else 0\n\t\n\tkpi2.props.params.Title \u003d \u0027Number Of Applicants\u0027\n\tkpi2.props.params.Value \u003d \u0027{:,}\u0027.format(result)\n\n\t"
        },
        {
          "name": "setKpi3_InterviewsMonthly",
          "params": [
            "payload"
          ],
          "script": "\timport extend.query\n\t\n\tkpi3 \u003d self.getChild(\"KPI3\")\n\t\n\tquery \u003d \"\"\"\t\nDECLARE @dateFrom DATE \u003d ?\n\nSELECT COUNT([interviewedDate]) counterInterview\n\t,YEAR([interviewedDate]) AS [year]\n\t,MONTH([interviewedDate]) AS [month]\nFROM [organization].[ApplicantStatus]\nWHERE 1\u003d1\n\tAND [interviewedDate] IS NOT NULL\n\tAND [interviewedDate] \u003e\u003d DATEFROMPARTS(YEAR( @dateFrom),MONTH( @dateFrom),1)\n\tAND [employerId] IN (*?)\nGROUP BY YEAR([interviewedDate]), MONTH([interviewedDate])\nORDER BY YEAR([interviewedDate]), MONTH([interviewedDate])\n\"\"\"\n\n\n\targs \u003d []\n\t\n\t################################################\n\tnow \u003d system.date.now()\n\tyearStart \u003d system.date.getDate(system.date.getYear(now), 0, 1)\n\tmonthStart \u003d yearStart \u003d system.date.getDate(system.date.getYear(now), system.date.getMonth(now), 1)\n\tsixMonthsBefore \u003d system.date.addMonths(monthStart, -5)\n\t\n\targs +\u003d [sixMonthsBefore]\n\t################################################\n\t\n\temployerId \u003d payload.get(\u0027employerId\u0027, -1)\n\t\n\twhereIn \u003d \u0027[employerId] IN (*?)\u0027\n\twhereInFix, employerIdFix \u003d extend.query.getWhereInParamFix(whereIn, employerId)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d employerIdFix \n\t################################################\n\t\n\t#employerId \u003d  [17, 38 ,39, 1]\t\n\t# Expect employerId as  list \n\t#ystem.perspective.print((\u0027args kpi3:\u0027,args))\n\t\n\tresult \u003d system.db.runPrepQuery(query, args,\u0027HMSOps\u0027)\n\n\t# Provide series for all 6 months even if result from DB is empty\n\t_values \u003d []\n\tfor num in range(6):\n\t\t_time \u003d system.date.addMonths(sixMonthsBefore, num)\n\t\t_month \u003d system.date.getMonth(_time) + 1\n\t\t_year \u003d system.date.getYear(_time)\n\t\t#ystem.perspective.print((_time, _month, _year))\n\t\t_lst \u003d [row[\u0027counterInterview\u0027] for row in result if row[\u0027year\u0027] \u003d\u003d _year and row[\u0027month\u0027] \u003d\u003d _month]\n\t\t_val \u003d _lst[0] if len(_lst) \u003e 0 else 0\n\t\t\n\t\tif len(_lst) \u003e 1:\n\t\t\traise ValueError(\u0027More than one element in the list!\u0027)\n\n\t \t_values.append(dict(applicants \u003d _val, time \u003d _time))\n\n\tkpi3.props.params.Value \u003d _values\n\t\n\tkpi3.props.params.Title \u003d \u0027Interviews Monthly\u0027\n\n#\tExample:\n#\t_values \u003d \"\"\"\t\n#[\n#  {\n#\t\t\"applicants\": 1,\n#\t\t\"time\": \"9/1/2020\"\n#\t  },\n# \t {\n#\t\t\"applicants\": 0,\n#\t\t\"time\": \"10/1/2020\"\n#\t  },\n#\t  {\n#\t\t\"applicants\": 1,\n#\t\t\"time\": \"11/1/2020\"\n#\t  },\n#\t]\n\t\"\"\"\n\t"
        },
        {
          "name": "setKpi4_InterviewHire",
          "params": [
            "payload"
          ],
          "script": "\timport extend.query\n\t\n\tquery \u003d \"\"\"\nSELECT \n\tISNULL(\n\t\tSUM(CASE WHEN [hiredDate] IS NOT NULL AND [hiredState] \u003d 1 THEN 1 ELSE 0 END) * 100.0  \n\t\t/ NULLIF(SUM(CASE WHEN [interviewedDate] IS NOT NULL THEN 1 ELSE 0 END), 0)\n, 0) perc\nFROM [organization].[ApplicantStatus]\nWHERE 1 \u003d 1\nAND [employerId] IN (*?)\n\"\"\"\n\n\targs \u003d []\n\n\t################################################\n\temployerId \u003d payload.get(\u0027employerId\u0027, -1)\n\t\n\twhereIn \u003d \u0027[employerId] IN (*?)\u0027\n\twhereInFix, employerIdFix \u003d extend.query.getWhereInParamFix(whereIn, employerId)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d employerIdFix \n\n\t#employerId \u003d  [17, 38 ,39, 1]\t\n\t# Expect employerId as  list \n\t################################################\n\t\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\t\n\tkpi4 \u003d self.getChild(\"KPI4\")\n\t\n\tkpi4.props.params.Title \u003d \u0027Interview/Hire %\u0027\n\tkpi4.props.params.Value \u003d \u0027{} %\u0027.format(int(result)) if result else \u00270 %\u0027\n"
        },
        {
          "name": "cleanKpis",
          "params": [],
          "script": "\tkpi1 \u003d self.getChild(\"KPI1\")\n\tkpi2 \u003d self.getChild(\"KPI2\")\n\tkpi3 \u003d self.getChild(\"KPI3\")\n\tkpi4 \u003d self.getChild(\"KPI4\")\t\n\n\tkpi1.props.params.Title \u003d \u0027\u0027\n\tkpi1.props.params.Value \u003d 0\n\t\t\n\tkpi2.props.params.Title \u003d \u0027\u0027\n\tkpi2.props.params.Value \u003d 0\n\n\tkpi3.props.params.Title \u003d \u0027\u0027\n\tkpi3.props.params.Value \u003d []\n\n\tkpi4.props.params.Title \u003d \u0027\u0027\n\tkpi4.props.params.Value \u003d 0"
        }
      ],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "mhEmployerDashboardKpiHeader",
          "pageScope": true,
          "script": "\t#raise ValueError(\u0027STOOOOOOOOOOOOOOOOOOOOOOOOOP!!! Under construction!\u0027)\n\t\n\tself.setKpi1_TotalEmployers(payload)\n\tself.setKpi2_NumberOfApplicants(payload)\n\tself.setKpi3_InterviewsMonthly(payload)\n\tself.setKpi4_InterviewHire(payload)\n\n\t\n\t\n\n\n\t",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}