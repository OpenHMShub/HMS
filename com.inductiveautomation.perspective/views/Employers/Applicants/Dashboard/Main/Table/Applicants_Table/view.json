{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\ttry:\n\t\tpayload \u003d{} \n\t\tsystem.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\t\t\n\texcept:\n\t\timport traceback\n\t\tlogger \u003d system.util.getLogger(\"{}\".format(\u0027Providers_Table onStartUp\u0027))\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t\n\n"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "applicantStatusId": null,
    "fetch": null,
    "resultRowCount": 0
  },
  "propConfig": {
    "params.applicantStatusId": {
      "paramDirection": "output",
      "persistent": true
    },
    "params.fetch": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.resultRowCount": {
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 620,
      "width": 1200
    }
  },
  "root": {
    "children": [
      {
        "custom": {
          "_devPulse": false,
          "_devTxt": "",
          "_isDev": false,
          "jsonLastPayload": null,
          "lastPayload": {}
        },
        "events": {
          "component": {
            "onRowClick": {
              "config": {
                "script": "\tapplicantStatusId \u003d event.value.get(\u0027applicantStatusId\u0027)\n\t#ystem.perspective.print((\u0027event.value:\u0027, type(event.value), event.value, applicantStatusId, type(applicantStatusId)))\n\tself.view.params.applicantStatusId \u003d applicantStatusId if applicantStatusId else None\n\t\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "80%",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "custom._devPulse": {
            "onChange": {
              "enabled": null,
              "script": "\tif self.custom._isDev:\n\t\tif currentValue.value is True:\n\t\t\tpayload \u003d {}\n\t\t\tpayload[\u0027appliedState\u0027] \u003d 1\n\t\t\t#payload[\u0027interviewedState\u0027] \u003d 0\n\t\t\t#payload[\u0027hiredState\u0027] \u003d 1\n\t\t\t#payload[\u0027appliedFrom\u0027] \u003d \u00272021-04-14\u0027\n\t\t\t#payload[\u0027appliedTo\u0027] \u003d \u00272021-04-14\u0027\n\t\t\t#payload[\u0027interviewedFrom\u0027] \u003d \u00272021-04-14\u0027\n\t\t\t#payload[\u0027interviewedTo\u0027] \u003d \u00272021-04-14\u0027\n\t\t\t#payload[\u0027hiredFrom\u0027] \u003d \u00272021-04-14\u0027\n\t\t\t#payload[\u0027hiredTo\u0027] \u003d \u00272021-04-14\u0027\n\t\t\t#payload[\u0027searchText\u0027] \u003d \u0027om\u0027\n\t\t\t\n\t\t\tsystem.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\t\t\tself.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\n\t\telse:\n\t\t\t#self.props.data \u003d system.dataset.clearDataset(self.props.data)\n\t\t\tself.props.data \u003d [{key: None for key in self.props.data[0]}]\n\t\t\tself.custom.jsonLastPayload \u003d None\n\n\n"
            }
          },
          "props.filter.text": {
            "access": "PUBLIC"
          }
        },
        "props": {
          "cells": {
            "style": {
              "classes": "Table/Cell_Dashboard"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "employerId",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": ""
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "applicantStatusId",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": ""
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "participantId",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": ""
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "employerName",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Employer Name"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 270
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "position",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Position"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 200
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "participantName",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Participant Name"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 310
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "appliedState",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "right",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "."
              },
              "justify": "right",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "boolean",
              "resizable": false,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 40
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "appliedDate",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Applied Date"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 180
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "interviewedState",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "right",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "."
              },
              "justify": "right",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "boolean",
              "resizable": false,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 40
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "interviewedDate",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Interview Date"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 180
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "hiredState",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "right",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "."
              },
              "justify": "right",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "boolean",
              "resizable": false,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 40
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "hiredDate",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Hired Date"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 180
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "lastActionDate",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Decision Date"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            }
          ],
          "data": [
            {
              "applicantStatusId": null,
              "appliedDate": null,
              "appliedState": null,
              "employerId": null,
              "employerName": null,
              "hiredDate": null,
              "hiredState": null,
              "interviewedDate": null,
              "interviewedState": null,
              "lastActionDate": null,
              "participantId": null,
              "participantName": null,
              "position": null
            }
          ],
          "pager": {
            "initialOption": 100
          },
          "rows": {
            "highlight": {
              "color": "#ccffff"
            },
            "striped": {
              "enabled": false
            }
          },
          "selection": {
            "style": {
              "backgroundColor": "#9af4eb4d"
            }
          },
          "style": {
            "classes": "Background/Default",
            "overflowX": "hidden"
          }
        },
        "scripts": {
          "customMethods": [
            {
              "name": "getDataDb",
              "params": [
                "payload"
              ],
              "script": "\timport extend.query\n\t\n\tdeclaration, queryCte, query, orderBy, fetchOffset \u003d self.getQuery()\n\n\targs \u003d []\t\n\t###############################################\n\targs +\u003d [payload.get(\u0027appliedState\u0027)]\n\targs +\u003d [payload.get(\u0027interviewedState\u0027)]\n\targs +\u003d [payload.get(\u0027hiredState\u0027)]\n\t\n\t###############################################\n\targs +\u003d [payload.get(\u0027appliedFrom\u0027)]\n\targs +\u003d [payload.get(\u0027appliedTo\u0027)]\n\targs +\u003d [payload.get(\u0027interviewedFrom\u0027)]\n\targs +\u003d [payload.get(\u0027interviewedTo\u0027)]\n\targs +\u003d [payload.get(\u0027hiredFrom\u0027)]\n\targs +\u003d [payload.get(\u0027hiredTo\u0027)]\n\t\n\t###############################################\n\tsearchText\u003d payload.get(\u0027searchText\u0027)\n\targs +\u003d [searchText]\n\n\t################################################\n\n\toffset \u003d payload.get(\u0027offset\u0027)\n\tfetch \u003d payload.get(\u0027fetch\u0027)\n\tif offset is not None and fetch is not None:\n\t\t#counterQuery \u003d \u0027{}; WITH cte AS ({}) SELECT COUNT(1) cnt FROM cte\u0027.format(declaration, query)\n\t\t# declaration, queryCte, query, orderBy, fetchOffset\n\t\tcounterQuery \u003d \u0027{} {} ,cte AS ({}) SELECT COUNT(1) cnt FROM cte\u0027.format(declaration, queryCte, query)\n\t\tresultRowCount \u003d system.db.runScalarPrepQuery(counterQuery, args, \u0027HMSOps\u0027)\n\t\targs +\u003d [offset]\n\t\targs +\u003d [fetch]\t\n\t\n\t\tquery \u003d \u0027{} {} {} {} {}\u0027.format(declaration, queryCte, query, orderBy, fetchOffset)\n\t\tresult \u003d system.db.runPrepQuery(query, args, \u0027HMSOps\u0027)\n\t\n\telse:\n\t\tquery \u003d \u0027{} {} {} {}\u0027.format(declaration, queryCte, query, orderBy)\n\t\tresult \u003d system.db.runPrepQuery(query, args, \u0027HMSOps\u0027)\t\n\t\tresultRowCount \u003d result.rowCount\n\t\n\t#ystem.perspective.print((\u0027Exec: args\u0027,args)) \n\t\n\treturn result, resultRowCount\n"
            },
            {
              "name": "getPropsColumns",
              "params": [
                "dataset"
              ],
              "script": "\tjsonDefaultColumn \u003d \"\"\"\n  {\n\t    \"field\": \"\",\n\t    \"visible\": true,\n\t    \"editable\": false,\n\t    \"render\": \"auto\",\n\t    \"justify\": \"left\",\n\t    \"align\": \"center\",\n\t    \"resizable\": true,\n\t    \"sortable\": true,\n\t    \"sort\": \"none\",\n\t    \"viewPath\": \"\",\n\t    \"viewParams\": {},\n\t    \"boolean\": \"checkbox\",\n\t    \"number\": \"value\",\n\t    \"progressBar\": {\n\t      \"max\": 100,\n\t      \"bar\": {\n\t        \"color\": \"#62A3F6\",\n\t        \"linecap\": \"round\",\n\t        \"width\": 5\n\t      },\n\t      \"track\": {\n\t        \"color\": \"#DADADA\",\n\t        \"linecap\": \"round\",\n\t        \"width\": 2\n\t      },\n\t      \"value\": {\n\t        \"color\": \"#7D7D7D\",\n\t        \"show\": true\n\t      }\n\t    },\n\t    \"toggleSwitch\": {\n\t      \"color\": {\n\t        \"selected\": \"#2196F3\",\n\t        \"unselected\": \"#FFFFFF\"\n\t      }\n\t    },\n\t    \"numberFormat\": \"0,0.##\",\n\t    \"dateFormat\": \"MM/DD/YYYY\",\n\t    \"width\": \"\",\n\t    \"strictWidth\": false,\n\t    \"header\": {\n\t      \"title\": \"\",\n\t      \"justify\": \"left\",\n\t      \"align\": \"center\",\n\t      \"style\": {\n\t        \"classes\": \"Table/Column_Header\"\n\t      }\n\t    },\n\t    \"footer\": {\n\t      \"title\": \"\",\n\t      \"justify\": \"left\",\n\t      \"align\": \"center\",\n\t      \"style\": {\n\t        \"classes\": \"\"\n\t      }\n\t    },\n\t    \"style\": {\n\t      \"classes\": \"Table/Column_Normal\"\n\t    }\n\t  },\t\n\t\"\"\"\n\n\t\n\tcolumnsForced \u003d [\n\t  {\n\t    \"field\": \"id\",\n\t    \"width\": 40,\n\t    \"title\": \"\"\n\t  },\n\t  {\n\t    \"field\": \"employerName\",\n\t    \"width\": 270,\n\t    \"title\": \"Employer Name\"\n\t  },\n\t  {\n\t    \"field\": \"position\",\n\t    \"width\": 200,\n\t    \"title\": \"Position\"\n\t  },\t  \n\t  {\n\t    \"field\": \"participantName\",\n\t    \"width\": 310,\n\t    \"title\": \"Participant Name\"\n\t  },\n\t  {\n\t    \"field\": \"appliedState\",\n\t    \"width\": 40,\n\t    \"title\": \".\"\n\t  },\n\t  {\n\t    \"field\": \"appliedDate\",\n\t    \"width\": 180,\n\t    \"title\": \"Applied Date\"\n\t  },\n\t  {\n\t    \"field\": \"interviewedState\",\n\t    \"width\": 40,\n\t    \"title\": \".\"\n\t  },\n\t  {\n\t    \"field\": \"interviewedDate\",\n\t    \"width\": 180,\n\t    \"title\": \"Interview Date\"\n\t  },\n\t  {\n\t    \"field\": \"hiredState\",\n\t    \"width\": 40,\n\t    \"title\": \".\"\n\t  },\n\t  {\n\t    \"field\": \"hiredDate\",\n\t    \"width\": 180,\n\t    \"title\": \"Hired Date\"\n\t  },\n\t  {\n\t    \"field\": \"lastActionDate\",\n\t    \"width\": None,\n\t    \"title\": \"Decision Date\"\n\t  },\n\t]\n\n\tcolNames \u003d system.dataset.getColumnHeaders(dataset)\n\n\t_columns \u003d []\n\tfor col in colNames:\n\t\t# This conversion json_\u003edict create actually deepcopy\n\t\tpyColumn \u003d system.util.jsonDecode(jsonDefaultColumn)\n\t\t\n\t\t# Note: Field must contain only letters and numbers.\n\t\tpyColumn[\u0027field\u0027] \u003d col\n\t\t\n\t\t_dictCol \u003d None\n\t\tfor item in columnsForced:\n\t\t\tif item[\u0027field\u0027] \u003d\u003d pyColumn[\u0027field\u0027]:\n\t\t\t\t_dictCol \u003d item.copy() \n\t\t\t\n\t\t\n\t\t#ystem.perspective.print((_dictCol))\n\t\t\n\t\tpyColumn[\u0027header\u0027][\u0027title\u0027] \u003d _dictCol[\u0027title\u0027] if _dictCol else \u0027\u0027\n\t\t\n\t\tif _dictCol and _dictCol.get(\u0027width\u0027):\n\t\t\tpyColumn[\u0027width\u0027] \u003d _dictCol[\u0027width\u0027]\n\t\t\tpyColumn[\u0027strictWidth\u0027] \u003d True\n\n\t\tif col in [\u0027employerId\u0027, \u0027applicantStatusId\u0027, \u0027participantId\u0027]:\n\t\t\tpyColumn[\"visible\"] \u003d False\n\n\n\t\tif col in [\u0027appliedState\u0027, \u0027interviewedState\u0027, \u0027hiredState\u0027]:\n\t\t\tpyColumn[\u0027resizable\u0027] \u003d False\n\t\t\tpyColumn[\"render\"] \u003d \"boolean\"\n\t\t\tpyColumn[\"justify\"] \u003d \"right\"\n\t\t\tpyColumn[\"header\"][\"justify\"] \u003d \"right\"\n\n\t\tif col in [\u0027appliedDate\u0027, \u0027interviewedDate\u0027, \u0027hiredDate\u0027]:\n\t\t\tpyColumn[\"dateFormat\"] \u003d \"MM/DD/YYYY\"\n\t\t\tpyColumn[\"justify\"] \u003d \"left\"\n\t\t\tpyColumn[\"header\"][\"justify\"] \u003d \"left\"\n\n\t\tif col in [\u0027lastActionDate\u0027]:\n\t\t\tpyColumn[\"dateFormat\"] \u003d \"MM/DD/YYYY\"\n\t\t\tpyColumn[\"justify\"] \u003d \"center\"\n\t\t\tpyColumn[\"header\"][\"justify\"] \u003d \"center\"\n\t\t\t\t\t\n\t\t_columns.append(pyColumn)\n\t\n\t#ystem.perspective.print((\"_columns: \",_columns))\n\t\n\treturn _columns"
            },
            {
              "name": "correctTimeForClient",
              "params": [
                "pyds",
                "columnsToCorrect"
              ],
              "script": "\t\n\t# !!!!!!!!!!!  NOT TESTED !!!!!!!!!!!!!!!!!!!!!!!\n\t\n\t# Table automaticaly change datetime according to client timezone, \n\t# For this table we don\u0027t need automatic conversion, we must recorrect datetimes, according client timezone.\n\t# Actually to see same values like in db.\n\t\n\t# This is correction client against ignition server\n\t# TODO add correction to SQL server\n\tcorrectionTime \u003d int(60*(system.date.getTimezoneOffset() - self.session.props.device.timezone.utcOffset)) \n\t\n\tlistDateFix \u003d [[]*len(columnsToCorrect)]\n\tfor rowIndex, row in enumerate(pyds):\n\t\tfor colIndex, col in enumerate(columnsToCorrect):\n\t\t\tlistDateFix[colIndex].append(system.date.addMinutes(row[col], correctionTime))\n\t\n\n\tfor index, item in enumerate(listDateFix):\n\t\tcolNames \u003d system.dataset.getColumnHeaders(pyds)\n\t\tcolPosition \u003d colNames.index(columnsToCorrect[index])\n\t\tpyds \u003d system.dataset.filterColumns(pyds, [ x for x in colNames if x !\u003d columnsToCorrect[index]])\n\t\tpyds \u003d system.dataset.addColumn(pyds,colPosition,item,columnsToCorrect[index])\n\t\n\treturn pyds\n"
            },
            {
              "name": "setMisc",
              "params": [],
              "script": "\t\n\tself.props.cells.style\u003d {\n\t    \"classes\": \"Table/Cell_Dashboard\"\n\t}\n\t\n\tself.props.style \u003d {\n\t  \"classes\": \"Background/Default\",\n\t  \"overflowX\": \"hidden\"\n\t}\n"
            },
            {
              "name": "doByCondition",
              "params": [
                "payload"
              ],
              "script": "\timport java.lang\n\n\t# 1. Add fetch to payload if not exist. We can send from pager or use value self.view.params.fetch.\n\t# This should be step before offset\n\tfetch \u003d payload.get(\u0027fetch\u0027)\n\t\n\tif not(fetch):\n\t\tfetch \u003d self.view.params.fetch\n\t\n\t# If fetch value is integer greater then 0, pager exist\n\tif fetch and fetch \u003e 1:\n\t\tpayload[\u0027fetch\u0027] \u003d fetch\n\n\t\t#  2. If payload has \u0027offset\u0027, it means that comming from pager. Then take lastPayload \n\t\t# stored as json string, deserialize to python dict and  add node\u0027 offset\u0027\n\t\t# Else means payload is comming from conditions. Don\u0027t do anything just continue\n\t\tif payload.get(\u0027offset\u0027) is not None:\n\t\t\toffset \u003d payload[\u0027offset\u0027]\n\t\t\tpayload \u003d {}\n\t\t\tfor key in self.custom.lastPayload:\n\t\t\t\tpayload[key] \u003d self.custom.lastPayload[key]\n\t\t\t\n\t\t\t\n\t\t\tpayload[\u0027offset\u0027] \u003d offset\n\t\t\tpayload[\u0027fetch\u0027] \u003d fetch\n\t\telse:\n\t\t\tpayload[\u0027offset\u0027] \u003d 0\n\t\n\t# 3. Get data from DB. Data is dataset which contain only fetch number of rows. \n\t# _resultRowCount is scalar value which represent number of rows in case the that query is executed without  OFFSET ... FETCH...\n\t_data, _resultRowCount \u003d self.getDataDb(payload)\n\t\n\tself.view.params.resultRowCount \u003d _resultRowCount\n\t\n\n\t\n\t# 4. Set some misc props if necessary (explicit)\n\tself.setMisc()\n\n\n\t\n\t# 5. Step get columns props (explicit adjustment)\n\tself.props.columns \u003d self.getPropsColumns(_data)\n\n\t# 6. Correct values in datetime column according client timezone. (check comments inside function)\n\t#_data \u003d self.correctTimeForClient(_data, [\u0027dob\u0027])\n\t\n\n\n\t# 7. Add dummy empty raw if result is empty dataset. Reason to do that is to avoid loosing foqus on search cell in filters.\n\t\n\t_colNames \u003d system.dataset.getColumnHeaders(_data)\n\t\n\tif _data.rowCount \u003d\u003d 0:\n\t\t_lstData \u003d [{col: None for col in _colNames}]\n\telse:\n\t\t_pyds \u003d system.dataset.toPyDataSet(_data)\n\t\t_lstData \u003d [{col: row[col] for col in _colNames} for row in _pyds]\n\n\t#ystem.perspective.print((\u0027_lstData: \u0027,_lstData))\n\n\t#_makeUped \u003d self.getMakeUpData(_lstData)\n\t#self.props.data \u003d _makeUped\n\n\tself.props.data \u003d _lstData \n\tself.view.params.applicantStatusId \u003d None\n\tself.props.selection.selectedRow \u003d None\n\tself.props.selection.selectedColumn \u003d None\n\t\n\t#self.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\t\n\t# Remove fetch and offset, it is not necessary to store.\n\t#payload.pop(\u0027offset\u0027,None)\n\t#payload.pop(\u0027fetch\u0027,None)\n\t#self.custom.lastPayload \u003d payload\n\n\n"
            },
            {
              "name": "getQuery",
              "params": [],
              "script": "\t\n\tdeclaration \u003d \t\"\"\"\nDECLARE \n\t\t @appliedState BIT \u003d ?\n\t\t,@interviewedState BIT \u003d ?\n\t\t,@hiredState BIT \u003d ?\n\t\t,@appliedFrom DATETIME \u003d ?\n\t\t,@appliedTo DATETIME \u003d ?\n\t\t,@interviewedFrom DATETIME \u003d ?\n\t\t,@interviewedTo DATETIME \u003d ?\n\t\t,@hiredFrom DATETIME \u003d ?\n\t\t,@hiredTo DATETIME \u003d ?\n\t\t,@searchText VARCHAR(max) \u003d ?\n\t\"\"\"\n\t\n\tqueryCte \u003d \"\"\"\n;WITH cte AS (\nSELECT \n\t [EmployerNew].[id] AS [employerId]\n\t,[ApplicantStatus].[id] AS [applicantStatusId]\n\t,[ApplicantStatus].[participantId]\n\t,[EmployerNew].[Employer Name] AS [employerName]\n\t,[ApplicantStatus].[position]\n\t,CONCAT([humans].[Human].firstName,\u0027 \u0027,[humans].[Human].middleName,\u0027 \u0027,[humans].[Human].lastName) as [participantName]\n\t,CAST(CASE WHEN [organization].[ApplicantStatus].[appliedDate] is NULL THEN 0 ELSE 1\tEND AS bit) AS [appliedState]\n\t,[ApplicantStatus].[appliedDate]\n\t,CAST(CASE WHEN [organization].[ApplicantStatus].[interviewedDate] is NULL THEN 0 ELSE 1 END AS bit) AS [interviewedState]\n\t,[ApplicantStatus].[interviewedDate]\n\t,[ApplicantStatus].[hiredState]\n\t,[ApplicantStatus].[hiredDate]\n\t,CASE WHEN [hiredDate] IS NOT NULL THEN \n\t\t[hiredDate]\n\tELSE \n\t\tCASE WHEN [interviewedDate] IS NOT NULL THEN \n\t\t\t[interviewedDate]\n\t\tELSE \n\t\t\t[appliedDate] \n\t\tEND \n\tEND AS [lastActionDate]\nFROM [organization].[EmployerNew]\n\tLEFT JOIN [organization].[ApplicantStatus] ON [ApplicantStatus].[employerId] \u003d [EmployerNew].[id]\n\tLEFT JOIN [participant].[Participant] ON [ApplicantStatus].[participantId] \u003d [Participant].[id]\n\tLEFT JOIN [humans].[Human] ON [Participant].[humanId] \u003d [Human].[id]\nWHERE [ApplicantStatus].[timeRetired] IS NULL\nAND [Participant].timeRetired IS NULL\n)\n\"\"\"\n\n\tquery \u003d \"\"\"\nSELECT\n\t [employerId]\n\t,[applicantStatusId]\n\t,[participantId]\n\t,[employerName]\n\t,[position]\n\t,[participantName]\n\t,[appliedState]\n\t,[appliedDate]\n\t,[interviewedState]\n\t,[interviewedDate]\n\t,[hiredState]\n\t,[hiredDate]\n\t,[lastActionDate]\nFROM cte\nWHERE 1\u003d1\n\tAND ([applicantStatusId] IS NOT NULL)\n\tAND (appliedState \u003d @appliedState OR @appliedState IS NULL)\n\tAND (interviewedState \u003d @interviewedState OR @interviewedState IS NULL)\n\tAND (hiredState \u003d @hiredState OR @hiredState IS NULL)\n\tAND (@appliedFrom IS NULL OR [appliedDate] \u003e\u003d @appliedFrom)\n\tAND (@appliedTo IS NULL OR [appliedDate] \u003c @appliedTo)\n\tAND (@interviewedFrom IS NULL OR [interviewedDate] \u003e\u003d @interviewedFrom)\n\tAND (@interviewedTo IS NULL OR [interviewedDate] \u003c @interviewedTo)\n\tAND (@hiredFrom IS NULL OR [hiredDate] \u003e\u003d @hiredFrom)\n\tAND (@hiredTo IS NULL OR [hiredDate] \u003c @hiredTo)\n\tAND (\n\t\t@searchText \u003d \u0027\u0027 \n\t\tOR @searchText IS NULL \n\t\tOR [employerName] LIKE CONCAT(\u0027%\u0027,@searchText,\u0027%\u0027) \n\t\tOR [position] LIKE CONCAT(\u0027%\u0027,@searchText,\u0027%\u0027) \n\t\tOR [participantName] LIKE CONCAT(\u0027%\u0027,@searchText,\u0027%\u0027) \n\t)\n\t\"\"\"\n\torderBy \u003d \"\"\"\nORDER BY [employerName], [lastActionDate] desc\n\"\"\"\n\n\n\tfetchOffset \u003d \"\"\"\nOFFSET ? ROWS \nFETCH NEXT ? ROWS ONLY;  \n\t\"\"\"\t\n\treturn declaration, queryCte, query, orderBy, fetchOffset"
            },
            {
              "name": "getMakeUpData",
              "params": [
                "lstData"
              ],
              "script": "\t\n\n\t_style \u003d {\t\"color\": \"#0c4e85\",\n\t\t\t\t\"cursor\": \"pointer\",\n\t\t\t\t\"fontFamily\": \"Proxima Nova ExCn Medium\",\n\t\t\t\t\"text-align\": \"left\"}\n\t\t\t\t\t\n\n\n\tfor row in lstData:\n\t\tfor key in row:\n\t\t\tif key \u003d\u003d \u0027employerName\u0027:\n\t\t\t\trow[key] \u003d {\u0027value\u0027: row[key] if row[key] is not None else \u0027\u0027, \"style\": _style}\n\t\t\tif key \u003d\u003d \u0027website\u0027:\n\t\t\t\trow[key] \u003d row[key][:27] + \u0027 ~ \u0027 + row[key][-7:] if row[key] and len(row[key]) \u003e 40 else row[key]\n\treturn lstData"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "mhByCondition",
              "pageScope": true,
              "script": "\t#ystem.perspective.print((\u0027Msgstep1\u0027))\n\tself.doByCondition(payload)",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "mhSetProps",
              "pageScope": true,
              "script": "\t_selectedRow \u003d payload.get(\u0027selectedRow\u0027)\n\t\n\t#ystem.perspective.print((\u0027payload:\u0027,payload))\n\t\n\tif _selectedRow is None:\n\t\tself.view.params.applicantStatusId \u003d None\n\t\tself.props.selection.selectedRow \u003d None\n\t\tself.props.selection.selectedColumn \u003d None",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "justify": "space-around",
      "style": {
        "overflow": "visible"
      }
    },
    "type": "ia.container.flex"
  }
}