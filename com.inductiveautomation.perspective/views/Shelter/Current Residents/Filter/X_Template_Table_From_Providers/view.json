{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\ttry:\n\t\tpayload \u003d{} #\u0027offset\u0027:0,\u0027fetch\u0027 : 100 }\n\t\tsystem.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\n\texcept:\n\t\timport traceback\n\t\tlogger \u003d system.util.getLogger(\"{}\".format(\u0027Providers_Table onStartUp\u0027))\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)\t\n\n"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "fetch": null,
    "resultRowCount": 32
  },
  "propConfig": {
    "params.fetch": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.resultRowCount": {
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 1053,
      "width": 1918
    }
  },
  "root": {
    "children": [
      {
        "custom": {
          "_devPulse": false,
          "_devTxt": "",
          "_isDev": false,
          "jsonLastPayload": "{}",
          "lastPayload": {}
        },
        "events": {
          "component": {
            "onRowClick": {
              "config": {
                "script": "\tselectedColumn \u003d self.props.selection.selectedColumn \n\n\ttrackID \u003d event.value.get(\u0027id\u0027)\n\t\n\tsystem.perspective.print((\u0027trackID : {} {}\u0027.format(trackID , type(trackID)) ))\n\t\n\tif trackID is None:\n\t\tsystem.perspective.print((\u0027trackID is None : {} {}\u0027.format(trackID , type(trackID)) ))\n\t\treturn\n\t\n\tsystem.perspective.print((\u0027selectedColumn: \u0027, selectedColumn ))\n\t\n\tif selectedColumn \u003d\u003d \"id\":\n\t\tid \u003d \"PreviewProvider\" \n\t\tparams \u003d {\"trackID\":trackID}\n\t\tsystem.perspective.openDock(id\u003did, params\u003dparams)\n\n\telif selectedColumn \u003d\u003d \"providerName\" or selectedColumn is None:\n\t\ttab_id \u003d 1\n\t\tsystem.perspective.print((\u0027col is name : {} {}\u0027.format(trackID , tab_id) ))\n\t\tsystem.perspective.navigate(\"Providers/Details/\" + str(trackID) + \"/\" + str(tab_id))\n\telse:\n\t\tpass\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "custom._devPulse": {
            "onChange": {
              "enabled": null,
              "script": "\tif self.custom._isDev:\n\t\tif currentValue.value is True:\n\t\t\tpayload \u003d {}\n\t\t\t\n\t\t\tpayload[\u0027countReferralFromTo\u0027] \u003d [1,5]\n\t\t\tpayload[\u0027providerTypeId\u0027] \u003d [0,2]\n\t\t\t#payload[\u0027searchText\u0027] \u003d self.custom._devTxt\n\t\t\t#payload[\u0027fetch\u0027] \u003d 12\n\t\t\t\n\t\t\tsystem.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\t\t\tself.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\n\t\telse:\n\t\t\t#payload \u003d {}\n\t\t\t#payload[\u0027providerTypeId\u0027] \u003d [-1]\n\t\t\t#payload[\u0027searchText\u0027] \u003d self.custom._devTxt\n\t\t\t#payload[\u0027fetch\u0027] \u003d 12\n\t\t\t\n\t\t\t#system.perspective.sendMessage(\u0027mhByCondition\u0027, payload \u003d payload)\n\t\t\t#self.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\n\t\t\t#self.props.data \u003d [{key: \u0027\u0027 if key \u003d\u003d \u0027providerName\u0027 else None for key in self.props.data[0]}]\n\t\t\tself.props.data \u003d [{key: None for key in self.props.data[0]}]\n\t\t\tself.custom.jsonLastPayload \u003d None\n\n\n"
            }
          },
          "props.filter.text": {
            "access": "PUBLIC"
          }
        },
        "props": {
          "cells": {
            "style": {
              "classes": "Table/Cell_Dashboard"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "Providers/Dashboard/Components/Tables/Templates/TableOptions",
              "visible": true,
              "width": 40
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "providerName",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Name"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 300
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "providerTypeName",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Type"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "countReferral",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Referrals"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 150
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "timeCreated",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Created"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 150
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "phone",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Phone"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "none",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 150
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "city",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "City"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 200
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "street",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Address"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "zipCode",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Zip"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "none",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 100
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "website",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Table/Column_Header"
                },
                "title": "Website"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            }
          ],
          "data": [
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 252,
              "phone": "9083237584",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Andrew\u0027s TestRev4"
              },
              "providerTypeName": "Community Partner",
              "street": "My street",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1618679976253
              },
              "website": "www.google.com",
              "zipCode": 37027
            },
            {
              "city": "Brentwood",
              "countReferral": 0,
              "id": 263,
              "phone": "205-602-9993",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "AndrewsOtherTestEntry"
              },
              "providerTypeName": "Medical Facility",
              "street": "Here is my address",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1622066953200
              },
              "website": "",
              "zipCode": 37027
            },
            {
              "city": "Nashville",
              "countReferral": 2,
              "id": 2,
              "phone": "615-235-4567",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Bridges"
              },
              "providerTypeName": "Community Partner",
              "street": "935 Edgehill Road",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1536776387000
              },
              "website": "www.bridges.org",
              "zipCode": 37211
            },
            {
              "city": "",
              "countReferral": 0,
              "id": 3,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Cecilia Grespan"
              },
              "providerTypeName": "Community Partner",
              "street": "1234 Main St",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1480936524000
              },
              "website": "",
              "zipCode": 37211
            },
            {
              "city": "Nashville",
              "countReferral": 1,
              "id": 4,
              "phone": "615-862-7611",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Central Precinct"
              },
              "providerTypeName": "Law Enforcement",
              "street": "601 Korean Veterans Blvd",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1434725417000
              },
              "website": "",
              "zipCode": 37203
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 6,
              "phone": "615-875-5111",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Comprehensive Care Center"
              },
              "providerTypeName": "Medical Facility",
              "street": "719 Thompson Lane",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1434640950000
              },
              "website": "",
              "zipCode": 37204
            },
            {
              "city": "",
              "countReferral": 2,
              "id": 7,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Country Music Hall of Fame"
              },
              "providerTypeName": "Community Partner",
              "street": "",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1564760986000
              },
              "website": "",
              "zipCode": 0
            },
            {
              "city": "Nash",
              "countReferral": 0,
              "id": 231,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "cTest9"
              },
              "providerTypeName": "Community Partner",
              "street": "cAddr9",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1604755957060
              },
              "website": "",
              "zipCode": 12345
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 8,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Family Life Center (Women\u0027s Mission)"
              },
              "providerTypeName": "Community Partner",
              "street": "1716 Rosa Parks Blvd",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1543236305000
              },
              "website": "",
              "zipCode": 37208
            },
            {
              "city": "Whites Creek",
              "countReferral": 1,
              "id": 9,
              "phone": "615-876-2754",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Grace Healthcare"
              },
              "providerTypeName": "Medical Facility",
              "street": "3425 Knight Drive",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1496936879000
              },
              "website": "",
              "zipCode": 37189
            },
            {
              "city": "Nashville",
              "countReferral": 1,
              "id": 10,
              "phone": "615-342-1000",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "HCA Centennial"
              },
              "providerTypeName": "Medical Facility",
              "street": "2300 Patterson St",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1434709659000
              },
              "website": "",
              "zipCode": 37203
            },
            {
              "city": "Hermitage",
              "countReferral": 0,
              "id": 261,
              "phone": "615-232-4334",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Hermitage Police"
              },
              "providerTypeName": "Law Enforcement",
              "street": "1234 Old Hickory Blvd",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1621771924490
              },
              "website": "",
              "zipCode": 37111
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 13,
              "phone": "615-726-3340",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Mental Health Cooperative"
              },
              "providerTypeName": "Medical Facility",
              "street": "275 Cumberland Bend",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592207
                ],
                "$ts": 1434710501000
              },
              "website": "",
              "zipCode": 37228
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 14,
              "phone": "615-862-6400",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Metro Social Services"
              },
              "providerTypeName": "Community Partner",
              "street": "800 2nd Avenue North",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1497864752000
              },
              "website": "www.xyz.com",
              "zipCode": 37201
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 15,
              "phone": "615-902-7400",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Middle TN Mental Health Institute"
              },
              "providerTypeName": "Medical Facility",
              "street": "221 Stewarts Ferry Pike",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434710644000
              },
              "website": "",
              "zipCode": 37214
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 16,
              "phone": "615-880-1411",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Midtown Precinct"
              },
              "providerTypeName": "Law Enforcement",
              "street": "1443 12th Avenue South",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434725641000
              },
              "website": "",
              "zipCode": 37203
            },
            {
              "city": "Mount Juliet",
              "countReferral": 0,
              "id": 233,
              "phone": "615-123-4567",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Mount Juliet Police"
              },
              "providerTypeName": "Law Enforcement",
              "street": "1234 Mount Juliet Blvd",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1605952991160
              },
              "website": "www.mjpd.tn.gov",
              "zipCode": 37122
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 17,
              "phone": "615-341-4000",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Nashville Metro General Hospital"
              },
              "providerTypeName": "Medical Facility",
              "street": "1818 Albion St",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434710574000
              },
              "website": "",
              "zipCode": 37208
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 18,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Nashville Rescue Mission"
              },
              "providerTypeName": "Community Partner",
              "street": "639 Lafayette Street",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1543236096000
              },
              "website": "",
              "zipCode": 37203
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 19,
              "phone": "615-327-4751",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Nashville VA Medical"
              },
              "providerTypeName": "Medical Facility",
              "street": "1310 24th Avenue South",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434711024000
              },
              "website": "",
              "zipCode": 37212
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 235,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Open Table"
              },
              "providerTypeName": "Community Partner",
              "street": "PO Box 110266",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1608470767263
              },
              "website": "opentablenashville.org",
              "zipCode": 372222
            },
            {
              "city": "Franklin",
              "countReferral": 0,
              "id": 21,
              "phone": "615-628-5700",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Rolling Hills Hospital"
              },
              "providerTypeName": "Medical Facility",
              "street": "2014 Quail Hollow Circle",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1503586427000
              },
              "website": "",
              "zipCode": 37067
            },
            {
              "city": "Madison",
              "countReferral": 0,
              "id": 22,
              "phone": "615-865-8520",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Signature Healthcare"
              },
              "providerTypeName": "Medical Facility",
              "street": "431 Larkin Springs Road",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1512143658000
              },
              "website": "",
              "zipCode": 37115
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 23,
              "phone": "615-284-8211",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "St. Thomas Midtown"
              },
              "providerTypeName": "Medical Facility",
              "street": "2000 Church Street",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434710760000
              },
              "website": "",
              "zipCode": 37236
            },
            {
              "city": "",
              "countReferral": 8,
              "id": 24,
              "phone": "",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Tennessee Department of Corrections"
              },
              "providerTypeName": "Law Enforcement",
              "street": "",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1561116985000
              },
              "website": "",
              "zipCode": 0
            },
            {
              "city": "Murfreesboro",
              "countReferral": 0,
              "id": 25,
              "phone": "615-203-8239",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Trustpoint Hospital"
              },
              "providerTypeName": "Medical Facility",
              "street": "1009 North Thompson Lane",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1495718356000
              },
              "website": "",
              "zipCode": 37129
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 26,
              "phone": "615-256-0197",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "UNHS Downtown Clinic"
              },
              "providerTypeName": "Medical Facility",
              "street": "526 8th Avenue South",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434710905000
              },
              "website": "",
              "zipCode": 37203
            },
            {
              "city": "Nashville",
              "countReferral": 1,
              "id": 27,
              "phone": "615-327-4751",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "VA Nashville"
              },
              "providerTypeName": "Community Partner",
              "street": "24th Avenue South",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1521212662000
              },
              "website": "",
              "zipCode": 37212
            },
            {
              "city": "Nashville",
              "countReferral": 1,
              "id": 28,
              "phone": "800-827-1000",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "VA Regional Office"
              },
              "providerTypeName": "Community Partner",
              "street": "100 9th Avenue South",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1499441016000
              },
              "website": "",
              "zipCode": 37203
            },
            {
              "city": "Nashville",
              "countReferral": 0,
              "id": 29,
              "phone": "615-322-5000",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Vanderbilt PAC"
              },
              "providerTypeName": "Law Enforcement",
              "street": "1211 Medical Center Drive",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434711098000
              },
              "website": "",
              "zipCode": 37232
            },
            {
              "city": "Nashville",
              "countReferral": 6,
              "id": 30,
              "phone": "615-322-2745",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Vanderbilt Police"
              },
              "providerTypeName": "Law Enforcement",
              "street": "2301 Vanderbilt Place",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1434725895000
              },
              "website": "",
              "zipCode": 37240
            },
            {
              "city": "",
              "countReferral": 0,
              "id": 31,
              "phone": "615-741-1606",
              "providerName": {
                "style": {
                  "color": "#0c4e85",
                  "cursor": "pointer",
                  "fontFamily": "Proxima Nova ExCn Medium",
                  "text-align": "left"
                },
                "value": "Vocational Rehab"
              },
              "providerTypeName": "Community Partner",
              "street": "",
              "timeCreated": {
                "$": [
                  "ts",
                  192,
                  1623228592208
                ],
                "$ts": 1550140930000
              },
              "website": "",
              "zipCode": 0
            }
          ],
          "pager": {
            "initialOption": 100
          },
          "rows": {
            "striped": {
              "enabled": false
            }
          },
          "style": {
            "classes": "Background/Default",
            "overflowX": "hidden"
          }
        },
        "scripts": {
          "customMethods": [
            {
              "name": "getDataDb",
              "params": [
                "payload"
              ],
              "script": "\timport extend.query\n\t\n\tdeclaration, queryCte, query, orderBy, fetchOffset \u003d self.getQuery()\n\n\targs \u003d []\t\n\n\t###############################################\n\t# This param must be java.util.Date or None. Not allowed empty string \u0027\u0027\n\tactivity_start\u003d payload.get(\u0027activityRange\u0027)\n\targs +\u003d [activity_start]\n\n\t################################################\n\tcountReferralFromTo \u003d payload.get(\u0027countReferralFromTo\u0027)\n\t# Examples: countReferralFromTo \u003d [26,50] ; countReferralFromTo \u003d [50, None]\n\tif countReferralFromTo is not None:\n\t\tif countReferralFromTo[0] is None:\n\t\t\tcountReferralFrom \u003d -1000000\n\t\tif countReferralFromTo[1] is None:\n\t\t\tcountReferralTo \u003d 1000000\n\t\telse:\n\t\t\tcountReferralFrom, countReferralTo \u003d countReferralFromTo[0], countReferralFromTo[1]\n\telse:\n\t\tcountReferralFrom, countReferralTo \u003d -1000000, 1000000\n\t\n\targs +\u003d [countReferralFrom, countReferralTo]\n\n\n\t###############################################\n\tsearch_text \u003d payload.get(\u0027searchText\u0027)\n\t\n\tif search_text is None:\n\t\tsearch_text \u003d \u0027\u0027\n\t\n\targs +\u003d [search_text]\n\t################################################\n\t# providerTypeIds should be list [0,2]. If it is None whereInFix will be always true: 1 \u003d 1. \n\t# If it is single value will be [val]. \n\tproviderTypeIds \u003d payload.get(\u0027providerTypeId\u0027)\n\t\n\twhereIn \u003d \u0027cteProvider.[providerTypeId] in (*?)\u0027 # [0,2]   return: \u0027cteProvider.[providerTypeId] in (?,?)\u0027 , [0,2] \n\t#whereInFix, providerTypeIdsFix \u003d self.getWhereInParamFix(whereIn, providerTypeIds) \n\twhereInFix, providerTypeIdsFix \u003d extend.query.getWhereInParamFix(whereIn, providerTypeIds)\n\t\n\t#ystem.perspective.print((\u0027whereIn, whereInFix:\u0027,whereIn, whereInFix,providerTypeIds,providerTypeIdsFix))\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d providerTypeIdsFix\n\n\t###############################################\n\toffset \u003d payload.get(\u0027offset\u0027)\n\tfetch \u003d payload.get(\u0027fetch\u0027)\n\tif offset is not None and fetch is not None:\n\t\t#counterQuery \u003d \u0027{}; WITH cte AS ({}) SELECT COUNT(1) cnt FROM cte\u0027.format(declaration, query)\n\t\t# declaration, queryCte, query, orderBy, fetchOffset\n\t\tcounterQuery \u003d \u0027{} {} ,cte AS ({}) SELECT COUNT(1) cnt FROM cte\u0027.format(declaration, queryCte, query)\n\t\tresultRowCount \u003d system.db.runScalarPrepQuery(counterQuery, args, \u0027HMSOps\u0027)\n\t\targs +\u003d [offset]\n\t\targs +\u003d [fetch]\t\n\t\n\t\tquery \u003d \u0027{} {} {} {} {}\u0027.format(declaration, queryCte, query, orderBy, fetchOffset)\n#\t\tsystem.perspective.print(query)\n\t\tresult \u003d system.db.runPrepQuery(query, args, \u0027HMSOps\u0027)\n\t\n\telse:\n\t\tquery \u003d \u0027{} {} {} {}\u0027.format(declaration, queryCte, query, orderBy)\n#\t\tsystem.perspective.print(query)\n\t\tresult \u003d system.db.runPrepQuery(query, args, \u0027HMSOps\u0027)\t\n\t\tresultRowCount \u003d result.rowCount\n\t\n\tsystem.perspective.print((\u0027Exec: args\u0027,args)) \n\n\treturn result, resultRowCount\n"
            },
            {
              "name": "getPropsColumns",
              "params": [
                "dataset"
              ],
              "script": "\tjsonDefaultColumn \u003d \"\"\"\n  {\n\t    \"field\": \"\",\n\t    \"visible\": true,\n\t    \"editable\": false,\n\t    \"render\": \"auto\",\n\t    \"justify\": \"left\",\n\t    \"align\": \"center\",\n\t    \"resizable\": true,\n\t    \"sortable\": true,\n\t    \"sort\": \"none\",\n\t    \"viewPath\": \"\",\n\t    \"viewParams\": {},\n\t    \"boolean\": \"checkbox\",\n\t    \"number\": \"value\",\n\t    \"progressBar\": {\n\t      \"max\": 100,\n\t      \"bar\": {\n\t        \"color\": \"#62A3F6\",\n\t        \"linecap\": \"round\",\n\t        \"width\": 5\n\t      },\n\t      \"track\": {\n\t        \"color\": \"#DADADA\",\n\t        \"linecap\": \"round\",\n\t        \"width\": 2\n\t      },\n\t      \"value\": {\n\t        \"color\": \"#7D7D7D\",\n\t        \"show\": true\n\t      }\n\t    },\n\t    \"toggleSwitch\": {\n\t      \"color\": {\n\t        \"selected\": \"#2196F3\",\n\t        \"unselected\": \"#FFFFFF\"\n\t      }\n\t    },\n\t    \"numberFormat\": \"0,0.##\",\n\t    \"dateFormat\": \"MM/DD/YYYY\",\n\t    \"width\": \"\",\n\t    \"strictWidth\": false,\n\t    \"header\": {\n\t      \"title\": \"\",\n\t      \"justify\": \"left\",\n\t      \"align\": \"center\",\n\t      \"style\": {\n\t        \"classes\": \"Table/Column_Header\"\n\t      }\n\t    },\n\t    \"footer\": {\n\t      \"title\": \"\",\n\t      \"justify\": \"left\",\n\t      \"align\": \"center\",\n\t      \"style\": {\n\t        \"classes\": \"\"\n\t      }\n\t    },\n\t    \"style\": {\n\t      \"classes\": \"Table/Column_Normal\"\n\t    }\n\t  },\t\n\t\"\"\"\n\n\tcolumnsForced \u003d [\n\t  {\n\t    \"field\": \"Options\",\n\t    \"width\": 40,\n\t    \"title\": \"\"\n\t  },\n\t  {\n\t    \"field\": \"id\",\n\t    \"width\": 40,\n\t    \"title\": \"\"\n\t  },\n\t  {\n\t    \"field\": \"providerName\",\n\t    \"width\": 300,\n\t    \"title\": \"Name\"\n\t  },\n\t  {\n\t    \"field\": \"providerTypeName\",\n\t    \"width\": \"\",\n\t    \"title\": \"Type\"\n\t  },\t  \n\t  {\n\t    \"field\": \"countReferral\",\n\t    \"width\": 150,\n\t    \"title\": \"Referrals\"\n\t  },\n\t  {\n\t    \"field\": \"timeCreated\",\n\t    \"width\": 150,\n\t    \"title\": \"Created\"\n\t  },\n\t  {\n\t    \"field\": \"phone\",\n\t    \"width\": 150,\n\t    \"title\": \"Phone\"\n\t  },\n\t  {\n\t    \"field\": \"city\",\n\t    \"width\": 200,\n\t    \"title\": \"City\"\n\t  },\n\t  {\n\t    \"field\": \"street\",\n\t    \"width\": \"\",\n\t    \"title\": \"Address\"\n\t  },\n\t  {\n\t    \"field\": \"zipCode\",\n\t    \"width\": 100,\n\t    \"title\": \"Zip\"\n\t  },\n\t  {\n\t    \"field\": \"website\",\n\t    \"width\": \"\",\n\t    \"title\": \"Website\"\n\t  }\n\t]\n\n\tcolNames \u003d system.dataset.getColumnHeaders(dataset)\n\n\t_columns \u003d []\n\tfor col in colNames:\n\t\t# This conversion json_\u003edict create actually deepcopy\n\t\tpyColumn \u003d system.util.jsonDecode(jsonDefaultColumn)\n\t\t\n\t\t# Note: Field must contain only letters and numbers.\n\t\tpyColumn[\u0027field\u0027] \u003d col\n\t\t\n\t\t_dictCol \u003d None\n\t\tfor item in columnsForced:\n\t\t\tif item[\u0027field\u0027] \u003d\u003d pyColumn[\u0027field\u0027]:\n\t\t\t\t_dictCol \u003d item.copy() \n\t\t\t\n\t\t\n\t\t#ystem.perspective.print((_dictCol))\n\t\t\n\t\tpyColumn[\u0027header\u0027][\u0027title\u0027] \u003d _dictCol[\u0027title\u0027] if _dictCol else \u0027\u0027\n\t\t\n\t\tif _dictCol and _dictCol.get(\u0027width\u0027):\n\t\t\tpyColumn[\u0027width\u0027] \u003d _dictCol[\u0027width\u0027]\n\t\t\tpyColumn[\u0027strictWidth\u0027] \u003d True\n\n\t\tif col \u003d\u003d \u0027id\u0027:\n\t\t\tpyColumn[\u0027header\u0027][\u0027title\u0027] \u003d \u0027 \u0027\n\t\t\tpyColumn[\"render\"] \u003d \"view\"\n\t\t\tpyColumn[\"justify\"] \u003d \"center\"\n\t\t\tpyColumn[\"resizable\"] \u003d False\n\t\t\tpyColumn[\"sortable\"] \u003d False\n\t\t\tpyColumn[\"viewPath\"] \u003d \"Providers/Dashboard/Components/Tables/Templates/TableOptions\"\t\n\t\t\n\t\tif col \u003d\u003d \u0027phone\u0027:\n\t\t\tpyColumn[\u0027numberFormat\u0027] \u003d \"none\"\t\n\t\n\t\tif col \u003d\u003d \u0027zipCode\u0027:\n\t\t\tpyColumn[\u0027numberFormat\u0027] \u003d \"none\"\t\n\t\t\t\t\t\n\t\t_columns.append(pyColumn)\n\t\n\t#ystem.perspective.print((\"_columns: \",_columns))\n\t\n\treturn _columns"
            },
            {
              "name": "correctTimeForClient",
              "params": [
                "pyds",
                "columnsToCorrect"
              ],
              "script": "\t\n\t# !!!!!!!!!!!  NOT TESTED !!!!!!!!!!!!!!!!!!!!!!!\n\t\n\t# Table automaticaly change datetime according to client timezone, \n\t# For this table we don\u0027t need automatic conversion, we must recorrect datetimes, according client timezone.\n\t# Actually to see same values like in db.\n\t\n\t# This is correction client against ignition server\n\t# TODO add correction to SQL server\n\tcorrectionTime \u003d int(60*(system.date.getTimezoneOffset() - self.session.props.device.timezone.utcOffset)) \n\t\n\tlistDateFix \u003d [[]*len(columnsToCorrect)]\n\tfor rowIndex, row in enumerate(pyds):\n\t\tfor colIndex, col in enumerate(columnsToCorrect):\n\t\t\tlistDateFix[colIndex].append(system.date.addMinutes(row[col], correctionTime))\n\t\n\n\tfor index, item in enumerate(listDateFix):\n\t\tcolNames \u003d system.dataset.getColumnHeaders(pyds)\n\t\tcolPosition \u003d colNames.index(columnsToCorrect[index])\n\t\tpyds \u003d system.dataset.filterColumns(pyds, [ x for x in colNames if x !\u003d columnsToCorrect[index]])\n\t\tpyds \u003d system.dataset.addColumn(pyds,colPosition,item,columnsToCorrect[index])\n\t\n\treturn pyds\n"
            },
            {
              "name": "setMisc",
              "params": [],
              "script": "\t\n\tself.props.cells.style\u003d {\n\t    \"classes\": \"Table/Cell_Dashboard\"\n\t}\n\t\n\tself.props.style \u003d {\n\t  \"classes\": \"Background/Default\",\n\t  \"overflowX\": \"hidden\"\n\t}\n"
            },
            {
              "name": "doByCondition",
              "params": [
                "payload"
              ],
              "script": "\timport java.lang\n\n\t# 1. Add fetch to payload if not exist. We can send from pager or use value self.view.params.fetch.\n\t# This should be step before offset\n\tfetch \u003d payload.get(\u0027fetch\u0027)\n\t\n\tif not(fetch):\n\t\tfetch \u003d self.view.params.fetch\n\t\n\t# If fetch value is integer greater then 0, pager exist\n\tif fetch and fetch \u003e 1:\n\t\tpayload[\u0027fetch\u0027] \u003d fetch\n\n\t\t#  2. If payload has \u0027offset\u0027, it means that comming from pager. Then take lastPayload \n\t\t# stored as json string, deserialize to python dict and  add node\u0027 offset\u0027\n\t\t# Else means payload is comming from conditions. Don\u0027t do anything just continue\n\t\tif payload.get(\u0027offset\u0027) is not None:\n\t\t\toffset \u003d payload[\u0027offset\u0027]\n\t\t\tpayload \u003d {}\n\t\t\tfor key in self.custom.lastPayload:\n\t\t\t\tpayload[key] \u003d self.custom.lastPayload[key]\n\t\t\t\n\t\t\t\n\t\t\tpayload[\u0027offset\u0027] \u003d offset\n\t\t\tpayload[\u0027fetch\u0027] \u003d fetch\n\t\telse:\n\t\t\tpayload[\u0027offset\u0027] \u003d 0\n\t\n\t# 3. Get data from DB. Data is dataset which contain only fetch number of rows. \n\t# _resultRowCount is scalar value which represent number of rows in case the that query is executed without  OFFSET ... FETCH...\n\t_data, _resultRowCount \u003d self.getDataDb(payload)\n\t\n\tself.view.params.resultRowCount \u003d _resultRowCount\n\n\t# 4. Set some misc props if necessary (explicit)\n\tself.setMisc()\n\n\t# 5. Step get columns props (explicit adjustment)\n\tself.props.columns \u003d self.getPropsColumns(_data)\n\n\t# 6. Correct values in datetime column according client timezone. (check comments inside function)\n\t#_data \u003d self.correctTimeForClient(_data, [\u0027dob\u0027])\n\n\t# 7. Send message to Kpis\n\tself.sendMessageToKpis(_data)\n\n\t# 8. Add dummy empty raw if result is empty dataset. Reason to do that is to avoid loosing focus on search cell in filters.\n\t_colNames \u003d system.dataset.getColumnHeaders(_data)\n\t\n\tif _data.rowCount \u003d\u003d 0:\n\t\t_lstData \u003d [{col: None for col in _colNames}]\n\telse:\n\t\t_pyds \u003d system.dataset.toPyDataSet(_data)\n\t\t_lstData \u003d [{col: row[col] for col in _colNames} for row in _pyds]\n\n\t#ystem.perspective.print((\u0027_lstData: \u0027,_lstData))\n\t\n\t_makeUped \u003d self.getMakeUpData(_lstData)\n\n\tself.props.data \u003d _makeUped\n\t\n\tself.custom.jsonLastPayload \u003d system.util.jsonEncode(payload)\n\t\n\t# Remove fetch and offset, it is not necessary to store.\n\tpayload.pop(\u0027offset\u0027,None)\n\tpayload.pop(\u0027fetch\u0027,None)\n\tself.custom.lastPayload \u003d payload\n\t\n\t\n\t\n\n\n"
            },
            {
              "name": "getQuery",
              "params": [],
              "script": "\tdeclaration \u003d \t\"\"\"\nDECLARE \n\t @activity_start datetime \u003d ?\n\t,@countReferral_from INT \u003d ?\n\t,@countReferral_to INT \u003d ?\n\t,@search_text NVARCHAR(max) \u003d ?\n\t\"\"\"\n\t\n\tqueryCte \u003d \"\"\"\n;WITH cteCount AS (\nSELECT \t\n\t COUNT([Referral].[id]) AS countReferral \n\t,[Referral].[ProviderId]                                                                        \nFROM [HMSOps].[participant].[Referral]\nWHERE ([Referral].[timeCreated] \u003e\u003d @activity_start OR ISNULL(YEAR(@activity_start), -1) \u003d -1)\nGROUP BY [Referral].[ProviderId] \n)\n\n, cteProvider AS (\nSELECT \n\t[Provider].[id]\n\t,[Provider].[providerName]\n\t,[Provider].[providerTypeId]\n\t,[ProviderType].[providerTypeName]\n\t,ISNULL(cteCount.[countReferral],0) AS [countReferral]\n\t,[Provider].[timeCreated]\n\t,[Provider].[phone]\n\t,[Provider].[city]\n\t,[Provider].[street]\n\t,[Provider].[zipCode]\n\t,[Provider].[website]\nFROM [organization].[Provider] \nLEFT JOIN cteCount ON cteCount.[providerId] \u003d [Provider].[id]\nLEFT JOIN [organization].[ProviderType] ON [Provider].[providerTypeId] \u003d [ProviderType].[id]\nWHERE ([Provider].[timeRetired] IS NULL\nAND [ProviderType].[providerTypeName] in (\u0027Community Partner\u0027, \u0027Medical Facility\u0027, \u0027Law Enforcement\u0027)) \n)\n\"\"\"\n\n#REMOVED AND [cteProvider].[countReferral] \u003e 0 \n\tquery \u003d \"\"\"\nSELECT \n\t [cteProvider].[id]\n\t,[cteProvider].[providerName]\n\t,[cteProvider].[providerTypeName]\n\t,[cteProvider].[countReferral]\n\t,[cteProvider].[timeCreated]\n\t,[cteProvider].[phone]\n\t,[cteProvider].[city]\n\t,[cteProvider].[street]\n\t,[cteProvider].[zipCode]\n\t,[cteProvider].[website]\nFROM cteProvider \nWHERE (1\u003d1) \n\tAND cteProvider.[providerTypeId] in (*?)\n\tAND cteProvider.[countReferral] \u003e\u003d @countReferral_from\n\tAND cteProvider.[countReferral] \u003c\u003d @countReferral_to\n\tAND (\n\t\t\t([cteProvider].[countReferral] \u003e 0 AND ISNULL(YEAR(@activity_start), -1) !\u003d -1)\n\t\t\tOR \n\t\t\t(ISNULL(YEAR(@activity_start), -1) \u003d -1)\n\t\t)\nAND (\n\t@search_text \u003d \u0027\u0027 \n\tOR [cteProvider].[providerName] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027) \n\tOR [cteProvider].[providerTypeName] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027) \n\tOR CAST([cteProvider].[countReferral] AS VARCHAR(20))  LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027) \n\tOR CONVERT(VARCHAR(10),[cteProvider].[timeCreated],101) LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027) \n\tOR [cteProvider].[phone] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027)\n\tOR [cteProvider].[city] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027)\n\tOR [cteProvider].[street] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027)\n\tOR [cteProvider].[city] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027)\n\tOR CAST([cteProvider].[zipCode] AS VARCHAR(20))  LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027) \n\tOR [cteProvider].[website] LIKE CONCAT(\u0027%\u0027,@search_text,\u0027%\u0027)\n)\n\t\"\"\"\n\torderBy \u003d \"\"\"\nORDER BY [cteProvider].[providerName]\n\t\"\"\"\n\n\tfetchOffset \u003d \"\"\"\nOFFSET ? ROWS \nFETCH NEXT ? ROWS ONLY;  \n\t\"\"\"\t\n\treturn declaration, queryCte, query, orderBy, fetchOffset\n\n\t\t"
            },
            {
              "name": "sendMessageToKpis",
              "params": [
                "data"
              ],
              "script": "\t# Send message to KPIs\n\tpayload \u003d {}\n\t\n\t\n\tif data.rowCount \u003e 0:\n\t\tpayload[\u0027providerIds\u0027] \u003d []\n\t\t#payload[\u0027totalReferralsYtd\u0027] \u003d 0\t\n\t\tfor rowIndex, row in enumerate(system.dataset.toPyDataSet(data)):\n\t\t\tpayload[\u0027providerIds\u0027].append(row[\u0027id\u0027])\n\t\n\tsystem.perspective.sendMessage(\u0027mhProviderDashboardKpiHeader\u0027,payload)\n\t\n\tsendMessageToKpis"
            },
            {
              "name": "getMakeUpData",
              "params": [
                "lstData"
              ],
              "script": "\t\n\n\t_style \u003d {\t\"color\": \"#0c4e85\",\n\t\t\t\t\"cursor\": \"pointer\",\n\t\t\t\t\"fontFamily\": \"Proxima Nova ExCn Medium\",\n\t\t\t\t\"text-align\": \"left\"}\n\t\t\t\t\t\n\n\n\tfor row in lstData:\n\t\tfor key in row:\n\t\t\tif key \u003d\u003d \u0027providerName\u0027:\n\t\t\t\trow[key] \u003d {\u0027value\u0027: row[key] if row[key] is not None else \u0027\u0027, \"style\": _style}\n\n\treturn lstData"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "mhByCondition",
              "pageScope": true,
              "script": "\t#ystem.perspective.print((\u0027Msgstep1\u0027))\n\tself.doByCondition(payload)",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      }
    ],
    "custom": {
      "_test": false
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom._test": {
        "onChange": {
          "enabled": null,
          "script": "\tif previousValue is not None and currentValue is not None:\n\t\tif previousValue.value \u003d\u003d 0 and currentValue.value \u003d\u003d 1:\n\t\t\tself.getChild(\"Table\").doByCondition({})"
        }
      }
    },
    "props": {
      "direction": "column",
      "justify": "space-around",
      "style": {
        "overflow": "visible"
      }
    },
    "type": "ia.container.flex"
  }
}