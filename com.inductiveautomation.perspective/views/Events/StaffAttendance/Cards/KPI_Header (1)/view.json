{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\troot \u003d self.getChild(\"root\")\n\t\n\ttry:\n\t\tsystem.perspective.sendMessage(\u0027mhProviderDashboardKpiHeader\u0027, payload \u003d {})\n\texcept:\n\t\troot.cleanKpis()"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 185,
      "width": 1430
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "KPI1"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Total Event Attendees",
            "Value": 18
          },
          "path": "Events/AttendanceHistory/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card",
            "marginLeft": "40px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "KPI2"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Active Participants",
            "Value": 13
          },
          "path": "Events/AttendanceHistory/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "custom": {
          "testValue": [
            {
              "applicants": 1,
              "time": "9/1/2020"
            },
            {
              "applicants": 0,
              "time": "10/1/2020"
            },
            {
              "applicants": 1,
              "time": "11/1/2020"
            },
            {
              "applicants": 0,
              "time": "12/1/2020"
            },
            {
              "applicants": 4,
              "time": "1/1/2021"
            },
            {
              "applicants": 6,
              "time": "2/1/2021"
            }
          ]
        },
        "meta": {
          "name": "KPI3"
        },
        "position": {
          "basis": "345px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Event Attendance Monthly",
            "Value": [
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1656534143570
                  ],
                  "$ts": 1641016800000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1656534143570
                  ],
                  "$ts": 1643695200000
                }
              },
              {
                "applicants": 2,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1656534143570
                  ],
                  "$ts": 1646114400000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1656534143570
                  ],
                  "$ts": 1648789200000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1656534143570
                  ],
                  "$ts": 1651381200000
                }
              },
              {
                "applicants": 16,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1656534143570
                  ],
                  "$ts": 1654059600000
                }
              }
            ]
          },
          "path": "Events/AttendanceHistory/Cards/KPI/Graph_Flex _bar",
          "style": {
            "classes": "KPIs/KPI_Card"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "KPI4"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "props.params.Value": {
            "binding": {
              "config": {
                "expression": "now(600000)"
              },
              "transforms": [
                {
                  "code": "\tfEventDate \u003d system.date.format(system.date.now(), \"yyyy-MM-dd\")\n\tfEndDate \u003d system.date.format(system.date.addMonths(system.date.now(), 1), \"yyyy-MM-dd\")\n\treturn len(Integrations.breeze.api.GETTER.events(params\u003d {\"startDate\":fEventDate, \"endDate\":fEndDate})[\"Data\"])",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "Title": "Events in the next Month"
          },
          "path": "Events/AttendanceHistory/Cards/KPI/Total_Flex",
          "style": {
            "classes": "KPIs/KPI_Card",
            "marginRight": "40px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      }
    ],
    "custom": {
      "_devPulse": false,
      "_isDev": false
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom._devPulse": {
        "onChange": {
          "enabled": null,
          "script": "\troot \u003d self\n\tif currentValue.value is True:\n\t\tpayload \u003d {}\n\n\t\tsystem.perspective.sendMessage(\u0027mhProviderDashboardKpiHeader\u0027, payload \u003d payload)\n\n\telse:\n\t\troot.cleanKpis()\t"
        }
      }
    },
    "props": {
      "alignContent": "flex-start",
      "alignItems": "center",
      "style": {
        "classes": "KPIs/KPI_Flex_Container",
        "overflow": "hidden",
        "overflowY": "hidden"
      }
    },
    "scripts": {
      "customMethods": [
        {
          "name": "setKpi1",
          "params": [
            "payload"
          ],
          "script": "\t\n\tkpi1 \u003d self.getChild(\"KPI1\")\n\tquery \u003d \"\"\"\nSELECT \n\tSUM((CASE WHEN [checkin] IS NULL THEN 0 ELSE 1 END) ) AS [TotalEventAttendees]\nFROM [HMSOps].[calendar].[EventAttendance]\n\tINNER JOIN [participant].[Participant] ON [Participant].[humanId] \u003d [EventAttendance].[humanId]\n\"\"\"\n\targs \u003d []\n\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\n\t\n\tkpi1.props.params.Title \u003d \u0027Total Event Attendees\u0027\n\tkpi1.props.params.Value \u003d result \n\n"
        },
        {
          "name": "XsetKpi1",
          "params": [
            "payload"
          ],
          "script": "\t\n\tkpi1 \u003d self.getChild(\"KPI1\")\n\tquery \u003d \"\"\"\nSELECT \n\tSUM((CASE WHEN [checkin] IS NULL THEN 0 ELSE 1 END) + (CASE WHEN [checkout] IS NULL THEN 0 ELSE 1 END) ) AS [TotalEventAttendees]\nFROM [HMSOps].[calendar].[EventAttendance]\n\tINNER JOIN [participant].[Participant] ON [Participant].[humanId] \u003d [EventAttendance].[humanId]\n\"\"\"\n\targs \u003d []\n\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\n\t\n\tkpi1.props.params.Title \u003d \u0027Total Event Attendees\u0027\n\tkpi1.props.params.Value \u003d result \n\n"
        },
        {
          "name": "setKpi2",
          "params": [
            "payload"
          ],
          "script": "\t# Total Referrals (Year To Date): total count of referrals since 1/1 of the current year\n\t\n\tkpi2 \u003d self.getChild(\"KPI2\")\n\n\tquery \u003d \"\"\"\nWITH cteActiveParticipants AS (\nSELECT DISTINCT\n\t[humanId]\nFROM [HMSOps].[calendar].[EventAttendance]\n)\n\nSELECT count(1) cnt\nFROM cteActiveParticipants\n\tINNER JOIN [participant].[Participant] ON [Participant].[humanId] \u003d cteActiveParticipants.[humanId]\n\n\"\"\"\n\n\targs \u003d []\n\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\n\t\n\tkpi2.props.params.Title \u003d \u0027Active Participants\u0027\n\tkpi2.props.params.Value \u003d result \n\n\t"
        },
        {
          "name": "setKpi3",
          "params": [
            "payload"
          ],
          "script": "\t# New Referrals Monthly: count of referrals per month in a XY Chart\n\t\n\tkpi3 \u003d self.getChild(\"KPI3\")\n\targs \u003d []\n\twherePlus \u003d \u0027\u0027\n\t\n\tquery \u003d \"\"\"\t\nDECLARE @today datetime \u003d GETDATE();\nDECLARE @dayFewMonthsBefore datetime \u003d DATEADD(MONTH,-5,@today);\nDECLARE @dateFrom datetime \u003d DATEFROMPARTS(YEAR(@dayFewMonthsBefore),MONTH(@dayFewMonthsBefore),1);\n\n;WITH cteEvent AS (\nSELECT \n\t [EventAttendance].[id]\n\t,[EventAttendance].[checkin]\n\t,[EventAttendance].[checkout]\nFROM [calendar].[EventAttendance]\n\tINNER JOIN [participant].[Participant] ON [Participant].[humanId] \u003d [EventAttendance].[humanId]\n)\n\n,cteInOut AS (\nSELECT \n\t[checkin] AS [TimeStamp]\n\t,DATEFROMPARTS(DATEPART(year,[checkin]),DATEPART(month,[checkin]),1) AS [FirstMonthDay]\nFROM cteEvent\nWHERE checkin IS NOT NULL\nUNION ALL\nSELECT \n\t [checkout] AS [TimeStamp]\n\t,DATEFROMPARTS(DATEPART(year,[checkout]),DATEPART(month,[checkout]),1) AS [FirstMonthDay]\nFROM cteEvent\nWHERE checkout IS NOT NULL\n)\n\n,cteMonthTotal AS (\nSELECT\n\t[FirstMonthDay]\t\n\t,COUNT(1) cnt\nFROM cteInOut\nWHERE [TimeStamp] \u003e\u003d @dateFrom\nGROUP BY [FirstMonthDay])\n\n\n,cteArray(FirstDay) AS (\n\tSELECT DATEADD(month,0,@dateFrom) union all SELECT DATEADD(month,1,@dateFrom) \n\tunion all SELECT DATEADD(month,2,@dateFrom) union all SELECT DATEADD(month,3,@dateFrom) \n\tunion all SELECT DATEADD(month,4,@dateFrom) union all SELECT DATEADD(month,5,@dateFrom)  \n)\n\nSELECT \n\tcteMonthTotal.cnt\n\t,cteArray.[FirstDay]\nFROM cteArray\nLEFT JOIN cteMonthTotal ON cteMonthTotal.[FirstMonthDay] \u003d cteArray.[FirstDay] \nORDER BY cteArray.[FirstDay]\n\"\"\"\n\tresult \u003d system.db.runPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\n\t_values \u003d [dict(applicants \u003d row[\u0027cnt\u0027] if row[\u0027cnt\u0027] else 0, time \u003d row[\u0027FirstDay\u0027]) for row in result]\n\t\n\tkpi3.props.params.Value \u003d _values \n\tkpi3.props.params.Title \u003d \u0027Event Attendance Monthly\u0027\n\n\t"
        },
        {
          "name": "XsetKpiX4",
          "params": [
            "payload"
          ],
          "script": "\tkpi4 \u003d self.getChild(\"KPIx4\")\n\tquery \u003d \"\"\"\nDECLARE @today datetime \u003d GETDATE();\n\tDECLARE @dayNextMonth datetime \u003d DATEADD(MONTH,1,@today);\n\tDECLARE @dateFrom datetime \u003d DATEFROMPARTS(YEAR(@dayNextMonth),MONTH(@dayNextMonth),1);\n\tDECLARE @dateTo datetime \u003d DATEADD(month,1,@dateFrom);\n\t\n\t;WITH cteEvent AS (\n\tSELECT \n\t\t [EventAttendance].[id]\n\t\t,[EventAttendance].[checkin]\n\t\t,[EventAttendance].[checkout]\n\tFROM [calendar].[EventAttendance]\n\t\tINNER JOIN [participant].[Participant] ON [Participant].[humanId] \u003d [EventAttendance].[humanId]\n\t)\n\t\n\t,cteInOut AS (\n\tSELECT \n\t\t[checkin] AS [TimeStamp]\n\t\t,DATEFROMPARTS(DATEPART(year,[checkin]),DATEPART(month,[checkin]),1) AS [FirstMonthDay]\n\tFROM cteEvent\n\tWHERE checkin IS NOT NULL\n\tUNION ALL\n\tSELECT \n\t\t [checkout] AS [TimeStamp]\n\t\t,DATEFROMPARTS(DATEPART(year,[checkout]),DATEPART(month,[checkout]),1) AS [FirstMonthDay]\n\tFROM cteEvent\n\tWHERE checkout IS NOT NULL\n\t)\n\t\n\tSELECT 7\n\tFROM cteInOut\n\tWHERE [TimeStamp] \u003e\u003d @dateFrom AND [TimeStamp] \u003c @dateTo\n\"\"\"\n\targs \u003d []\n\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\n\tsystem.perspective.print((\"_values:\",result))\n\n\n\tkpi4.props.params.Title \u003d \u0027Events in the Next Month\u0027\n\tkpi4.props.params.Value \u003d result if result else 0\n\t\n"
        },
        {
          "name": "cleanKpis",
          "params": [],
          "script": "\tkpi1 \u003d self.getChild(\"KPI1\")\n\tkpi2 \u003d self.getChild(\"KPI2\")\n\tkpi3 \u003d self.getChild(\"KPI3\")\n\t#kpiX4 \u003d self.getChild(\"KPIx4\")\t\n\n\tkpi1.props.params.Title \u003d \u0027\u0027\n\tkpi1.props.params.Value \u003d 0\n\t\t\n\tkpi2.props.params.Title \u003d \u0027\u0027\n\tkpi2.props.params.Value \u003d 0\n\n\tkpi3.props.params.Title \u003d \u0027\u0027\n\tkpi3.props.params.Value \u003d []\n\n\t#kpiX4.props.params.Title \u003d \u0027\u0027\n\t#kpiX4.props.params.Value \u003d 0"
        }
      ],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "mhProviderDashboardKpiHeader",
          "pageScope": true,
          "script": "\t\n\tself.setKpi1(payload)\n\tself.setKpi2(payload)\n\tself.setKpi3(payload)\n\t#self.setKpi4(payload)\n\n\t\n\t\n\n\n\t",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}