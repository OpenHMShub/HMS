{
  "custom": {
    "RegistrationData": {
      "case_manager_id": null,
      "city": "",
      "communication_type_id": null,
      "congregation": "",
      "dob": null,
      "dob_quality_id": null,
      "email": "",
      "emergency_contact_type_id": null,
      "emergency_email": "",
      "emergency_name": "",
      "emergency_phone": "",
      "employer": "",
      "emplployer": null,
      "family_id": null,
      "first_name": "",
      "gender_id": null,
      "hoh_relationship_id": null,
      "last_name": "",
      "middle_name": "",
      "nick_name": "",
      "phone": "",
      "phone_alt": "",
      "race_id": null,
      "school": "",
      "state": "",
      "street1": "",
      "street2": "",
      "suffix_name": "",
      "zip": ""
    },
    "id": "TestVolunteerNew"
  },
  "params": {
    "dob_day": "",
    "dob_month": "",
    "dob_year": "",
    "first_name": "",
    "func_new_data": false,
    "last_name": "",
    "race": "",
    "ssn": ""
  },
  "propConfig": {
    "custom.RegistrationData": {
      "persistent": true
    },
    "custom.id": {
      "persistent": true
    },
    "params.dob_day": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.dob_month": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.dob_year": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.first_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.func_new_data": {
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\ttry:\n\t\tif currentValue.value:\n\t\t\tself.custom.RegistrationData.first_name \u003d self.params.first_name\n\t\t\tself.custom.RegistrationData.last_name \u003d self.params.last_name\n\t\t\tself.custom.RegistrationData.race_id \u003d self.params.race\n\t\t\tself.custom.RegistrationData.ssn \u003d self.params.ssn\n\t\t\tif self.params.dob_year is not None and self.params.dob_month is not None and self.params.dob_day is not None:\n\t\t\t\ttry:\n\t\t\t\t\tparse_string \u003d str(self.params.dob_year) + \u0027-\u0027 + str(self.params.dob_month) + \u0027-\u0027+ str(self.params.dob_day)+ \u0027 00:00:00\u0027\n\t\t\t\t\t#system.perspective.print(parse_string)\n\t\t\t\t\tself.custom.RegistrationData.dob \u003d system.date.parse(parse_string + \u0027 00:00:00\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tself.custom.RegistrationData.dob \u003d \u00271900-01-01 00:00:00\u0027\n\t\tself.params.func_new_data \u003d False\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants RegisterParticipant view.params.func_new_data\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
      },
      "paramDirection": "input",
      "persistent": true
    },
    "params.last_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.race": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.ssn": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 858,
      "width": 600
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "EmbeddedView"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "params": {
            "dockId": "RegisterVolunteer",
            "text": "Volunteer Registration"
          },
          "path": "Volunteers/Registration/Cards/RegistrationHeader",
          "useDefaultViewHeight": true
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "ResetVolunteerRegistration",
              "pageScope": true,
              "script": "\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"FirstName\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"LastName\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"DateOfBirth\").props.params.date \u003d system.date.now()\n\t\n\t\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Street1\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Street2\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Congregation\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Phone\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Email\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"School\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Left\").getChild(\"Nickname\").props.params.inputText \u003d \"\"\n\t\n\t\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"MiddleName\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"Suffix\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"Gender\").props.params.SelectedValue \u003d None\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"Alt_Phone\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"City\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"Zip\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"State\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"CommunicationMethod\").props.params.SelectedValue \u003d None\n\tself.parent.getChild(\"FlexContainer Personal\").getChild(\"FlexContainer Right\").getChild(\"Employer\").props.params.inputText \u003d \"\"\n\t\n\tself.parent.getChild(\"FlexContainer Contact\").getChild(\"FlexContainer Left\").getChild(\"EmergencyName\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Contact\").getChild(\"FlexContainer Left\").getChild(\"EmergencyPhone\").props.params.inputText \u003d \"\"\n\t\n\tself.parent.getChild(\"FlexContainer Contact\").getChild(\"FlexContainer Right\").getChild(\"EmergencyEmail\").props.params.inputText \u003d \"\"\n\tself.parent.getChild(\"FlexContainer Contact\").getChild(\"FlexContainer Right\").getChild(\"EmergencyType\").props.params.SelectedValue \u003d None",
              "sessionScope": true,
              "viewScope": true
            }
          ]
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "FirstName"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.first_name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "First Name*"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "LastName"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.last_name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Last Name*"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Nickname"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.nick_name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Nickname"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "DateOfBirth"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.date": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.dob"
                      },
                      "type": "property"
                    }
                  },
                  "props.params.maxDate": {
                    "binding": {
                      "config": {
                        "expression": "now(0)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.params.minDate": {
                    "binding": {
                      "config": {
                        "expression": "toDate(\u00271900-01-01\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Date of Birth"
                  },
                  "path": "Participants/Registration/Cards/DateInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Street1"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.street1"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Street 1"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Street2"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.street2"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Street 2"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Phone"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.phone"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Volunteer\u0027s Phone"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Email"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.email"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Volunteer\u0027s Email Address"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "School"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.school"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "School"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Congregation"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.congregation"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Congregation"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Left"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "25px",
                "paddingRight": "20px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "MiddleName"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.middle_name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Middle Name"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Suffix"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.suffix_name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Suffix"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Gender"
                },
                "propConfig": {
                  "props.params.Options": {
                    "binding": {
                      "config": {
                        "queryPath": "Participants/Registration/GetGender"
                      },
                      "type": "query"
                    }
                  },
                  "props.params.SelectedValue": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.gender_id"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "Text": "Gender*"
                  },
                  "path": "Participants/Registration/Cards/SelectionInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Alt_Phone"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.phone_alt"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Alternate Phone"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "City"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.city"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "City"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Zip"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.zip"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Zip"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "State"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.state"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "State"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "CommunicationMethod"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.Options": {
                    "binding": {
                      "config": {
                        "queryPath": "Participants/Registration/GetCommunicationType"
                      },
                      "type": "query"
                    }
                  },
                  "props.params.SelectedValue": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.communication_type_id"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "Text": "Preferred Communication Method"
                  },
                  "path": "Participants/Registration/Cards/SelectionInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "Employer"
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.employer"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Employer"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Right"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "15px",
                "paddingRight": "30px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "FlexContainer Personal"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "20px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "EmergencyName"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.emergency_name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Emergency Contact Name"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "EmergencyPhone"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.emergency_phone"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Emergency Contact Phone"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Left"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "25px",
                "paddingRight": "20px"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "EmergencyEmail"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.inputText": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.emergency_email"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "text": "Emergency Contact Email Address"
                  },
                  "path": "Participants/Registration/Cards/TextInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              },
              {
                "meta": {
                  "name": "EmergencyType"
                },
                "position": {
                  "shrink": 0
                },
                "propConfig": {
                  "props.params.Options": {
                    "binding": {
                      "config": {
                        "queryPath": "Participants/Registration/GetEmergencyContactType"
                      },
                      "type": "query"
                    }
                  },
                  "props.params.SelectedValue": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.RegistrationData.emergency_contact_type_id"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "Text": "Emergency Contact Type"
                  },
                  "path": "Participants/Registration/Cards/SelectionInput",
                  "style": {
                    "marginTop": "5px"
                  },
                  "useDefaultViewHeight": true
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "FlexContainer Right"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "direction": "column",
              "style": {
                "paddingLeft": "15px",
                "paddingRight": "30px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "FlexContainer Contact"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "../TypeOfRegistration.props.params.full"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "borderBottomColor": "#e6e6e6",
            "borderBottomStyle": "solid",
            "borderBottomWidth": 1,
            "paddingBottom": "20px",
            "paddingTop": "5px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": [
                  {
                    "config": {
                      "script": "\timport re\n\timport traceback\n\tself.view.params.func_new_data \u003d False\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t \t\n\t \tuser_name \u003d self.session.props.auth.user.userName\n\t\t\n\t\tfirst_name \u003d self.view.custom.RegistrationData.first_name\n\t\tmiddle_name \u003d self.view.custom.RegistrationData.middle_name\n\t\tlast_name \u003d self.view.custom.RegistrationData.last_name\n\t\tsuffix_name \u003d self.view.custom.RegistrationData.suffix_name\n\t\tnick_name \u003d self.view.custom.RegistrationData.nick_name\n\t\tgender_id \u003d self.view.custom.RegistrationData.gender_id\n\t\tdob \u003d self.view.custom.RegistrationData.dob\n\t\t\n\t\tstreet1 \u003d self.view.custom.RegistrationData.street1\n\t\tstreet2 \u003d self.view.custom.RegistrationData.street2\n\t\tstreet \u003d \"{} {}\".format(street1, street2)\n\t\tcity \u003d self.view.custom.RegistrationData.city\n\t\tzip_code \u003d self.view.custom.RegistrationData.zip\n\t\tstate \u003d self.view.custom.RegistrationData.state\n\t\t\n\t\t\n\t\tparticipant_phone \u003d self.view.custom.RegistrationData.phone\n\t\tparticipant_email \u003d self.view.custom.RegistrationData.email\n\t\tpreferred_communication \u003d self.view.custom.RegistrationData.communication_type_id\n\t\t\n\t\tschool \u003d self.view.custom.RegistrationData.school\n\t\temployer \u003d self.view.custom.RegistrationData.employer\n\t\tcongregationName \u003d self.view.custom.RegistrationData.congregation\n\t\t\n\t\temergency_contact_name \u003d self.view.custom.RegistrationData.emergency_name\n\t\temergency_contact_email \u003d self.view.custom.RegistrationData.emergency_email\n\t\temergency_contact_phone \u003d self.view.custom.RegistrationData.emergency_phone\n\t\temergency_contact_type \u003d self.view.custom.RegistrationData.emergency_contact_type_id\n\t\t\n\t\t## Get congregationId by Name\n\t\tparameters \u003d {\"congregationName\": congregationName}\n\t\tcongregationId \u003d system.db.runNamedQuery(project\u003d\"Global\", path\u003d\"WinterShelterGlobal/getCongregationIdByName\" , parameters\u003dparameters)\n\t\t\n\t\t## Check if parameters are filled in correctly \n\t\tif None in [gender_id,first_name,last_name]:\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027Null Error\u0027)\n\t\telif gender_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027Gender Error\u0027)\n\t\telif first_name.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027First Name Error\u0027)\n\t\telif last_name.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027Last Name Error\u0027)\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t## Convert Phone number to numeric value only\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027(\u0027,\u0027\u0027)\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027)\u0027,\u0027\u0027)\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027-\u0027,\u0027\u0027)\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027 \u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027(\u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027)\u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027-\u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027 \u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027(\u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027)\u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027-\u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027 \u0027,\u0027\u0027)\t\n\t\t#\n\t\t#Set Null values to \u0027Data Not Collected\"\n\t\tssn_quality \u003d 6\n\t\tdob_quality \u003d 6\n\t\trace \u003d 8\n\t\tethnicity \u003d 4\n\t\tveteran \u003d 4\n\t\tdisability \u003d 4\n\t\tif preferred_communication \u003d\u003d None:\n\t\t\tpreferred_communication \u003d 3\n\t\tif emergency_contact_type \u003d\u003d None:\n\t\t\temergency_contact_type \u003d 6\n\t\thoh_relationship_id \u003d 8\n\t\tintake_type_id \u003d 0\n\t\tssnDB \u003d \u0027000000000\u0027\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\n\t\t\t### Create transaction\n\t\t\ttransactionFailed \u003d False\n\t\t\tsuccess \u003d False\n\t\t\ttxId \u003d system.db.beginTransaction(timeout\u003d5000)\n\t\t\ttry:\n\t\t\t\t#Insert the Human Data\n\t\t\t\tpath \u003d \"Volunteers/Volunteers/VolunteerCreateNewHuman\"\n\t\t\t\tparameters \u003d {\"first_name\":first_name,\n\t\t\t\t\t\t\t\"middle_name\":middle_name,\n\t\t\t\t\t\t\t\"last_name\":last_name,\n\t\t\t\t\t\t\t\"suffix_name\":suffix_name,\n\t\t\t\t\t\t\t\"nick_name\":nick_name,\n\t\t\t\t\t\t\t\"dob\":dob,\n\t\t\t\t\t\t\t\"dob_quality\":dob_quality,\n\t\t\t\t\t\t\t\"ssn\":ssnDB,\n\t\t\t\t\t\t\t\"ssn_quality\":ssn_quality,\n\t\t\t\t\t\t\t\"gender_id\":gender_id,\n\t\t\t\t\t\t\t\"race_id\":race,\n\t\t\t\t\t\t\t\"ethnicity_id\":ethnicity,\n\t\t\t\t\t\t\t\"veteran_id\":veteran,\n\t\t\t\t\t\t\t\"disability_id\":disability,\n\t\t\t\t\t\t\t\"phone\":participant_phone,\n\t\t\t\t\t\t\t\"alt_phone\":participant_phone_alt,\n\t\t\t\t\t\t\t\"email\":participant_email,\n\t\t\t\t\t\t\t\"communication_type_id\":preferred_communication,\n\t\t\t\t\t\t\t\"emergency_contact_name\":emergency_contact_name,\n\t\t\t\t\t\t\t\"emergency_contact_email\":emergency_contact_email,\n\t\t\t\t\t\t\t\"emergency_contact_phone\":emergency_contact_phone,\n\t\t\t\t\t\t\t\"emergency_contact_type_id\":emergency_contact_type,\n\t\t\t\t\t\t\t\"hoh_relationship_id\":hoh_relationship_id,\n\t\t\t\t\t\t\t\"school\":school,\n\t\t\t\t\t\t\t\"employer\":employer,\n\t\t\t\t\t\t\t\"congregationId\":congregationId,\n\t\t\t\t\t\t\t\"street\":street,\n\t\t\t\t\t\t\t\"state\":state,\n\t\t\t\t\t\t\t\"zip_code\":zip_code,\n\t\t\t\t\t\t\t\"city\":city,\n\t\t\t\t\t\t\t}\n\t\t\t\thuman_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, tx\u003dtxId, getKey\u003dTrue)\n\n\t\t\t\tpath \u003d \"Volunteers/Volunteers/VolunteerCreateVolunteer\"\n\t\t\t\tparameters \u003d {\u0027humanId\u0027:human_id}\n\t\t\t\tvolunteerId \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, tx\u003dtxId, getKey\u003dTrue)\n\t\t\texcept:\n\t\t\t\ttransactionFailed \u003d True\n\t\t\t\tlogger \u003d system.util.getLogger(\"Volunteer Register Volunteer Button Save\")\n\t\t\t\tmsg \u003d traceback.format_exc()\n\t\t\t\tlogger.error(msg)\n\t\t\t\t\n\t\t\t### Check if an error occured rollback the transaction\n\t\t\tif transactionFailed:\n\t\t\t\tsystem.db.rollbackTransaction(txId)\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t\t\t\tRefresh \u003d 0\n\t\t\t### Otherwise commit \n\t\t\telse:\n\t\t\t\t#Success!!!!\n\t\t\t\tsystem.db.commitTransaction(txId)\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Volunteer Added Successfully\")\n\t\t\t\tsuccess \u003d True\n\n\t\t\t### Always close the transaction\t\n\t\t\tsystem.db.closeTransaction(txId)\n\t\t\t# If successful reset and close the dock\n\t\t\tif success:\n#\t\t\t\tsystem.perspective.sendMessage(\"ResetSearch\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\tsystem.perspective.sendMessage(\"ResetVolunteerRegistration\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\tsystem.perspective.closeDock(\u0027RegisterVolunteer\u0027)\n\t\t\t\t#Go to the detail view\n\t\t\t\ttab_id \u003d 10\n\t\t\t\tsystem.perspective.navigate(\"Volunteers/Detail/\" + str(human_id) + \"/\")\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Please fill in all the mandatory fields correctly before saving.\")\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Volunteer Register Volunteer Save Button\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
                    },
                    "enabled": false,
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "script": "\timport re\n\timport traceback\n\tself.view.params.func_new_data \u003d False\n\ttry:\n\t\tproject \u003d \"HMS\"\n\t\t### Declare parameters \n\t \t\n\t \tuser_name \u003d self.session.props.auth.user.userName\n\t\t\n\t\tfirst_name \u003d self.view.custom.RegistrationData.first_name\n\t\tmiddle_name \u003d self.view.custom.RegistrationData.middle_name\n\t\tlast_name \u003d self.view.custom.RegistrationData.last_name\n\t\tsuffix_name \u003d self.view.custom.RegistrationData.suffix_name\n\t\tnick_name \u003d self.view.custom.RegistrationData.nick_name\n\t\tgender_id \u003d self.view.custom.RegistrationData.gender_id\n\t\tdob \u003d self.view.custom.RegistrationData.dob\n\t\t\n\t\tstreet1 \u003d self.view.custom.RegistrationData.street1\n\t\tstreet2 \u003d self.view.custom.RegistrationData.street2\n\t\tstreet \u003d \"{} {}\".format(street1, street2)\n\t\tcity \u003d self.view.custom.RegistrationData.city\n\t\tzip_code \u003d self.view.custom.RegistrationData.zip\n\t\tstate \u003d self.view.custom.RegistrationData.state\n\t\t\n\t\t\n\t\tparticipant_phone \u003d self.view.custom.RegistrationData.phone\n\t\tparticipant_email \u003d self.view.custom.RegistrationData.email\n\t\tpreferred_communication \u003d self.view.custom.RegistrationData.communication_type_id\n\t\t\n\t\tschool \u003d self.view.custom.RegistrationData.school\n\t\temployer \u003d self.view.custom.RegistrationData.employer\n\t\tcongregationName \u003d self.view.custom.RegistrationData.congregation\n\t\t\n\t\temergency_contact_name \u003d self.view.custom.RegistrationData.emergency_name\n\t\temergency_contact_email \u003d self.view.custom.RegistrationData.emergency_email\n\t\temergency_contact_phone \u003d self.view.custom.RegistrationData.emergency_phone\n\t\temergency_contact_type \u003d self.view.custom.RegistrationData.emergency_contact_type_id\n\t\t\n\t\t## Get congregationId by Name\n\t\tparameters \u003d {\"locationName\": congregationName}\n\t\tcongregationId \u003d system.db.runNamedQuery(project\u003dproject, path\u003d\"WinterShelterGlobal/getCongregationIdByName\" , parameters\u003dparameters)\n\t\t\n\t\tself.parent.parent.getChild(\"Label\").props.text \u003d \"congregationId:\",congregationName,congregationId\n\t\t#system.perspective.print(\"congregationId:\",congregationId)\n\t\t\n\t\t## Check if parameters are filled in correctly \n\t\tif None in [gender_id,first_name,last_name]:\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027Null Error\u0027)\n\t\telif gender_id \u003c 0:\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027Gender Error\u0027)\n\t\telif first_name.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027First Name Error\u0027)\n\t\telif last_name.strip() \u003d\u003d \"\":\n\t\t\tvalid \u003d False\n\t\t\tsystem.perspective.print(\u0027Last Name Error\u0027)\n\t\telse:\n\t\t\tvalid \u003d True\n\t\t## Convert Phone number to numeric value only\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027(\u0027,\u0027\u0027)\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027)\u0027,\u0027\u0027)\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027-\u0027,\u0027\u0027)\n\t\tparticipant_phone \u003d participant_phone.replace(\u0027 \u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027(\u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027)\u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027-\u0027,\u0027\u0027)\n\t\tparticipant_phone_alt \u003d participant_phone.replace(\u0027 \u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027(\u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027)\u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027-\u0027,\u0027\u0027)\n\t\temergency_contact_phone \u003d emergency_contact_phone.replace(\u0027 \u0027,\u0027\u0027)\t\n\t\t#\n\t\t#Set Null values to \u0027Data Not Collected\"\n\t\tssn_quality \u003d 6\n\t\tdob_quality \u003d 6\n\t\trace \u003d 8\n\t\tethnicity \u003d 4\n\t\tveteran \u003d 4\n\t\tdisability \u003d 4\n\t\tif preferred_communication \u003d\u003d None:\n\t\t\tpreferred_communication \u003d 3\n\t\tif emergency_contact_type \u003d\u003d None:\n\t\t\temergency_contact_type \u003d 6\n\t\thoh_relationship_id \u003d 8\n\t\tintake_type_id \u003d 0\n\t\tssnDB \u003d \u0027000000000\u0027\n\t\t### Check if data is valid otherwise show error message.\n\t\tif valid:\n\n\t\t\t### Create transaction\n\t\t\ttransactionFailed \u003d False\n\t\t\tsuccess \u003d False\n\t\t\ttxId \u003d system.db.beginTransaction(timeout\u003d5000)\n\t\t\ttry:\n\t\t\t\t#Insert the Human Data\n\t\t\t\tpath \u003d \"Volunteers/Volunteers/VolunteerCreateNewHuman\"\n\t\t\t\tparameters \u003d {\"first_name\":first_name,\n\t\t\t\t\t\t\t\"middle_name\":middle_name,\n\t\t\t\t\t\t\t\"last_name\":last_name,\n\t\t\t\t\t\t\t\"suffix_name\":suffix_name,\n\t\t\t\t\t\t\t\"nick_name\":nick_name,\n\t\t\t\t\t\t\t\"dob\":dob,\n\t\t\t\t\t\t\t\"dob_quality\":dob_quality,\n\t\t\t\t\t\t\t\"ssn\":ssnDB,\n\t\t\t\t\t\t\t\"ssn_quality\":ssn_quality,\n\t\t\t\t\t\t\t\"gender_id\":gender_id,\n\t\t\t\t\t\t\t\"race_id\":race,\n\t\t\t\t\t\t\t\"ethnicity_id\":ethnicity,\n\t\t\t\t\t\t\t\"veteran_id\":veteran,\n\t\t\t\t\t\t\t\"disability_id\":disability,\n\t\t\t\t\t\t\t\"phone\":participant_phone,\n\t\t\t\t\t\t\t\"alt_phone\":participant_phone_alt,\n\t\t\t\t\t\t\t\"email\":participant_email,\n\t\t\t\t\t\t\t\"communication_type_id\":preferred_communication,\n\t\t\t\t\t\t\t\"emergency_contact_name\":emergency_contact_name,\n\t\t\t\t\t\t\t\"emergency_contact_email\":emergency_contact_email,\n\t\t\t\t\t\t\t\"emergency_contact_phone\":emergency_contact_phone,\n\t\t\t\t\t\t\t\"emergency_contact_type_id\":emergency_contact_type,\n\t\t\t\t\t\t\t\"hoh_relationship_id\":hoh_relationship_id,\n\t\t\t\t\t\t\t\"school\":school,\n\t\t\t\t\t\t\t\"employer\":employer,\n\t\t\t\t\t\t\t\"congregationId\":congregationId,\n\t\t\t\t\t\t\t\"street\":street,\n\t\t\t\t\t\t\t\"state\":state,\n\t\t\t\t\t\t\t\"zip_code\":zip_code,\n\t\t\t\t\t\t\t\"city\":city,\n\t\t\t\t\t\t\t}\n\t\t\t\thuman_id \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, tx\u003dtxId, getKey\u003dTrue)\n\n\t\t\t\tpath \u003d \"Volunteers/Volunteers/VolunteerCreateVolunteer\"\n\t\t\t\tparameters \u003d {\u0027humanId\u0027:human_id}\n\t\t\t\tvolunteerId \u003d system.db.runNamedQuery(project\u003dproject,path\u003dpath,parameters\u003dparameters, tx\u003dtxId, getKey\u003dTrue)\n\t\t\texcept:\n\t\t\t\ttransactionFailed \u003d True\n\t\t\t\tlogger \u003d system.util.getLogger(\"Volunteer Register Volunteer Button Save\")\n\t\t\t\tmsg \u003d traceback.format_exc()\n\t\t\t\tlogger.error(msg)\n\t\t\t\t\n\t\t\t### Check if an error occured rollback the transaction\n\t\t\tif transactionFailed:\n\t\t\t\tsystem.db.rollbackTransaction(txId)\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Something went wrong while saving data. Please try again.\")\n\t\t\t\tRefresh \u003d 0\n\t\t\t### Otherwise commit \n\t\t\telse:\n\t\t\t\t#Success!!!!\n\t\t\t\tsystem.db.commitTransaction(txId)\n\t\t\t\tself.getSibling(\"Label\").showMessage(\"Volunteer Added Successfully\")\n\t\t\t\tsuccess \u003d True\n\n\t\t\t### Always close the transaction\t\n\t\t\tsystem.db.closeTransaction(txId)\n\t\t\t# If successful reset and close the dock\n\t\t\tif success:\n#\t\t\t\tsystem.perspective.sendMessage(\"ResetSearch\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\tsystem.perspective.sendMessage(\"ResetVolunteerRegistration\", payload\u003d{}, scope\u003d\"session\")\n\t\t\t\tsystem.perspective.closeDock(\u0027RegisterVolunteer\u0027)\n\t\t\t\t#Go to the detail view\n\t\t\t\ttab_id \u003d 10\n\t\t\t\tsystem.perspective.navigate(\"Volunteers/Detail/\" + str(human_id) + \"/\")\t\n\t\telse:\n\t\t\tself.getSibling(\"Label\").showMessage(\"Please fill in all the mandatory fields correctly before saving.\")\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Volunteer Register Volunteer Save Button\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
                    },
                    "scope": "G",
                    "type": "script"
                  }
                ]
              }
            },
            "meta": {
              "name": "Button Save"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Main",
                "marginBottom": "15px",
                "marginLeft": "20px",
                "marginRight": "20px",
                "marginTop": "15px"
              },
              "text": "Save"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": [
                  {
                    "config": {
                      "script": "\tself.view.params.func_new_data \u003d False\n\tsystem.perspective.sendMessage(\"ResetVolunteerRegistration\", payload\u003d{}, scope\u003d\"session\")\n\tsystem.perspective.closeDock(\u0027RegisterVolunteer\u0027)\n\t"
                    },
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "id": "RegisterVolunteer",
                      "type": "close"
                    },
                    "scope": "C",
                    "type": "dock"
                  }
                ]
              }
            },
            "meta": {
              "name": "Button Cancel"
            },
            "position": {
              "basis": "120px",
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "Buttons/Secondary_Orange",
                "marginBottom": "15px",
                "marginTop": "15px"
              },
              "text": "Cancel"
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label",
              "visible": false
            },
            "position": {
              "basis": "50px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Text/Error_Message"
              },
              "text": "Please fill in all the mandatory fields correctly before saving."
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "showMessage",
                  "params": [
                    "message"
                  ],
                  "script": "\timport time\n\tself.props.text \u003d message\n\tself.meta.visible \u003d True\n\ttime.sleep(5)\n\tself.meta.visible \u003d False\n\t"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "65px",
          "shrink": 0
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": [
            "congregationId:",
            "Safe Space",
            {
              "$": [
                "ds",
                192,
                1757076174132
              ],
              "$columns": [
                {
                  "data": [],
                  "name": "id",
                  "type": "Integer"
                }
              ]
            }
          ]
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Default"
      }
    },
    "type": "ia.container.flex"
  }
}