{
  "custom": {
    "_devPulse": false,
    "_isDev": false
  },
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\troot \u003d self.getChild(\"root\")\n\t\n\ttry:\n\t\tsystem.perspective.sendMessage(\u0027mhProviderDashboardKpiHeader\u0027, payload \u003d {})\n\texcept:\n\t\troot.cleanKpis()"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "propConfig": {
    "custom._devPulse": {
      "onChange": {
        "enabled": null,
        "script": "\troot \u003d self.getChild(\"root\")\n\tif currentValue.value is True:\n\t\tpayload \u003d {}\n\t\tpayload[\u0027providerIds\u0027] \u003d [10,24]\n\t\tsystem.perspective.sendMessage(\u0027mhProviderDashboardKpiHeader\u0027, payload \u003d payload)\n\n\telse:\n\t\troot.cleanKpis()"
      },
      "persistent": true
    },
    "custom._isDev": {
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 185,
      "width": 1430
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "KPI1"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Active Providers",
            "Value": 0
          },
          "path": "Providers/Dashboard/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card",
            "marginLeft": "40px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "KPI2"
        },
        "position": {
          "basis": "270px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Total Referrals (Year to Date)",
            "Value": 0
          },
          "path": "Providers/Dashboard/Cards/KPI/Metric_Flex",
          "style": {
            "classes": "KPIs/KPI_Card"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "custom": {
          "testValue": [
            {
              "applicants": 1,
              "time": "9/1/2020"
            },
            {
              "applicants": 0,
              "time": "10/1/2020"
            },
            {
              "applicants": 1,
              "time": "11/1/2020"
            },
            {
              "applicants": 0,
              "time": "12/1/2020"
            },
            {
              "applicants": 4,
              "time": "1/1/2021"
            },
            {
              "applicants": 6,
              "time": "2/1/2021"
            }
          ]
        },
        "meta": {
          "name": "KPI3"
        },
        "position": {
          "basis": "345px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "New Referrals monthly",
            "Value": [
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793273
                  ],
                  "$ts": 1651363200000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793273
                  ],
                  "$ts": 1654041600000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793273
                  ],
                  "$ts": 1656633600000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793273
                  ],
                  "$ts": 1659312000000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793273
                  ],
                  "$ts": 1661990400000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793273
                  ],
                  "$ts": 1664582400000
                }
              }
            ]
          },
          "path": "Providers/Dashboard/Cards/KPI/Graph_Flex _bar",
          "style": {
            "classes": "KPIs/KPI_Card"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      },
      {
        "custom": {
          "testValue": [
            {
              "applicants": 1,
              "time": "9/1/2020"
            },
            {
              "applicants": 0,
              "time": "10/1/2020"
            },
            {
              "applicants": 1,
              "time": "11/1/2020"
            },
            {
              "applicants": 0,
              "time": "12/1/2020"
            },
            {
              "applicants": 4,
              "time": "1/1/2021"
            },
            {
              "applicants": 6,
              "time": "2/1/2021"
            }
          ]
        },
        "meta": {
          "name": "KPI4"
        },
        "position": {
          "basis": "345px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "params": {
            "Title": "Aproved referrals monthly",
            "Value": [
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793278
                  ],
                  "$ts": 1651363200000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793278
                  ],
                  "$ts": 1654041600000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793278
                  ],
                  "$ts": 1656633600000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793278
                  ],
                  "$ts": 1659312000000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793278
                  ],
                  "$ts": 1661990400000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1666945793278
                  ],
                  "$ts": 1664582400000
                }
              }
            ]
          },
          "path": "Providers/Dashboard/Cards/KPI/Graph_Flex _bar",
          "style": {
            "classes": "KPIs/KPI_Card",
            "marginRight": "40px"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "alignContent": "flex-start",
      "alignItems": "center",
      "style": {
        "classes": "KPIs/KPI_Flex_Container",
        "overflow": "hidden",
        "overflowY": "hidden"
      }
    },
    "scripts": {
      "customMethods": [
        {
          "name": "setKpi1_ActiveProviders",
          "params": [
            "payload"
          ],
          "script": "\t# Active Providers: number of Providers that have had a Referral in the last 6 months\t\n\t\n\tquery \u003d \"\"\"\nDECLARE @dateFrom datetime \u003d ?\n\nSELECT COUNT(DISTINCT [Referral].[ProviderId]) AS [activeProvidersQty]\nFROM [participant].[Referral]\n\tLEFT JOIN [organization].[Provider] on [Referral].[providerId] \u003d [Provider].[id]\n\tLEFT JOIN [organization].[ProviderType] ON [Provider].[providerTypeId] \u003d [ProviderType].[id]\nWHERE [Referral].[timeCreated] \u003e\u003d @dateFrom\n\tAND [Provider].[timeRetired] IS NULL\n\tAND [ProviderType].[providerTypeName] in (\u0027Community Partner\u0027, \u0027Medical Facility\u0027, \u0027Law Enforcement\u0027)\n\tAND [Provider].[id] in (*?)\n\"\"\"\n\t# TODO Check part of where clause: \u0027AND [ProviderType].[id] in (0,2,3)\u0027 or ProviderType timeRetired should be set to some value\n\n\targs \u003d []\n\t\n\t###############################################\n\tnow \u003d system.date.now()\n\tsixMonthsBefore \u003d system.date.addMonths(now, -6)\n\targs +\u003d [sixMonthsBefore]\n\n\t################################################\n\timport extend.query\n\n\tproviderIds \u003d payload.get(\u0027providerIds\u0027)\n\t\n\twhereIn \u003d \u0027[Provider].[id] in (*?)\u0027\n\twhereInFix, providerIdsFix \u003d extend.query.getWhereInParamFix(whereIn, providerIds)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d providerIdsFix\n\n\t#providerIds \u003d  [9, 10, 24, 30]\t\n\t# Expect providerIds as  list \n\n\tresult \u003d system.db.runPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\t\n\tkpi1 \u003d self.getChild(\"KPI1\")\n\tkpi1.props.params.Title \u003d \u0027Active Providers\u0027\n\tkpi1.props.params.Value \u003d result.getValueAt(0,\u0027activeProvidersQty\u0027)\n\n"
        },
        {
          "name": "setKpi2_TotalReferrals",
          "params": [
            "payload"
          ],
          "script": "\t# Total Referrals (Year To Date): total count of referrals since 1/1 of the current year\n\t\n\tkpi2 \u003d self.getChild(\"KPI2\")\n\n\tquery \u003d \"\"\"\nDECLARE @dateFrom datetime \u003d ?\nSELECT COUNT([Referral].[id]) totalReferrals\nFROM [participant].[Referral]\n\tLEFT JOIN [organization].[Provider] on [Referral].[providerId] \u003d [Provider].[id]\n\tLEFT JOIN [organization].[ProviderType] ON [Provider].[providerTypeId] \u003d [ProviderType].[id]\nWHERE [Referral].[timeCreated] \u003e\u003d @dateFrom\n\tAND [Provider].[timeRetired] IS NULL\n\tAND [ProviderType].[providerTypeName] in (\u0027Community Partner\u0027, \u0027Medical Facility\u0027, \u0027Law Enforcement\u0027)\n\tAND [Provider].[id] in (*?)\n\"\"\"\n\n\twherePlus \u003d \u0027\u0027\n\targs \u003d []\n\tnow \u003d system.date.now()\n\tyearStart \u003d system.date.getDate(system.date.getYear(now), 0, 1)\n\targs +\u003d [yearStart]\n\n\t################################################\n\timport extend.query\n\n\tproviderIds \u003d payload.get(\u0027providerIds\u0027)\n\t\n\twhereIn \u003d \u0027[Provider].[id] in (*?)\u0027\n\twhereInFix, providerIdsFix \u003d extend.query.getWhereInParamFix(whereIn, providerIds)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d providerIdsFix\n\n\t#providerIds \u003d  [9, 10, 24, 30]\t\n\t# Expect providerIds as  list \n\n\tresult \u003d system.db.runScalarPrepQuery(query, args,\u0027HMSOps\u0027)\n\t#totalReferralsYtd \u003d result  #.getValueAt(0,\u0027totalReferrals\u0027)\t\n\t\n\tkpi2.props.params.Title \u003d \u0027Total Referrals (Year to Date)\u0027\n\tkpi2.props.params.Value \u003d result #totalReferralsYtd #result.getValueAt(0,\u0027totalReferrals\u0027)\n\n\t"
        },
        {
          "name": "setKpi3_NewReferrals",
          "params": [
            "payload"
          ],
          "script": "\t# New Referrals Monthly: count of referrals per month in a XY Chart\n\t\n\tkpi3 \u003d self.getChild(\"KPI3\")\n\targs \u003d []\n\twherePlus \u003d \u0027\u0027\n\t\n\tquery \u003d \"\"\"\t\nDECLARE @dateFrom datetime \u003d ?\n\t\n;WITH cte AS (\nSELECT [Referral].[id]\n, MONTH([Referral].[timeCreated]) AS [month]\n, YEAR ([Referral].[timeCreated]) AS [year]\nFROM [participant].[Referral]\n\tLEFT JOIN [organization].[Provider] on [Referral].[providerId] \u003d [Provider].[id]\n\tLEFT JOIN [organization].[ProviderType] ON [Provider].[providerTypeId] \u003d [ProviderType].[id]\nWHERE [Referral].[timeCreated] \u003e\u003d @dateFrom\n\tAND [ProviderType].[providerTypeName] in (\u0027Community Partner\u0027, \u0027Medical Facility\u0027, \u0027Law Enforcement\u0027)\n\tAND [Provider].[id] in (*?)\n)\n\nSELECT \n\t cte.[year]\n\t,cte.[month]\n\t,COUNT(cte.[id]) as [referralPerMonth]\nFROM cte\nGROUP BY cte.[year], cte.[month]\nORDER BY cte.[year], cte.[month]\n\"\"\"\n\n\t################################################\n\tnow \u003d system.date.now()\n\tyearStart \u003d system.date.getDate(system.date.getYear(now), 0, 1)\n\tmonthStart \u003d yearStart \u003d system.date.getDate(system.date.getYear(now), system.date.getMonth(now), 1)\n\tsixMonthsBefore \u003d system.date.addMonths(monthStart, -5)\n\targs +\u003d [sixMonthsBefore]\n\t\n\t################################################\n\timport extend.query\n\n\tproviderIds \u003d payload.get(\u0027providerIds\u0027)\n\t\n\twhereIn \u003d \u0027[Provider].[id] in (*?)\u0027\n\twhereInFix, providerIdsFix \u003d extend.query.getWhereInParamFix(whereIn, providerIds)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d providerIdsFix\n\n\t#providerIds \u003d  [9, 10, 24, 30]\t\n\t# Expect providerIds as  list \n\n\tresult \u003d system.db.runPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\t\n\t# Privide series for all 6 months even if result from DB is empty\n\t_values \u003d []\n\tfor num in range(6):\n\t\t_time \u003d system.date.addMonths(sixMonthsBefore, num)\n\t\t_month \u003d system.date.getMonth(_time) + 1\n\t\t_year \u003d system.date.getYear(_time)\n\t\t#ystem.perspective.print((_time, _month, _year))\n\t\t_lst \u003d [row[\u0027referralPerMonth\u0027] for row in result if row[\u0027year\u0027] \u003d\u003d _year and row[\u0027month\u0027] \u003d\u003d _month]\n\t\t_val \u003d _lst[0] if len(_lst) \u003e 0 else 0\n\t\t\n\t\tif len(_lst) \u003e 1:\n\t\t\traise ValueError(\u0027More than one element in the list!\u0027)\n\n\t \t_values.append(dict(applicants \u003d _val, time \u003d _time))\n\n\tkpi3.props.params.Value \u003d _values\n\t\n\tkpi3.props.params.Title \u003d \u0027New Referrals monthly\u0027\n\n#\tExample:\n#\t_values \u003d \"\"\"\t\n#[\n#  {\n#\t\t\"applicants\": 1,\n#\t\t\"time\": \"9/1/2020\"\n#\t  },\n# \t {\n#\t\t\"applicants\": 0,\n#\t\t\"time\": \"10/1/2020\"\n#\t  },\n#\t  {\n#\t\t\"applicants\": 1,\n#\t\t\"time\": \"11/1/2020\"\n#\t  },\n#\t]\n\t\"\"\"\n\t"
        },
        {
          "name": "setKpi4_ApprovedReferrals",
          "params": [
            "payload"
          ],
          "script": "\t# Accepted Referrals Monthly: change this KPI to Approved Referrals Monthly. It is the count of referrals that changed to the approved status in a month.\n\n\tkpi4 \u003d self.getChild(\"KPI4\")\n\t\n\tquery \u003d \"\"\"\t\nDECLARE @dateFrom datetime \u003d ?\n\n;WITH cte AS (\nSELECT [ReferralLog].[id]\n, MONTH([ReferralLog].[timeCreated]) AS [month]\n, YEAR ([ReferralLog].[timeCreated]) AS [year]\nFROM [participant].[ReferralLog]\n\tLEFT JOIN [participant].[Referral] ON [Referral].[id] \u003d [ReferralLog].[ReferralId]\n\tLEFT JOIN [participant].[ReferralStatus] ON [ReferralStatus].[id] \u003d [ReferralLog].[ReferralStatus_ID]\n\tLEFT JOIN [organization].[Provider] on [Referral].[providerId] \u003d [Provider].[id]\n\tLEFT JOIN [organization].[ProviderType] ON [Provider].[providerTypeId] \u003d [ProviderType].[id]\nWHERE [ReferralLog].[timeCreated] \u003e\u003d @dateFrom\n\tAND [Provider].[timeRetired] IS NULL\n\tAND [ReferralLog].[ReferralStatus_ID] \u003d 5\n\tAND [ProviderType].[providerTypeName] in (\u0027Community Partner\u0027, \u0027Medical Facility\u0027, \u0027Law Enforcement\u0027)\n\tAND [Provider].[id] in (*?)\n)\n\nSELECT \n\t cte.[year]\n\t,cte.[month]\n\t,COUNT(cte.[id]) as approvedReferralPerMonth\nFROM cte\nGROUP BY cte.[year], cte.[month]\nORDER BY cte.[year], cte.[month]\n\"\"\"\n\t\n\targs \u003d []\n\t\n\t################################################\n\tnow \u003d system.date.now()\n\tyearStart \u003d system.date.getDate(system.date.getYear(now), 0, 1)\n\tmonthStart \u003d yearStart \u003d system.date.getDate(system.date.getYear(now), system.date.getMonth(now), 1)\n\tsixMonthsBefore \u003d system.date.addMonths(monthStart, -5)\n\targs +\u003d [sixMonthsBefore]\n\t\n\t################################################\n\timport extend.query\n\n\tproviderIds \u003d payload.get(\u0027providerIds\u0027)\n\t\n\twhereIn \u003d \u0027[Provider].[id] in (*?)\u0027\n\twhereInFix, providerIdsFix \u003d extend.query.getWhereInParamFix(whereIn, providerIds)\n\t\n\tquery \u003d query.replace(whereIn, whereInFix)\n\targs +\u003d providerIdsFix\n\n\t#providerIds \u003d  [9, 10, 24, 30]\t\n\t# Expect providerIds as  list \n\n\tresult \u003d system.db.runPrepQuery(query, args,\u0027HMSOps\u0027)\t\n\n\t_values \u003d []\n\tfor num in range(6):\n\t\t_time \u003d system.date.addMonths(sixMonthsBefore, num)\n\t\t_month \u003d system.date.getMonth(_time) + 1\n\t\t_year \u003d system.date.getYear(_time)\n\t\t\n\t\t#ystem.perspective.print((_time, _month, _year))\n\n\t\t_val \u003d 0\n\t\tfor row in result:\n\t\t\t if row[\u0027year\u0027] \u003d\u003d _year and row[\u0027month\u0027] \u003d\u003d _month:\n\t\t\t \t_val \u003d row[\u0027approvedReferralPerMonth\u0027]\n\t\t\t \tbreak\n\t\t\n\t \t_values.append(dict(applicants \u003d _val, time \u003d _time))\n\n\tkpi4.props.params.Title \u003d \u0027Aproved referrals monthly\u0027\n\tkpi4.props.params.Value \u003d _values\n\t\n\t\n"
        },
        {
          "name": "cleanKpis",
          "params": [],
          "script": "\tkpi1 \u003d self.getChild(\"KPI1\")\n\tkpi2 \u003d self.getChild(\"KPI2\")\n\tkpi3 \u003d self.getChild(\"KPI3\")\n\tkpi4 \u003d self.getChild(\"KPI4\")\t\n\n\tkpi1.props.params.Title \u003d \u0027\u0027\n\tkpi1.props.params.Value \u003d 0\n\t\t\n\tkpi2.props.params.Title \u003d \u0027\u0027\n\tkpi2.props.params.Value \u003d 0\n\n\tkpi3.props.params.Title \u003d \u0027\u0027\n\tkpi3.props.params.Value \u003d []\n\n\tkpi4.props.params.Title \u003d \u0027\u0027\n\tkpi4.props.params.Value \u003d []"
        }
      ],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "mhProviderDashboardKpiHeader",
          "pageScope": true,
          "script": "\t\n\t# Active Providers: number of Providers that have had a Referral in the last 6 months\n\t# Total Referrals (Year To Date): total count of referrals since 1/1 of the current year\n\t# New Referrals Monthly: count of referrals per month in a XY Chart\n\t# Accepted Referrals Monthly: change this KPI to Approved Referrals Monthly. It is the count of referrals that changed to the approved status in a month.\n\n\n\t\n\tself.setKpi1_ActiveProviders(payload)\n\tself.setKpi2_TotalReferrals(payload)\n\tself.setKpi3_NewReferrals(payload)\n\tself.setKpi4_ApprovedReferrals(payload)\n\n\t\n\t\n\n\n\t",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}