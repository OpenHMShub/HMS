{
  "custom": {
    "XdevPulse": false
  },
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\troot \u003d self.getChild(\"root\")\n\t\n\ttry:\n\t\tpayload \u003d {}\n\t\troot.doByPayload(payload)\n\texcept:\n\t\troot.cleanKpis()\n"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "trackID": ""
  },
  "propConfig": {
    "custom.XdevPulse": {
      "onChange": {
        "enabled": false,
        "script": "\troot \u003d self.getChild(\"root\")\n\tif currentValue.value is True:\n\t\tpayload \u003d {}\n\t\tpayload[\u0027providerId\u0027] \u003d 30\n\t\troot.doByPayload(payload)\n\n\telse:\n\t\troot.cleanKpis()\n\t\t\n"
      },
      "persistent": true
    },
    "params.trackID": {
      "onChange": {
        "enabled": null,
        "script": "\troot \u003d self.getChild(\"root\")\n\t\t\n\tif currentValue.value is not None:\n\t\tpayload \u003d {}\n\t\tpayload[\u0027providerId\u0027] \u003d currentValue.value\n\t\troot.doByPayload(payload)\n\telse:\n\t\troot.cleanKpis()"
      },
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 140,
      "width": 300
    }
  },
  "root": {
    "children": [
      {
        "custom": {
          "testValue": [
            {
              "applicants": 1,
              "time": "9/1/2020"
            },
            {
              "applicants": 0,
              "time": "10/1/2020"
            },
            {
              "applicants": 1,
              "time": "11/1/2020"
            },
            {
              "applicants": 0,
              "time": "12/1/2020"
            },
            {
              "applicants": 4,
              "time": "1/1/2021"
            },
            {
              "applicants": 6,
              "time": "2/1/2021"
            }
          ]
        },
        "meta": {
          "name": "KPI1"
        },
        "position": {
          "basis": "345px",
          "grow": 1
        },
        "props": {
          "params": {
            "Title": "Referrals Over Time",
            "Value": [
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1622925855487
                  ],
                  "$ts": 1609459200000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1622925855487
                  ],
                  "$ts": 1612137600000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1622925855487
                  ],
                  "$ts": 1614556800000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1622925855487
                  ],
                  "$ts": 1617235200000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1622925855487
                  ],
                  "$ts": 1619827200000
                }
              },
              {
                "applicants": 0,
                "time": {
                  "$": [
                    "ts",
                    192,
                    1622925855487
                  ],
                  "$ts": 1622505600000
                }
              }
            ]
          },
          "path": "Providers/Detail/Cards/Summary/KPI/Graph_Flex _bar",
          "style": {
            "classes": "KPIs/KPI_Card_Provider"
          },
          "useDefaultViewHeight": true
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "alignContent": "flex-start",
      "alignItems": "center",
      "style": {
        "overflow": "hidden",
        "overflowY": "hidden"
      }
    },
    "scripts": {
      "customMethods": [
        {
          "name": "setKpi1_ReferralsOverTime",
          "params": [
            "payload"
          ],
          "script": "\tkpi1 \u003d self.getChild(\"KPI1\")\n\t\n\t\n\tquery \u003d \"\"\"\nDECLARE @dateFrom datetime \u003d ?\n\t\t\n;WITH cte AS (\nSELECT [Referral].[id]\n, MONTH([Referral].[timeCreated]) AS [month]\n, YEAR ([Referral].[timeCreated]) AS [year]\nFROM [participant].[Referral]\nWHERE [timeCreated] \u003e\u003d @dateFrom\n\tAND [ProviderId] \u003d ?\n)\n\nSELECT \n\t cte.[year]\n\t,cte.[month]\n\t,COUNT(cte.[id]) as [referralPerMonth]\nFROM cte\nGROUP BY cte.[year], cte.[month]\nORDER BY cte.[year], cte.[month]\n\"\"\"\n\targs \u003d []\n\t################################################\n\tnow \u003d system.date.now()\n\tyearStart \u003d system.date.getDate(system.date.getYear(now), 0, 1)\n\tmonthStart \u003d yearStart \u003d system.date.getDate(system.date.getYear(now), system.date.getMonth(now), 1)\n\tsixMonthsBefore \u003d system.date.addMonths(monthStart, -5)\n\targs +\u003d [sixMonthsBefore]\n\n\t################################################\n\tproviderId \u003d payload.get(\u0027providerId\u0027)\n\targs +\u003d [providerId]\n\t#providerIds \u003d  [9, 10, 24, 30]\t\n\t# Expect providerIds as  list \n\n\tresult \u003d system.db.runPrepQuery(query, args,\u0027HMSOps\u0027)\n\t\n\t\n\t# Examples:providerId: 9, 10, 24, 30\t\n\t# Expect providerIds as  list \n\t\n\t# Privide series for all 6 months even if result from DB is empty\n\t_values \u003d []\n\tfor num in range(6):\n\t\t_time \u003d system.date.addMonths(sixMonthsBefore, num)\n\t\t_month \u003d system.date.getMonth(_time) + 1\n\t\t_year \u003d system.date.getYear(_time)\n\t\t#ystem.perspective.print((_time, _month, _year))\n\t\t_lst \u003d [row[\u0027referralPerMonth\u0027] for row in result if row[\u0027year\u0027] \u003d\u003d _year and row[\u0027month\u0027] \u003d\u003d _month]\n\t\t_val \u003d _lst[0] if len(_lst) \u003e 0 else 0\n\t\t\n\t\tif len(_lst) \u003e 1:\n\t\t\traise ValueError(\u0027More than one element in the list!\u0027)\n\t\n\t\t_values.append(dict(applicants \u003d _val, time \u003d _time))\n\n\n\tkpi1.props.params.Title \u003d \u0027Referrals Over Time\u0027\n\tkpi1.props.params.Value \u003d _values\n\n"
        },
        {
          "name": "cleanKpis",
          "params": [],
          "script": "\tkpi1 \u003d self.getChild(\"KPI1\")\n\n\tkpi1.props.params.Title \u003d \u0027\u0027\n\tkpi1.props.params.Value \u003d []\n"
        },
        {
          "name": "doByPayload",
          "params": [
            "payload"
          ],
          "script": "\tself.setKpi1_ReferralsOverTime(payload)\n"
        }
      ],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "mhProvidersDcsKPI_HeaderTop2",
          "pageScope": true,
          "script": "\t\n\tself.doByPayload(payload)\n\t",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}