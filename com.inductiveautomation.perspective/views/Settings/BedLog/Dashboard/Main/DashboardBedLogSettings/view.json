{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\tself.session.custom.dateRangeFromDate \u003d system.date.format(system.date.addYears(system.date.now(), -1),\u0027MM-dd-yyyy\u0027)\n\tself.session.custom.dateRangeToDate \u003d system.date.format(system.date.now(),\u0027MM-dd-yyyy\u0027)\n#\tsystem.perspective.sendMessage(\"SetDropdown\", payload \u003d {}, scope \u003d \"view\")\n\t"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "width": 1680
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "50px",
          "display": false
        },
        "props": {
          "alignVertical": "bottom",
          "style": {
            "classes": "Text/Summary_Title",
            "textAlign": "left"
          },
          "text": "Settings:Bed Log (Under Construction)"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Edit"
        },
        "position": {
          "basis": "265px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.rowData": {
            "onChange": {
              "enabled": null,
              "script": "\tpass\n#\tsystem.perspective.print(\u0027data\u003d\u0027+str(currentValue.value))"
            }
          },
          "props.params.rowData.age": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0 and \u0027age\u0027 in value[0] and value[0][\u0027age\u0027] !\u003d None:\n\t\t\treturn value[0][\u0027age\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.bed": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027bedName\u0027 in value[0] and value[0][\u0027bedName\u0027] !\u003d None:\n\t\treturn value[0][\u0027bedName\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.bedLogId": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027bedLogId\u0027 in value[0] and value[0][\u0027bedLogId\u0027] !\u003d None:\n\t\treturn value[0][\u0027bedLogId\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.checkInDate": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027eventStart\u0027 in value[0] and value[0][\u0027eventStart\u0027] !\u003d None:\n\t\treturn value[0][\u0027eventStart\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.checkOutDate": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027eventEnd\u0027 in value[0] and value[0][\u0027eventEnd\u0027] !\u003d None:\n\t\treturn value[0][\u0027eventEnd\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.exitDestinationId": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027exitDestinationId\u0027 in value[0] and value[0][\u0027exitDestinationId\u0027] !\u003d None:\n\t\treturn value[0][\u0027exitDestinationId\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.exitdestination": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027ExitDestination\u0027 in value[0] and value[0][\u0027ExitDestination\u0027] !\u003d None:\n\t\treturn value[0][\u0027ExitDestination\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.gender": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027gender\u0027 in value[0] and value[0][\u0027gender\u0027] !\u003d None:\n\t\treturn value[0][\u0027gender\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.participantName": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027name\u0027 in value[0] and value[0][\u0027name\u0027] !\u003d None:\n\t\treturn value[0][\u0027name\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.programId": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0 and \u0027programId\u0027 in value[0] and value[0][\u0027programId\u0027] !\u003d None:\n\t\t\treturn value[0][\u0027programId\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.programName": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027  and len(value) !\u003d 0 and \u0027associatedProgram\u0027 in value[0] and value[0][\u0027associatedProgram\u0027] !\u003d None:\n\t\treturn value[0][\u0027associatedProgram\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.room": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027roomName\u0027 in value[0] and value[0][\u0027roomName\u0027] !\u003d None:\n\t\treturn value[0][\u0027roomName\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.rowData.shelter": {
            "binding": {
              "config": {
                "path": "../Table.props.params.SelectedRow"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027 and len(value) !\u003d 0  and \u0027facilityName\u0027 in value[0] and value[0][\u0027facilityName\u0027] !\u003d None:\n\t\treturn value[0][\u0027facilityName\u0027]\n\telse:\n\t\treturn \u0027\u0027",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "rowData": {}
          },
          "path": "Settings/BedLog/Dashboard/Main/Edit/BedLogSettingsEdit",
          "style": {
            "marginLeft": "40px",
            "marginRight": "40px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Filter"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "props.params.SelectedValue": {
            "onChange": {
              "enabled": null,
              "script": "\tself.getSibling(\"Table\").refreshBinding(\"props.params.whereDateRange\")"
            }
          }
        },
        "props": {
          "params": {
            "SelectedValue": "Current",
            "searchText": "",
            "selectedBed": null,
            "selectedDateRange": " 2025-06-06 16:14:23.783 to 2025-06-06 16:14:23.783",
            "selectedRoom": null,
            "selectedShelter": "(\u0027Test New Shelter\u0027, \u0027Test New Shelter\u0027)"
          },
          "path": "Settings/BedLog/Dashboard/Main/Filter/TableFilter_BedLog",
          "style": {
            "marginLeft": "40px",
            "marginRight": "40px",
            "marginTop": "5px"
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "320px",
          "grow": 1
        },
        "propConfig": {
          "props.params.SelectedRow": {
            "onChange": {
              "enabled": null,
              "script": "\tpass\n#\tsystem.perspective.print(\u0027data\u003d\u0027+str(currentValue.value))"
            }
          },
          "props.params.where": {
            "binding": {
              "config": {
                "path": "../Filter.props.params.SelectedValue"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027:\n\t\tif value \u003d\u003d \"Current\":\n\t\t\twhere \u003d \"[TableJoin].eventEnd IS NULL\"\n#\t\t\twhere \u003d \"1\u003d1\"\n\t\telif value \u003d\u003d \"Past\":\n\t\t\twhere \u003d \"[TableJoin].eventEnd IS NOT NULL\"\n\telse:\n\t\twhere \u003d \"1\u003d1\"\n\treturn where",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.whereBed": {
            "binding": {
              "config": {
                "path": "../Filter.props.params.selectedBed"
              },
              "transforms": [
                {
                  "code": "\tbeds \u003d value\n\twhereBeds \u003d \"1\u003d1\"\n\tif beds \u003d\u003d None :\n\t\twhereBeds \u003d \"1\u003d1\"\n\telse:\n\t\twhereBeds \u003d \"[TableJoin].bedId \u003d \" +str(beds)\n\treturn whereBeds",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.whereDateRange": {
            "binding": {
              "config": {
                "path": "../Filter.props.params.selectedDateRange"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d None and value !\u003d \u0027\u0027:\n\t\tCheckEventEnd \u003d self.getSibling(\"Filter\").props.params.SelectedValue\n\t\tif CheckEventEnd \u003d\u003d \"Current\":\n\t\t\twhere \u003d \"1\u003d1\"\n\t\telif CheckEventEnd \u003d\u003d \"Past\":\n\t\t\tstartDate \u003d (value.split(\u0027 to \u0027)[0]).replace(\u0027 \u0027,\u0027\u0027)\n\t\t\tendDate \u003d (value.split(\u0027 to \u0027)[1]).replace(\u0027 \u0027,\u0027\u0027)\n\t\t\twhere \u003d \"[TableJoin].eventEnd \u003e \u0027\" + str(startDate) + \"\u0027 and [TableJoin].eventEnd \u003c \u0027\" + str(endDate) + \" 23:59:59\u0027\"\n\telse:\n\t\twhere \u003d \"1\u003d1\"\n\treturn where",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.whereRoom": {
            "binding": {
              "config": {
                "path": "../Filter.props.params.selectedRoom"
              },
              "transforms": [
                {
                  "code": "\troom \u003d value\n\twhereRooms \u003d \"1\u003d1\"\n\tif room \u003d\u003d None :\n\t\twhereRooms \u003d \"1\u003d1\"\n\telse:\n\t\twhereRooms \u003d \"[TableJoin].roomId \u003d \" +str(room)\n\treturn whereRooms",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.params.whereSearchText": {
            "binding": {
              "config": {
                "path": "../Filter.props.params.searchText"
              },
              "type": "property"
            }
          },
          "props.params.whereShelter": {
            "binding": {
              "config": {
                "path": "../Filter.props.params.selectedShelter"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "SelectedRow": [],
            "searchText": "\u0027%%\u0027"
          },
          "path": "Settings/BedLog/Dashboard/Main/Table/BedLogTable",
          "style": {
            "marginLeft": "40px",
            "marginRight": "40px"
          }
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Background/Alternative"
      }
    },
    "type": "ia.container.flex"
  }
}